function A(A){let B=function(A){let B=0;function t(){return A[B++]<<8|A[B++]}let e=t(),r=1,g=[0,1];for(let A=1;A<e;A++)g.push(r+=t());let n=t(),o=B;B+=n;let C=0,w=0;function i(){return 0==C&&(w=w<<8|A[B++],C=8),w>>--C&1}const Q=2**31,c=Q>>>1,l=Q-1;let D=0;for(let A=0;A<31;A++)D=D<<1|i();let E=[],f=0,I=Q;for(;;){let A=Math.floor(((D-f+1)*r-1)/I),B=0,t=e;for(;t-B>1;){let e=B+t>>>1;A<g[e]?t=e:B=e}if(0==B)break;E.push(B);let n=f+Math.floor(I*g[B]/r),o=f+Math.floor(I*g[B+1]/r)-1;for(;0==((n^o)&c);)D=D<<1&l|i(),n=n<<1&l,o=o<<1&l|1;for(;n&~o&536870912;)D=D&c|D<<1&l>>>1|i(),n=n<<1^c,o=(o^c)<<1|c|1;f=n,I=1+o-n}let M=e-4;return E.map((B=>{switch(B-M){case 3:return M+65792+(A[o++]<<16|A[o++]<<8|A[o++]);case 2:return M+256+(A[o++]<<8|A[o++]);case 1:return M+A[o++];default:return B-1}}))}(Uint8Array.from(atob(A),(A=>A.charCodeAt(0)))),t=0;return()=>B[t++]}function B(A){return 1&A?~A>>1:A>>1}function t(A,B){let t=Array(A);for(let e=0;e<A;e++)t[e]=1+B();return t}function e(A,B){let t=Array(A);for(let e=0,r=-1;e<A;e++)t[e]=r+=1+B();return t}function r(A,t){let e=Array(A);for(let r=0,g=0;r<A;r++)e[r]=g+=B(t());return e}function g(A,t,e){if(0==t)return[];let g=[r(A,e)];for(let r=1;r<t;r++){let t=Array(A),n=g[r-1];for(let r=0;r<A;r++)t[r]=n[r]+B(e());g.push(t)}return g}function n(A,B){let t=1+B(),r=e(t,B),n=g(t,A,B);return r.map(((A,B)=>[A,n.map((A=>A[B]))]))}function o(A,B){let r=1+B(),n=B(),o=1+B(),C=e(o,B),w=t(o,B),i=g(o,A,B);return C.map(((A,B)=>[A,i.map((A=>A[B])),w[B],r,n]))}function C(A){let B=function(A){let B=e(A(),A),r=A(),g=e(r,A),n=t(r,A);return[...B.map((A=>[A,1])),...g.map(((A,B)=>[A,n[B]]))].sort(((A,B)=>A[0]-B[0]))}(A);return A=>function(A,B){for(let[t,e]of A){let A=B-t;if(A<0)break;if(A<e)return!0}return!1}(B,A)}function w(A,B){for(let[t,e,r,g,n]of A){let A=B-t;if(A<0)break;if(r>0){if(A<g*r&&A%g==0){let B=A/g;return e.map((A=>A+B*n))}}else if(0==A)return e}}function i(A){return A.replace(/[^\x20-\x21\x23-\x7E]/gu,(A=>`{${A.codePointAt(0).toString(16).padStart(2,"0").toUpperCase()}}`))}function Q(A){if("string"!=typeof A)throw new TypeError("expected string");return[...A].map((A=>A.codePointAt(0)))}function c(A,B,t){let e=[],r=[],g=[r];function n(){e.length>0&&(r.push({v:e}),e=[])}for(let o=0;o<A.length;o++){if(B){let[t,e]=B(A,o);if(t>0){n(),r.push({e:e,u:A.slice(o,o+t)}),o+=t-1;continue}}let C=t(A[o]);Array.isArray(C)?e.push(...C):(n(),C?r.push(C):(r=[],g.push(r)))}return n(),g}let l=A("ABIAAQB6AEAAOAAoACYAHwAiABgAFgAOAAsACwAMAY8AfgADApQhCD9xcXFxcXFxcW5hcbsGoY8Bf9URLHl4F4mAXgAn6F1DBPgbACv4ZqZU5nHucWhm/wCYRQRDAJcASQwtAe8FzAOHOfQyBvsC+GifBANGRZDdAC4CJSwCIi8GFTgCJSwmLyQpNix4JTpMcXV+rQEGGggji3raLA6mlfECCAxleXQSxKUjTyElAibgTiIC0gHv1AZQBLNgQ6JNVpJS9wlNAHRfAXiOWADp7D9QqYZpggAHGwscRNcB8gB0/yE9LHw3ZzYcITAjCk8BAlASEDEWAjEMCTgFzVsHDywSYVMEXgVBSgCFDAQFAckCphERETMDM2uMA88yLkEnJgYTLi6LB7kBPw0nVwsQ4gE7YHTHG0MAJpANNxIqJ15uH1IFEQDKAm4FfB2eATAAeIwtpywlOBhEJwRXng4sHLli4Q5IYl7584oYIwciAIlLCW1CAFQULjWxMQNQS/8RUSEBKAMWiQavLFEEUAT7AK0E1WULFc3RYR4GDAkRFRAxEhEDAQEABx8IASgjAAJR4QwFEpUiGzjHDw5ylPEUpACEAX4jBRwWExgAGwkSAkFoCRgIAA5XWI6qYXEEjBQARAEhDhAt2CcBFwASAEoTJBMCNQUSphsCAEEXDnKU8Q4OA70WBRQQHmoJLG5nEwoIDmNYjqphcQSGGgBJASASEDPYKA9QDyQSCgQMShMjAxQGAzUCcRkkAIsAuokwVSwLAmIGPhgnKACLCRkAEicBAQbgO8+xBTABBxcQJgAEQDf6MASDMBD0HwwoDAsu9wDA6hMtcgxWABIITU3k0SHxGPGp8QBhA+dvYj7xAEEFTY2l8Q8x0RWBKEEG8QtKx0dLASBJGLFQ8QBfWx4AFKXRDyrPFXMcIgEPEjzcS9Wn/KALJxnXU2YJOBWKOmP82gdIgmNcRsDi+p7FBLYbwm9Uzs1RfCbNpY30PNDOtZBhbqPBybOPeWa7oi+ySNuja7E79Fz+oJqkWRGdXLqRl46pfoUDu0uKXTiGuFf3GtJzAXtJmxI3V8am/mpQnjfi99U7ZkojTh6fKYexodlCUm8Nn5tkJXqdPwxaQiU29Pa8nQxhFccS0ZzA2p+XNo3r68FBGjQNasxwtQH/0ELiOQLNuyc0YqOxCPnfFsvASXVP7enrn5p48UHDGS6NU/kYR37WSJ7+CN+nV4NqWlRTc/nQOuWoDD2Cnkn26E21fE+79xMXG2voqdtyef5eUY6MOoAAPIvdUDW+i16JSxe2+srXAYVvzbE8SKhyxzjFf2rMlgMycfXR8nl6/xF97xDwBSNLExVnK4YUGbAMpgGeHD0vHVXsIK20HyDdJQ9a5Uhwta5o+Tw/HpthmalqVX7v90SgUzjZaEahH3JPOhT8k+LFPClF+c5gMeKg");const D=C(l),E=C(l),f=C(l),I=C(l),M=C(l),u=C(l),F=C(l);let U=A("");const a=C(U),K=C(U),Y=C(U),N=function(A){let B=[];for(;;){let t=A();if(0==t)break;B.push(o(t,A))}for(;;){let t=A()-1;if(t<0)break;B.push(n(t,A))}return B.flat().sort(((A,B)=>A[0]-B[0]))}(U),k=C(U),s=U()&&function(A){const B=C(A),t=C(A),e=C(A),r=C(A),g=C(A),n=C(A),o=C(A),w=C(A),i=65039,Q=8419;function c(A,t){let e=A[t],C=A[t+1],w=o(e);if(w&&C&&n(C))return[2,[e,C]];let Q=w||r(e);if(C==i){if(Q)return[2,[e]];if(g(e))return[2,[e,i]]}return w||Q||B(e)||n(e)?[1,[e]]:void 0}return function(A,r){let g=A[r],n=A.length;if(r+1<n&&B(g)){let t=A[r+1];if(B(t))return[2,[g,t]]}let o=t(g);if(r+1<n&&o&&A[r+1]==Q)return[2,[g,Q]];if(r+2<n&&(o||e(g))&&A[r+1]==i&&A[r+2]==Q)return[3,o?[g,Q]:[g,i,Q]];let C=c(A,r);if(!C)return[0];let[l,D]=C;l+=r;let E=!1;for(;l+1<n&&8205===A[l];){let B=c(A,l+1);if(!B)break;E=!0,l+=1+B[0],D.push(8205,...B[1])}if(!E&&l+2<n&&w(A[l])){let B=l+1;for(;B+1<n&&w(A[B]);)B++;if(917631==A[B++])return[B-r,D]}return[l-r,D]}}(U);function G(A){return A.flatMap((A=>A.e??function(A,B){return Q(String.fromCodePoint(...B).normalize("NFC"))}(0,A.v)))}function h(A,B){return new Error(`Disallowed label "${i(String.fromCodePoint(...A))}": ${B}`)}function J(A){const B=45;return c(Q(A),s,(A=>{if(a(A))return;if(Y(A))return[];if(K(A))return[A];let B=w(N,A);if(B)return B;throw new Error(`Disallowed character "${i(String.fromCodePoint(A))}"`)})).map((A=>{let t=G(A);if(t.length>=4&&t[2]==B&&t[3]==B&&120==t[0]&&110==t[1]){let B;try{B=function(A){let B=[],t=A.lastIndexOf(45);for(let e=0;e<t;e++){let t=A[e];if(t>=128)throw new Error("expected ASCII");B.push(t)}t++;let e=0,r=128,g=72;for(;t<A.length;){let n=e;for(let B=1,r=36;;r+=36){if(t>=A.length)throw new Error("invalid encoding");let n=A[t++];if(n>=48&&n<=57)n-=22;else{if(!(n>=97&&n<=122))throw new Error(`invalid character ${n}`);n-=97}e+=n*B;const o=r<=g?1:r>=g+26?26:r-g;if(n<o)break;B*=36-o}let o=B.length+1,C=0==n?e/700|0:e-n>>1;C+=C/o|0;let w=0;for(;C>455;w+=36)C=C/35|0;g=w+36*C/(C+38)|0,r+=e/o|0,e%=o,B.splice(e++,0,r)}return B}(t.slice(4)),[A]=c(B,s,(A=>K(A)?[A]:[]));let e=G(A);if(B.length!=e.length||!B.every(((A,B)=>A==e[B])))throw new Error("not normalized")}catch(A){throw h(t,`punycode: ${A.message}`)}t=B}if(t.length>0){if(t.length>=4&&t[2]==B&&t[3]==B)throw h(t,"invalid label extension");if(t[0]==B)throw h(t,"leading hyphen");if(t[t.length-1]==B)throw h(t,"trailing hyphen");if(k(t[0]))throw h(t,"leading combining mark");try{!function(A){for(let B=0,t=A.length-1;B<=t;B++){switch(A[B]){case 8204:if(B>0&&D(A[B-1]))continue;if(B>0&&B<t){let e=B-1;for(;e>0&&E(A[e]);)e--;if(f(A[e])){let e=B+1;for(;e<t&&E(A[e]);)e++;if(I(A[e]))continue}}break;case 8205:if(B>0&&D(A[B-1]))continue;break;case 183:if(B>0&&B<t&&108==A[B-1]&&108==A[B+1])continue;break;case 885:if(B<t&&M(A[B+1]))continue;break;case 1523:case 1524:if(B>0&&u(A[B-1]))continue;break;default:continue}throw new Error(`No context for "${i(String.fromCodePoint(A[B]))}"`)}if(A.some((A=>A>=1632&&A<=1641))&&A.some((A=>A>=1776&&A<=1785)))throw new Error("Disallowed arabic-indic digit mixture");if(A.includes(12539)&&!A.some((A=>F(A))))throw new Error("Disallowed katakana")}(A.flatMap((({v:A})=>A??[])))}catch(A){throw h(t,A.message)}}return A})).map((A=>String.fromCodePoint(...G(A)))).join(".")}function V(A){return c(Q(A),s,(A=>{if(a(A))return{};if(K(A))return[A];if(Y(A))return{i:A};let B=w(N,A);return B?{m:A,u:B}:{d:A}}))[0]}export{J as ens_normalize,V as ens_tokenize};
