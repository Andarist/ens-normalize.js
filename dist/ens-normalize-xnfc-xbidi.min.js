function A(A){let t=function(A){let t=0;function B(){return A[t++]<<8|A[t++]}let w=B(),r=1,Q=[0,1];for(let A=1;A<w;A++)Q.push(r+=B());let e=B(),n=t;t+=e;let E=0,c=0;function C(){return 0==E&&(c=c<<8|A[t++],E=8),c>>--E&1}const i=2**31,o=i>>>1,f=i-1;let g=0;for(let A=0;A<31;A++)g=g<<1|C();let F=[],D=0,l=i;for(;;){let A=Math.floor(((g-D+1)*r-1)/l),t=0,B=w;for(;B-t>1;){let w=t+B>>>1;A<Q[w]?B=w:t=w}if(0==t)break;F.push(t);let e=D+Math.floor(l*Q[t]/r),n=D+Math.floor(l*Q[t+1]/r)-1;for(;0==((e^n)&o);)g=g<<1&f|C(),e=e<<1&f,n=n<<1&f|1;for(;e&~n&536870912;)g=g&o|g<<1&f>>>1|C(),e=e<<1^o,n=(n^o)<<1|o|1;D=e,l=1+n-e}let I=w-4;return F.map((t=>{switch(t-I){case 3:return I+65792+(A[n++]<<16|A[n++]<<8|A[n++]);case 2:return I+256+(A[n++]<<8|A[n++]);case 1:return I+A[n++];default:return t-1}}))}(Uint8Array.from(atob(A),(A=>A.charCodeAt(0)))),B=0;return()=>t[B++]}function t(A){return 1&A?~A>>1:A>>1}function B(A,t){let B=Array(A);for(let w=0,r=-1;w<A;w++)B[w]=r+=1+t();return B}function w(A,B){let w=Array(A);for(let r=0,Q=0;r<A;r++)w[r]=Q+=t(B());return w}function r(A){let t=new Set(B(A(),A)),w=A(),r=B(w,A),Q=function(A,t){let B=Array(A);for(let w=0;w<A;w++)B[w]=1+t();return B}(w,A);for(let A=0;A<w;A++)for(let B=0;B<Q[A];B++)t.add(r[A]+B);return t}function Q(A){let t=[];for(;;){let B=A();if(0==B)break;t.push(B)}return t}function e(A,t,B,r){let Q=Array(A).fill().map((()=>[]));for(let e=0;e<t;e++)w(A,B).forEach(((A,t)=>Q[t].push(r?r[A]:A)));return Q}function n(A,t){let B=1+t(),w=t(),r=Q(t);return e(r.length,1+A,t).map(((A,t)=>[A[0],A.slice(1),r[t],B,w]))}function E(A,t){return e(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}function c(A,t){for(let[B,w,r,Q,e]of A){let A=t-B;if(A<0)break;if(r>0){if(A<Q*r&&A%Q==0){let t=A/Q;return w.map((A=>A+t*e))}}else if(0==A)return w}}function C(A){return A.replace(/[^\x20-\x21\x23-\x7E]/gu,(A=>{return`{${t=A.codePointAt(0),t.toString(16).toUpperCase().padStart(2,"0")}}`;var t}))}function i(A){if("string"!=typeof A)throw new TypeError("expected string");return[...A].map((A=>A.codePointAt(0)))}function o(A,t,B){let w=[],r=[],Q=[r];function e(){w.length>0&&(r.push({v:w}),w=[])}for(let n=0;n<A.length;n++){if(t){let[B,w]=t(A,n);if(B>0){e(),r.push({e:w,u:A.slice(n,n+B)}),n+=B-1;continue}}let E=B(A[n]);Array.isArray(E)?w.push(...E):(e(),E?r.push(E):(r=[],Q.push(r)))}return e(),Q}let f=A("ABIAAQB6AEAAOAAoACYAHwAiABgAFgAOAAsACwAMAY8AfgADApQhCD9xcXFxcXFxcW5hcbsGoY8Bf9URLHl4F4mAXgAn6F1DBPgbACv4ZqZU5nHucWhm/wCYRQRDAJcASQwtAe8FzAOHOfQyBvsC+GifBANGRZDdAC4CJSwCIi8GFTgCJSwmLyQpNix4JTpMcXV+rQEGGggji3raLA6mlfECCAxleXQSxKUjTyElAibgTiIC0gHv1AZQBLNgQ6JNVpJS9wlNAHRfAXiOWADp7D9QqYZpggAHGwscRNcB8gB0/yE9LHw3ZzYcITAjCk8BAlASEDEWAjEMCTgFzVsHDywSYVMEXgVBSgCFDAQFAckCphERETMDM2uMA88yLkEnJgYTLi6LB7kBPw0nVwsQ4gE7YHTHG0MAJpANNxIqJ15uH1IFEQDKAm4FfB2eATAAeIwtpywlOBhEJwRXng4sHLli4Q5IYl7584oYIwciAIlLCW1CAFQULjWxMQNQS/8RUSEBKAMWiQavLFEEUAT7AK0E1WULFc3RYR4GDAkRFRAxEhEDAQEABx8IASgjAAJR4QwFEpUiGzjHDw5ylPEUpACEAX4jBRwWExgAGwkSAkFoCRgIAA5XWI6qYXEEjBQARAEhDhAt2CcBFwASAEoTJBMCNQUSphsCAEEXDnKU8Q4OA70WBRQQHmoJLG5nEwoIDmNYjqphcQSGGgBJASASEDPYKA9QDyQSCgQMShMjAxQGAzUCcRkkAIsAuokwVSwLAmIGPhgnKACLCRkAEicBAQbgO8+xBTABBxcQJgAEQDf6MASDMBD0HwwoDAsu9wDA6hMtcgxWABIITU3k0SHxGPGp8QBhA+dvYj7xAEEFTY2l8Q8x0RWBKEEG8QtKx0dLASBJGLFQ8QBfWx4AFKXRDyrPFXMcIgEPEjzcS9Wn/KALJxnXU2YJOBWKOmP82gdIgmNcRsDi+p7FBLYbwm9Uzs1RfCbNpY30PNDOtZBhbqPBybOPeWa7oi+ySNuja7E79Fz+oJqkWRGdXLqRl46pfoUDu0uKXTiGuFf3GtJzAXtJmxI3V8am/mpQnjfi99U7ZkojTh6fKYexodlCUm8Nn5tkJXqdPwxaQiU29Pa8nQxhFccS0ZzA2p+XNo3r68FBGjQNasxwtQH/0ELiOQLNuyc0YqOxCPnfFsvASXVP7enrn5p48UHDGS6NU/kYR37WSJ7+CN+nV4NqWlRTc/nQOuWoDD2Cnkn26E21fE+79xMXG2voqdtyef5eUY6MOoAAPIvdUDW+i16JSxe2+srXAYVvzbE8SKhyxzjFf2rMlgMycfXR8nl6/xF97xDwBSNLExVnK4YUGbAMpgGeHD0vHVXsIK20HyDdJQ9a5Uhwta5o+Tw/HpthmalqVX7v90SgUzjZaEahH3JPOhT8k+LFPClF+c5gMeKg");const g=r(f),F=r(f),D=r(f),l=r(f),I=r(f),M=r(f),u=r(f);let U=A("");const h=r(U),N=r(U),x=r(U),J=function(A){let t=[];for(;;){let B=A();if(0==B)break;t.push(n(B,A))}for(;;){let B=A()-1;if(B<0)break;t.push(E(B,A))}return t.flat().sort(((A,t)=>A[0]-t[0]))}(U),s=r(U),R=U()&&function(A){const t=r(A),B=r(A),w=r(A),n=r(A),E=r(A),c=r(A),C=r(A),i=r(A),o=r(A),f=function(A,t){let B=[];for(;;){let w=Q(A);if(0==w.length)break;let r=1+A();B.push(...w.reduce(((B,w)=>e(r,w,A,t).map(((A,t)=>B[t].concat(8205,A)))),e(r,w.shift(),A,t)))}return new Set(B.map((A=>String.fromCodePoint(...A))))}(A,[...n,...c].sort(((A,t)=>A-t))),g=65039,F=8419;function D(A,t){let B=A[t],w=A[t+1];if(i.has(B)&&w&&C.has(w))return[2,[B,w]];if(w==g){if(n.has(B))return[2,[B]];if(c.has(B)||E.has(B))return[2,[B,g]]}return n.has(B)||c.has(B)?[1,[B]]:void 0}return function(A,r){let Q=A[r],e=A.length;if(r+2<=e&&t.has(Q)){let B=A[r+1];if(t.has(B))return[2,[Q,B]];if(!D(A,r))return[0]}let n=B.has(Q);if(r+2<=e&&n&&A[r+1]==F)return[2,[Q,F]];if(r+3<=e&&(n||w.has(Q))&&A[r+1]==g&&A[r+2]==F)return[3,n?[Q,F]:[Q,g,F]];let E=D(A,r);if(!E)return[0];let c=E[0]+r,C=E[1].slice(),i=!1;for(;c+1<e&&8205===A[c];){let t=D(A,c+1);if(!t)break;i=!0,c+=1+t[0],C.push(8205,...t[1])}if(i){let A=String.fromCodePoint(...C);if(!f.has(A.replace(/\u{FE0F}/gu,"")))return E}else if(c+2<e&&o.has(A[c])){let t=c+1;for(;t+1<e&&o.has(A[t]);)t++;if(917631==A[t++])return[t-r,C]}return[c-r,C]}}(U);function a(A){return A.flatMap((({e:A,v:t})=>A??function(A,t){return i(String.fromCodePoint(...t).normalize("NFC"))}(0,t)))}function k(A,t){return new Error(`Disallowed label "${C(String.fromCodePoint(...A))}": ${t}`)}function V(A){const t=45;return o(i(A),R,(A=>{if(h.has(A))return;if(x.has(A))return[];if(N.has(A))return[A];let t=c(J,A);if(t)return t;throw new Error(`Disallowed character "${C(String.fromCodePoint(A))}"`)})).map((A=>{let B=a(A);if(B.length>=4&&B[2]==t&&B[3]==t&&120==B[0]&&110==B[1]){let t;try{t=function(A){let t=[],B=A.lastIndexOf(45);for(let w=0;w<B;w++){let B=A[w];if(B>=128)throw new Error("expected ASCII");t.push(B)}B++;let w=0,r=128,Q=72;for(;B<A.length;){let e=w;for(let t=1,r=36;;r+=36){if(B>=A.length)throw new Error("invalid encoding");let e=A[B++];if(e>=48&&e<=57)e-=22;else{if(!(e>=97&&e<=122))throw new Error(`invalid character ${e}`);e-=97}w+=e*t;const n=r<=Q?1:r>=Q+26?26:r-Q;if(e<n)break;t*=36-n}let n=t.length+1,E=0==e?w/700|0:w-e>>1;E+=E/n|0;let c=0;for(;E>455;c+=36)E=E/35|0;Q=c+36*E/(E+38)|0,r+=w/n|0,w%=n,t.splice(w++,0,r)}return t}(B.slice(4)),[A]=o(t,R,(A=>N(A)?[A]:[]));let w=a(A);if(t.length!=w.length||!t.every(((A,t)=>A==w[t])))throw new Error("not normalized")}catch(A){throw k(B,`punycode: ${A.message}`)}B=t}let w=A.flatMap((({v:A})=>A??[]));if(B.length>0){if(B.length>=4&&B[2]==t&&B[3]==t)throw k(B,"invalid label extension");if(B[0]==t)throw k(B,"leading hyphen");if(B[B.length-1]==t)throw k(B,"trailing hyphen");if(s.has(B[0]))throw k(B,"leading combining mark");try{!function(A){for(let t=0,B=A.length-1;t<=B;t++){switch(A[t]){case 8204:if(t>0&&g.has(A[t-1]))continue;if(t>0&&t<B){let w=t-1;for(;w>0&&F.has(A[w]);)w--;if(D.has(A[w])){let w=t+1;for(;w<B&&F.has(A[w]);)w++;if(l.has(A[w]))continue}}break;case 8205:if(t>0&&g.has(A[t-1]))continue;break;case 183:if(t>0&&t<B&&108==A[t-1]&&108==A[t+1])continue;break;case 885:if(t<B&&I.has(A[t+1]))continue;break;case 1523:case 1524:if(t>0&&M.has(A[t-1]))continue;break;default:continue}throw new Error(`No context for "${C(String.fromCodePoint(A[t]))}"`)}if(A.some((A=>A>=1632&&A<=1641))&&A.some((A=>A>=1776&&A<=1785)))throw new Error("Disallowed arabic-indic digit mixture");if(A.includes(12539)&&!A.some((A=>u.has(A))))throw new Error("Disallowed katakana")}(w)}catch(A){throw k(B,A.message)}}return{tokens:A,cps:B,text:w}})).map((A=>String.fromCodePoint(...A.cps))).join(".")}function G(A){return o(i(A),R,(A=>{if(h.has(A))return{};if(N.has(A))return[A];if(x.has(A))return{i:A};let t=c(J,A);return t?{m:t,u:[A]}:{d:A}}))[0]}export{V as ens_normalize,G as ens_tokenize};
