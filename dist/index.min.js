function A(A){return function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),r=1,l=[0,1];for(let A=1;A<n;A++)l.push(r+=t());let B=t(),w=e;e+=B;let Q=0,C=0;function o(){return 0==Q&&(C=C<<8|A[e++],Q=8),C>>--Q&1}const f=2**31,c=f>>>1,s=f-1;let g=0;for(let A=0;A<31;A++)g=g<<1|o();let u=[],i=0,p=f;for(;;){let A=Math.floor(((g-i+1)*r-1)/p),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<l[n]?t=n:e=n}if(0==e)break;u.push(e);let B=i+Math.floor(p*l[e]/r),w=i+Math.floor(p*l[e+1]/r)-1;for(;0==((B^w)&c);)g=g<<1&s|o(),B=B<<1&s,w=w<<1&s|1;for(;B&~w&536870912;)g=g&c|g<<1&s>>>1|o(),B=B<<1^c,w=(w^c)<<1|c|1;i=B,p=1+w-B}let E=n-4;return u.map((e=>{switch(e-E){case 3:return E+65792+(A[w++]<<16|A[w++]<<8|A[w++]);case 2:return E+256+(A[w++]<<8|A[w++]);case 1:return E+A[w++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,n=new Uint8Array(6*t>>3);for(let r=0,l=0,B=0,w=0;r<t;r++)w=w<<6|e[A.charCodeAt(r)],B+=6,B>=8&&(n[l++]=w>>(B-=8));return n}(A)))}function e(A){return 1&A?~A>>1:A>>1}function t(A,t){let n=Array(A);for(let r=0,l=0;r<A;r++)n[r]=l+=e(t());return n}function n(A,e=0){let t=[];for(;;){let n=A(),r=A();if(!r)break;e+=n;for(let A=0;A<r;A++)t.push(e+A);e+=r+1}return t}function r(A){return B((()=>{let e=n(A);if(e.length)return e}))}function l(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(Q(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(C(t,A))}return e.flat()}function B(A){let e=[];for(;;){let t=A();if(!t)break;e.push(t)}return e}function w(A,e,n){let r=Array(A).fill().map((()=>[]));for(let l=0;l<e;l++)t(A,n).forEach(((A,e)=>r[e].push(A)));return r}function Q(A,e){let t=1+e(),n=e(),r=B(e);return w(r.length,1+A,e).flatMap(((A,e)=>{let[l,...B]=A;return Array(r[e]).fill().map(((A,e)=>{let r=e*n;return[l+e*t,B.map((A=>A+r))]}))}))}function C(A,e){return w(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var o=A("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");function f(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function c(A){let e=[];for(let t=0,n=A.length;t<n;){let n=A.codePointAt(t);t+=n<65536?1:2,e.push(n)}return e}function s(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let n=0;n<e;)t.push(String.fromCodePoint(...A.slice(n,n+=4096)));return t.join("")}function g(A,e){let{length:t}=A,n=t-e.length;for(let r=0;0==n&&r<t;r++)n=A[r]-e[r];return n}var u=A("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");function i(A){return A>>24&255}function p(A){return 16777215&A}const E=new Map(r(u).flatMap(((A,e)=>A.map((A=>[A,e+1<<24]))))),D=new Set(n(u)),a=new Map,h=new Map;for(let[A,e]of l(u)){if(!D.has(A)&&2==e.length){let[t,n]=e,r=h.get(t);r||(r=new Map,h.set(t,r)),r.set(n,A)}a.set(A,e.reverse())}const U=44032;function M(A){return A>=U&&A<55204}function F(A,e){if(A>=4352&&A<4371&&e>=4449&&e<4470)return U+588*(A-4352)+28*(e-4449);if(M(A)&&e>4519&&e<4547&&(A-U)%28==0)return A+(e-4519);{let t=h.get(A);return t&&(t=t.get(e),t)?t:-1}}function I(A){let e=[],t=[],n=!1;function r(A){let t=E.get(A);t&&(n=!0,A|=t),e.push(A)}for(let n of A)for(;;){if(n<128)e.push(n);else if(M(n)){let A=n-U,e=A%588/28|0,t=A%28;r(4352+(A/588|0)),r(4449+e),t>0&&r(4519+t)}else{let A=a.get(n);A?t.push(...A):r(n)}if(!t.length)break;n=t.pop()}if(n&&e.length>1){let A=i(e[0]);for(let t=1;t<e.length;t++){let n=i(e[t]);if(0==n||A<=n){A=n;continue}let r=t-1;for(;;){let t=e[r+1];if(e[r+1]=e[r],e[r]=t,!r)break;if(A=i(e[--r]),A<=n)break}A=i(e[t])}}return e}function k(A){return I(A).map(p)}function H(A){return function(A){let e=[],t=[],n=-1,r=0;for(let l of A){let A=i(l),B=p(l);if(-1==n)0==A?n=B:e.push(B);else if(r>0&&r>=A)0==A?(e.push(n,...t),t.length=0,n=B):t.push(B),r=A;else{let l=F(n,B);l>=0?n=l:0==r&&0==A?(e.push(n),n=B):(t.push(B),r=A)}}return n>=0&&e.push(n,...t),e}(I(A))}function R(){return new Set(n(o))}function N(A){return s(t(A,o))}const L=new Map(l(o)),S=R(),G=new Map(B((()=>{let A=o();if(A)return[A,N(o())]}))),T=R(),P=R(),x=R(),b=r(o);function Z(){return new Set([n(o).map((A=>b[A])),n(o)].flat(2))}const d=B((()=>{let A=o();if(A){let e=1==A;A=e?"Restricted":N(A-1);let t=Z(),n=Z(),l=[...t,...n].sort(((A,e)=>A-e)),w=r(o).map((A=>new Set(A.map((A=>l[A]))))),Q=o()-1;return Q<0&&(Q=new Map(B((()=>{let A=o();if(A)return[l[A-1],B((()=>{let A=B(o);if(A.length)return A.map((A=>A-1))}))]})))),{N:A,P:t,W:w,M:Q,R:e,V:new Set(l)}}})),K=n(o),O=new Set(n(o).map((A=>K[A]))),W=function A(e){let t=B((()=>{let e=n(o).map((A=>K[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),r=o(),l=r%3;r=r/3|0;let w=1&r;return r>>=1,{B:t,V:l,F:w,S:1&r,C:2&r,Q:new Set(e)}}([]),y=new Set,V=new Set;for(let A of d)for(let e of A.V)y.has(e)?V.add(e):y.add(e);for(let A of y)for(let e of k([A]))y.add(e);const J=new Map(d.flatMap((A=>[...A.V].filter((A=>!V.has(A))).map((e=>[e,A]))))),j=s([46]);class m extends Array{get is_emoji(){return!0}}function z(A,e=f){let t=[];v(A[0])&&t.push("◌");let n=0,r=A.length;for(let l=0;l<r;l++){let r=A[l];Y(r)&&(t.push(s(A.slice(n,l))),t.push(e(r)),n=l+1)}return t.push(s(A.slice(n,r))),t.join("")}function X(A){return(Y(A)?"":`"${z([A])}" `)+f(A)}function v(A){return T.has(A)}function Y(A){return P.has(A)}function q(A,e=H){return A.split(j).map((A=>s(nA(c(A),e).flatMap((A=>A.is_emoji?rA(A):A))))).join(j)}function $(A){return eA(AA(A))}function _(A){let e=AA(A,!0);for(let{script:A,output:t}of e)if("Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return eA(e)}function AA(A,e){let t=0;return A.split(j).map((A=>{let n,r=c(A),l={input:r,offset:t};t+=r.length+1;try{let A,t=l.tokens=nA(r,H),B=t.length;if(B){let r=t[0],w=B>1||r.is_emoji;if(!w&&r.every((A=>A<128)))n=r,function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(w&&(l.emoji=!0,r=t.flatMap((A=>A.is_emoji?[]:A))),n=t.flatMap((A=>!e&&A.is_emoji?rA(A):A)),r.length){!function(A){if(T.has(A[0]))throw new Error("leading combining mark")}(n),function(A){let e=A[0],t=G.get(e);if(t)throw new Error(`leading ${t}`);let n=-1;for(let r=1;r<A.length;r++){e=A[r];let l=G.get(e);if(l){if(n==r)throw new Error(`adjacent ${t} + ${l}`);n=r+1,t=l}}if(n==A.length)throw new Error(`trailing ${t}`)}(n);for(let A=1;A<B;A++){let e=t[A];if(!e.is_emoji&&T.has(e[0]))throw new Error(`emoji + combining mark: "${s(t[A-1])} + ${z([e[A][0]])}"`)}A=function(A){for(let e of A){let t=J.get(e);if(t)return tA(t,A),t}let e;for(let t of d)if(A.some((A=>t.P.has(A))))try{return tA(t,A),t}catch(A){e||(e=A)}if(e)throw e;throw nA(A,(A=>A)),new Error("no match")}(r).N}else A="Emoji";!function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(n)}else n=[],A="None";l.type=A}catch(A){l.error=A}return l.output=n,l}))}function eA(A){return A.map((({input:e,error:t,output:n})=>{if(t){let n=t.message;throw new Error(1==A.length?n:`Invalid label "${z(e)}": ${n}`)}return s(n)})).join(j)}function tA(A,e){let{V:t,W:n,M:r}=A,l=r instanceof Map;for(let n=0,B=e.length;n<B;){let w=e[n++],Q=l&&r.get(w);if(Q){let A=n;for(;A<B&&T.has(e[A]);)A++;let t=e.slice(n,A);if(!Q.find((A=>!g(A,t))))throw new Error(`disallowed combining mark sequence: "${z([w,...t])}"`);n=A}else if(!t.has(w)){let t=X(w);for(let n of e){let e=J.get(n);if(e&&e!==A){e.R||(t=`${t} is ${e.N}`);break}}throw new Error(`disallowed ${A.N} character: ${t}`)}}if(!l)for(let A=1,t=k(e).length;A<t;A++)if(T.has(e[A])){let n=A+1;for(;n<t&&T.has(e[n]);)n++;if(n-A>=r)throw new Error(`too many combining marks: "${s(e.slice(A-1,n))}" (max: ${r})`);A=n}for(let A of n)if(e.every((e=>A.has(e))))throw new Error("whole-label confusable")}function nA(A,e){let t=[],n=[];for(A=A.slice().reverse();A.length;){let r=lA(A);if(r)n.length&&(t.push(e(n)),n=[]),t.push(r);else{let e=A.pop();if(y.has(e))n.push(e);else{let A=L.get(e);if(A)n.push(...A);else if(!S.has(e))throw new Error(`disallowed character: ${X(e)}`)}}}return n.length&&t.push(e(n)),t}function rA(A){return A.filter((A=>65039!=A))}function lA(A,e){let t,n,r=W,l=[],B=A.length;for(e&&(e.length=0);B;){let w=A[--B];if(r=r.B.find((A=>A.Q.has(w))),!r)break;if(r.S)n=w;else if(r.C&&w===n)break;l.push(w),r.F&&(l.push(65039),B>0&&65039==A[B-1]&&B--),r.V&&(t=BA(l,r),e&&e.push(...A.slice(B).reverse()),A.length=B)}if(!t){let n=A[A.length-1];O.has(n)&&(e&&e.push(n),t=m.of(n),A.pop())}return t}function BA(A,e){let t=m.from(A);return 2==e.V&&t.splice(1,1),t}function wA(){let A=[...O].map((A=>[A]));return function e(t,n,r){if(t.S)r=n[n.length-1];else if(t.C&&r===n[n.length-1])return;t.F&&n.push(65039),t.V&&A.push(BA(n,t));for(let A of t.B)for(let t of A.Q)e(A,[...n,t],r)}(W,[]),A.sort(g)}function QA(A,{nf:e=!0}={}){let t=c(A).reverse(),n=[],r=[];for(;t.length;){let A=lA(t,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:rA(A)});else{let A=t.pop();if(46==A)r.push({type:"stop",cp:A});else if(y.has(A))r.push({type:"valid",cps:[A]});else if(S.has(A))r.push({type:"ignored",cp:A});else{let e=L.get(A);e?r.push({type:"mapped",cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(CA(t.type))if(oA(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(CA(e)){if(!oA(n))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let n=r.slice(e,t),l=n.flatMap((A=>CA(A.type)?A.cps:[])),B=H(l);g(B,l)?(r.splice(e,t-e,{type:"nfc",input:l,cps:B,tokens:fA(n)}),A=e):A=t-1,e=-1}else e=A;else"emoji"==t.type&&(e=-1)}return fA(r)}function CA(A){return"valid"==A||"mapped"==A}function oA(A){return A.some((A=>x.has(A)))}function fA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{_ as ens_beautify,wA as ens_emoji,$ as ens_normalize,q as ens_normalize_fragment,AA as ens_split,QA as ens_tokenize,v as is_combining_mark,H as nfc,k as nfd,z as safe_str_from_cps,Y as should_escape};
