function A(A){return 1&A?~A>>1:A>>1}function e(A,e){let g=Array(A);for(let B=0,o=-1;B<A;B++)g[B]=o+=1+e();return g}function g(e,g){let B=Array(e);for(let o=0,C=0;o<e;o++)B[o]=C+=A(g());return B}function B(A,g){let B=e(A(),A),o=A(),C=e(o,A),t=function(A,e){let g=Array(A);for(let B=0;B<A;B++)g[B]=1+e();return g}(o,A);for(let A=0;A<o;A++)for(let e=0;e<t[A];e++)B.push(C[A]+e);return g?B.map((A=>g[A])):B}function o(A,e,B){let o=Array(A).fill().map((()=>[]));for(let C=0;C<e;C++)g(A,B).forEach(((A,e)=>o[e].push(A)));return o}function C(A,e){let g=1+e(),B=e(),C=function(A){let e=[];for(;;){let g=A();if(0==g)break;e.push(g)}return e}(e);return o(C.length,1+A,e).flatMap(((A,e)=>{let[o,...t]=A;return Array(C[e]).fill().map(((A,e)=>{let C=e*B;return[o+e*g,t.map((A=>A+C))]}))}))}function t(A,e){return o(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var n=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function g(){return A[e++]<<8|A[e++]}let B=g(),o=1,C=[0,1];for(let A=1;A<B;A++)C.push(o+=g());let t=g(),n=e;e+=t;let r=0,Q=0;function w(){return 0==r&&(Q=Q<<8|A[e++],r=8),Q>>--r&1}const l=2**31,I=l>>>1,i=l-1;let c=0;for(let A=0;A<31;A++)c=c<<1|w();let u=[],D=0,f=l;for(;;){let A=Math.floor(((c-D+1)*o-1)/f),e=0,g=B;for(;g-e>1;){let B=e+g>>>1;A<C[B]?g=B:e=B}if(0==e)break;u.push(e);let t=D+Math.floor(f*C[e]/o),n=D+Math.floor(f*C[e+1]/o)-1;for(;0==((t^n)&I);)c=c<<1&i|w(),t=t<<1&i,n=n<<1&i|1;for(;t&~n&536870912;)c=c&I|c<<1&i>>>1|w(),t=t<<1^I,n=(n^I)<<1|I|1;D=t,f=1+n-t}let s=B-4;return u.map((e=>{switch(e-s){case 3:return s+65792+(A[n++]<<16|A[n++]<<8|A[n++]);case 2:return s+256+(A[n++]<<8|A[n++]);case 1:return s+A[n++];default:return e-1}}))}(Uint8Array.from(atob(""),(A=>A.charCodeAt(0)))));function r(A){return[...A].map((A=>A.codePointAt(0)))}function Q(A){return A.filter((A=>65039!=A))}const w=new Set(B(n)),l=new Set(B(n)),I=function(A){let e=[];for(;;){let g=A();if(0==g)break;e.push(C(g,A))}for(;;){let g=A()-1;if(g<0)break;e.push(t(g,A))}return Object.fromEntries(e.flat())}(n),i=function(A){let e=B(A).sort(((A,e)=>A-e));return function g(){let o=[];for(;;){let C=B(A,e);if(0==C.length)break;o.push({set:new Set(C),node:g()})}o.sort(((A,e)=>e.set.size-A.set.size));let C=A(),t=C%3;C=C/3|0;let n=!!(1&C);return C>>=1,{branches:o,valid:t,fe0f:n,save:1==C,check:2==C}}()}(n),c=new Set(B(n,[...w].sort(((A,e)=>A-e))));function u(A){return A.normalize("NFC")}function D(A){return s(A,(A=>A))}function f(A){return s(A,Q)}function s(A,e){let g=r(A).reverse(),B=[];for(;g.length;){let A=h(g);if(A){B.push(...e(A));continue}let o=g.pop();if(w.has(o)){B.push(o);continue}if(l.has(o))continue;let C=I[o];if(!C)throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`);B.push(...C)}return u(String.fromCodePoint(...B))}function h(A,e){let g,B,o=i,C=[],t=A.length;for(e&&(e.length=0);t;){let n=A[--t];if(o=o.branches.find((A=>A.set.has(n)))?.node,!o)break;if(o.save)B=n;else if(o.check&&n===B)break;C.push(n),o.fe0f&&(C.push(65039),t>0&&65039==A[t-1]&&t--),o.valid&&(g=C.slice(),2==o.valid&&g.splice(1,1),e&&e.push(...A.slice(t).reverse()),A.length=t)}return g}function E(A){let e=r(A).reverse(),g=[],B=[];for(;e.length;){let A=h(e,g);if(A)B.push({type:"emoji",emoji:A,input:g.slice(),cps:Q(A)});else{let A=e.pop();if(46===A)B.push({type:"stop"});else if(w.has(A))B.push({type:"valid",cps:[A]});else if(l.has(A))B.push({type:"ignored",cp:A});else{let e=I[A];e?B.push({type:"mapped",cp:A,cps:e}):B.push({type:"disallowed",cp:A})}}}for(let A=0,e=-1;A<B.length;A++){let g=B[A];if(p(g.type))if(a(g.cps)){let g=A+1;for(let A=g;A<B.length;A++){let{type:e,cps:o}=B[A];if(p(e)){if(!a(o))break;g=A+1}else if("ignored"!==e)break}e<0&&(e=A);let o=B.slice(e,g),C=o.flatMap((A=>p(A.type)?A.cps:[])),t=String.fromCodePoint(...C),n=u(t);t===n?A=g-1:(B.splice(e,g-e,{type:"nfc",input:C,cps:r(n),tokens:T(o)}),A=e),e=-1}else e=A;else"emoji"===g.type&&(e=-1)}return T(B)}function p(A){return"valid"===A||"mapped"===A}function a(A){return A.some((A=>c.has(A)))}function T(A){for(let e=0;e<A.length;e++)if("valid"===A[e].type){let g=e+1;for(;g<A.length&&"valid"===A[g].type;)g++;A.splice(e,g-e,{type:"valid",cps:A.slice(e,g).flatMap((A=>A.cps))})}return A}export{D as ens_beautify,f as ens_normalize,E as ens_tokenize};
