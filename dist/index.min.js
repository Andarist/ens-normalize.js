function A(A){return function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,Q=[0,1];for(let A=1;A<r;A++)Q.push(n+=t());let w=t(),c=e;e+=w;let o=0,i=0;function s(){return 0==o&&(i=i<<8|A[e++],o=8),i>>--o&1}const B=2**31,l=B>>>1,C=B-1;let f=0;for(let A=0;A<31;A++)f=f<<1|s();let g=[],E=0,a=B;for(;;){let A=Math.floor(((f-E+1)*n-1)/a),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<Q[r]?t=r:e=r}if(0==e)break;g.push(e);let w=E+Math.floor(a*Q[e]/n),c=E+Math.floor(a*Q[e+1]/n)-1;for(;0==((w^c)&l);)f=f<<1&C|s(),w=w<<1&C,c=c<<1&C|1;for(;w&~c&536870912;)f=f&l|f<<1&C>>>1|s(),w=w<<1^l,c=(c^l)<<1|l|1;E=w,a=1+c-w}let p=r-4;return g.map((e=>{switch(e-p){case 3:return p+65792+(A[c++]<<16|A[c++]<<8|A[c++]);case 2:return p+256+(A[c++]<<8|A[c++]);case 1:return p+A[c++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,Q=0,w=0,c=0;n<t;n++)c=c<<6|e[A.charCodeAt(n)],w+=6,w>=8&&(r[Q++]=c>>(w-=8));return r}(A)))}function e(A){return 1&A?~A>>1:A>>1}function t(A,e){let t=Array(A);for(let r=0,n=-1;r<A;r++)t[r]=n+=1+e();return t}function r(A,t){let r=Array(A);for(let n=0,Q=0;n<A;n++)r[n]=Q+=e(t());return r}function n(A,e){let r=t(A(),A),n=A(),Q=t(n,A),w=function(A,e){let t=Array(A);for(let r=0;r<A;r++)t[r]=1+e();return t}(n,A);for(let A=0;A<n;A++)for(let e=0;e<w[A];e++)r.push(Q[A]+e);return e?r.map((A=>e[A])):r}function Q(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(o(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(i(t,A))}return e.flat()}function w(A){let e=[];for(;;){let t=A();if(!t)break;e.push(t)}return e}function c(A,e,t){let n=Array(A).fill().map((()=>[]));for(let Q=0;Q<e;Q++)r(A,t).forEach(((A,e)=>n[e].push(A)));return n}function o(A,e){let t=1+e(),r=e(),n=w(e);return c(n.length,1+A,e).flatMap(((A,e)=>{let[Q,...w]=A;return Array(n[e]).fill().map(((A,e)=>{let n=e*r;return[Q+e*t,w.map((A=>A+n))]}))}))}function i(A,e){return c(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var s=A("");function B(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function l(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function C(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function f(A,e){let{length:t}=A,r=t-e.length;for(let n=0;0==r&&n<t;n++)r=A[n]-e[n];return r}var g=A("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");function E(A){return A>>24&255}function a(A){return 16777215&A}const p=new Map(w((()=>{let A=n(g);if(A.length)return A})).flatMap(((A,e)=>A.map((A=>[A,e+1<<24]))))),h=new Set(n(g)),u=new Map,M=new Map;for(let[A,e]of Q(g)){if(!h.has(A)&&2==e.length){let[t,r]=e,n=M.get(t);n||(n=new Map,M.set(t,n)),n.set(r,A)}u.set(A,e.reverse())}const I=44032;function D(A){return A>=I&&A<55204}function k(A,e){if(A>=4352&&A<4371&&e>=4449&&e<4470)return I+588*(A-4352)+28*(e-4449);if(D(A)&&e>4519&&e<4547&&(A-I)%28==0)return A+(e-4519);{let t=M.get(A);return t&&(t=t.get(e),t)?t:-1}}function F(A){let e=[],t=[],r=!1;function n(A){let t=p.get(A);t&&(r=!0,A|=t),e.push(A)}for(let r of A)for(;;){if(r<128)e.push(r);else if(D(r)){let A=r-I,e=A%588/28|0,t=A%28;n(4352+(A/588|0)),n(4449+e),t>0&&n(4519+t)}else{let A=u.get(r);A?t.push(...A):n(r)}if(!t.length)break;r=t.pop()}if(r&&e.length>1){let A=E(e[0]);for(let t=1;t<e.length;t++){let r=E(e[t]);if(0==r||A<=r){A=r;continue}let n=t-1;for(;;){let t=e[n+1];if(e[n+1]=e[n],e[n]=t,!n)break;if(A=E(e[--n]),A<=r)break}A=E(e[t])}}return e}function J(A){return F(A).map(a)}function L(A){return function(A){let e=[],t=[],r=-1,n=0;for(let Q of A){let A=E(Q),w=a(Q);if(-1==r)0==A?r=w:e.push(w);else if(n>0&&n>=A)0==A?(e.push(r,...t),t.length=0,r=w):t.push(w),n=A;else{let Q=k(r,w);Q>=0?r=Q:0==n&&0==A?(e.push(r),r=w):(t.push(w),n=A)}}return r>=0&&e.push(r,...t),e}(F(A))}const U=n(s).sort(((A,e)=>A-e));function G(A){return new Set(n(s,A))}function R(){return G(U)}function V(){return w((()=>{let A=R();if(A.size)return A}))}const m=new Set(U),b=G(),v=new Map(Q(s)),d=R(),K=[],X=new Map([w((()=>{let A=s();if(A)return[A,(e=s,w((()=>{let A=w(e);if(A.length)return A.map((A=>A-1))})))];var e})),n(s,U).map((A=>[A,K]))].flat()),y=V(),N=[{name:"Korean",test:[1],rest:[0,2]},{name:"Japanese",test:[3,4],rest:[0,2]},{name:"Han",test:[2],rest:[0]},{name:"Latin",test:[5],rest:[0]},{name:"Cyrillic",test:[6],rest:[0]},{name:"Greek",test:[7],rest:[0]},{name:"Arabic",test:[8],rest:[]},{name:"Devanagari",test:[9],rest:[]},{name:"Hebrew",test:[10],rest:[]},{name:"Thai",test:[11],rest:[]}].map((({name:A,test:e,rest:t})=>(t=[e=e.map((A=>y[A])),t.map((A=>y[A]))].flat(),{name:A,test:e,rest:t,extra:R(),wholes:R()}))),P=R(),x=V(),H=G(),j=function(A){let e=n(A).sort(((A,e)=>A-e));return function t(){let r=[];for(;;){let Q=n(A,e);if(0==Q.length)break;r.push({set:new Set(Q),node:t()})}r.sort(((A,e)=>e.set.size-A.set.size));let Q=A(),w=Q%3;Q=Q/3|0;let c=!!(1&Q);return Q>>=1,{branches:r,valid:w,fe0f:c,save:1==Q,check:2==Q}}()}(s),Y=R(),S=G(),O=G(),W=C([46]);function T(A,e=B){let t=[];z(A[0])&&t.push("◌");let r=0,n=A.length;for(let Q=0;Q<n;Q++){let n=A[Q];Z(n)&&(t.push(C(A.slice(r,Q))),t.push(e(n)),r=Q+1)}return t.push(C(A.slice(r,n))),t.join("")}function z(A){return d.has(A)||O.has(A)}function Z(A){return S.has(A)}function q(A,e=L){return A.split(W).map((A=>C(e(tA(l(A)))))).join(W)}function $(A){return eA(AA(A))}function _(A){return eA(AA(A,(A=>A)))}function AA(A,e=rA){let t=0;return A.split(W).map((A=>{let r=l(A),n={input:r,offset:t};t+=r.length+1;try{let A=n.mapped=tA(r),t=n.output=L(A.flatMap((A=>Array.isArray(A)?e(A):A)));n.emoji=A.some((A=>Array.isArray(A))),function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(t),function(A){if(d.has(A[0]))throw new Error("leading combining mark")}(t),function(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}(t);let Q=J(A.map((A=>Array.isArray(A)?65039:A)));!function(A){if(!(A=A.filter((A=>65039!=A))).length)return!0;for(let e of x)if(A.some((A=>e.has(A)))){if(!A.every((A=>e.has(A))))throw new Error("restricted script cannot mix");if(A.every((A=>P.has(A))))throw new Error("restricted whole-script confusable");return!0}}(Q)?(function(A){for(let e=1,t=-1;e<A.length;e++)if(d.has(A[e])){let r=A[e-1];if(65039==r)throw new Error("emoji + combining mark");let n=X.get(r);if(n){let t=e+1;for(;t<A.length&&d.has(A[t]);)t++;let r=A.slice(e,t);if(!n.find((A=>!f(A,r))))throw new Error(`disallowed combining mark sequence: "${C(A.slice(e-1,t))}"`);e=t}else{if(e==t)throw new Error(`adjacent combining marks "${C(A.slice(e-2,e+1))}"`);t=e+1}}}(Q),function(A,e,t,r,n){let Q=-1;if(8217===A[0])throw new Error(`leading ${t}`);for(;;){let e=A.indexOf(8217,Q+1);if(-1==e)break;if(Q==e-1)throw new Error(`adjacent ${t}`);Q=e}if(Q==A.length-1)throw new Error(`trailing ${t}`)}(t,0,"apostrophe"),n.script=function(A){for(let{name:e,test:t,rest:r,extra:n,wholes:Q}of N)if(A.some((A=>t.some((e=>e.has(A)))))){let t=A.find((A=>!r.some((e=>e.has(A)))&&!n.has(A)));if(t>=0)throw new Error(`mixed-script ${e} confusable: "${C([t])}"`);if(A.every((A=>Q.has(A)||y[0].has(A))))throw new Error(`whole-script ${e} confusable`);return e}return"Common"}(L(A.flatMap((A=>Array.isArray(A)?[]:A))))):n.script=A.every((A=>Array.isArray(A)))?"Common":"Restricted"}catch(A){n.error=A.message}return n}))}function eA(A){return A.map((({input:e,error:t,output:r})=>{if(t)throw new Error(1==A.length?t:`Invalid label "${T(e)}": ${t}`);return C(r)})).join(W)}function tA(A){let e=[];for(A=A.slice().reverse();A.length;){let t=nA(A);if(t)e.push(t);else{let t=A.pop();if(m.has(t))e.push(t);else{let A=v.get(t);if(A)e.push(...A);else if(!b.has(t)){let A=Z(t)?"":` "${T([t])}"`;throw new Error(`disallowed character:${A} ${B(t)}`)}}}}return e}function rA(A){return A.filter((A=>65039!=A))}function nA(A,e){let t,r,n=j,Q=[],w=A.length;for(e&&(e.length=0);w;){let c=A[--w],o=n.branches.find((A=>A.set.has(c)));if(!o)break;if(n=o.node,n.save)r=c;else if(n.check&&c===r)break;Q.push(c),n.fe0f&&(Q.push(65039),w>0&&65039==A[w-1]&&w--),n.valid&&(t=QA(Q,n),e&&e.push(...A.slice(w).reverse()),A.length=w)}if(!t){let r=A[A.length-1];H.has(r)&&(e&&e.push(r),t=[r],A.pop())}return t}function QA(A,e){let t=A.slice();return 2==e.valid&&t.splice(1,1),t}function wA(){let A=[...H].map((A=>[A]));return function e(t,r,n){if(t.save)n=r[r.length-1];else if(t.check&&n===r[r.length-1])return;t.fe0f&&r.push(65039),t.valid&&A.push(QA(r,t));for(let A of t.branches)for(let t of A.set)e(A.node,[...r,t],n)}(j,[]),A.sort(f)}function cA(A,{nf:e=!0}={}){let t=l(A).reverse(),r=[],n=[];for(;t.length;){let A=nA(t,r);if(A)n.push({type:"emoji",emoji:A,input:r.slice(),cps:rA(A)});else{let A=t.pop();if(46===A)n.push({type:"stop",cp:A});else if(m.has(A))n.push({type:"valid",cps:[A]});else if(b.has(A))n.push({type:"ignored",cp:A});else{let e=v.get(A);e?n.push({type:"mapped",cp:A,cps:e.slice()}):n.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<n.length;A++){let t=n[A];if(oA(t.type))if(iA(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:r}=n[A];if(oA(e)){if(!iA(r))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let r=n.slice(e,t),Q=r.flatMap((A=>oA(A.type)?A.cps:[])),w=L(Q);f(w,Q)?(n.splice(e,t-e,{type:"nfc",input:Q,cps:w,tokens:sA(r)}),A=e):A=t-1,e=-1}else e=A;else"emoji"===t.type&&(e=-1)}return sA(n)}function oA(A){return"valid"===A||"mapped"===A}function iA(A){return A.some((A=>Y.has(A)))}function sA(A){for(let e=0;e<A.length;e++)if("valid"===A[e].type){let t=e+1;for(;t<A.length&&"valid"===A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{_ as ens_beautify,wA as ens_emoji,$ as ens_normalize,q as ens_normalize_fragment,AA as ens_split,cA as ens_tokenize,z as is_printable_mark,L as nfc,J as nfd,T as safe_str_from_cps,Z as should_escape};
