function A(A){return 1&A?~A>>1:A>>1}function r(A,r){let t=Array(A);for(let w=0,e=-1;w<A;w++)t[w]=e+=1+r();return t}function t(r,t){let w=Array(r);for(let e=0,n=0;e<r;e++)w[e]=n+=A(t());return w}function w(A){let t=new Set(r(A(),A)),w=A(),e=r(w,A),n=function(A,r){let t=Array(A);for(let w=0;w<A;w++)t[w]=1+r();return t}(w,A);for(let A=0;A<w;A++)for(let r=0;r<n[A];r++)t.add(e[A]+r);return t}function e(A){let r=[];for(;;){let t=A();if(0==t)break;r.push(t)}return r}function n(A,r,w,e){let n=Array(A).fill().map((()=>[]));for(let B=0;B<r;B++)t(A,w).forEach(((A,r)=>n[r].push(e?e[A]:A)));return n}function B(A,r){let t=1+r(),w=r(),B=e(r);return n(B.length,1+A,r).map(((A,r)=>[A[0],A.slice(1),B[r],t,w]))}function Q(A,r){return n(1+r(),1+A,r).map((A=>[A[0],A.slice(1)]))}function C(A,r,t){let w={};for(;;){let e=r(A);if(0==e.length)break;let B=1+A(),Q=Array(B).fill(w);for(let r of e)Q=n(B,r,A,t).map(((A,r)=>{let t=Q[r],w=String.fromCodePoint(...A),e=t[w];return e||(e=t[w]={}),e}));Q.forEach((A=>A[""]=1))}return w}function i(A,r){for(let[t,w,e,n,B]of A){let A=r-t;if(A<0)break;if(e>0){if(A<n*e&&A%n==0){let r=A/n;return w.map((A=>A+r*B))}}else if(0==A)return w}}function f(A){return A.replace(/[^\x20-\x21\x23-\x7A\x7C\x7E]/gu,(A=>`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A.codePointAt(0))}}`))}function o(A){if("string"!=typeof A)throw new TypeError("expected string");return[...A].map((A=>A.codePointAt(0)))}function g(A){return function(A,r){return o(String.fromCodePoint(...r).normalize(A))}("NFC",A)}var l,D=(l="",function(A){let r=0;return()=>A[r++]}(function(A){let r=0;function t(){return A[r++]<<8|A[r++]}let w=t(),e=1,n=[0,1];for(let A=1;A<w;A++)n.push(e+=t());let B=t(),Q=r;r+=B;let C=0,i=0;function f(){return 0==C&&(i=i<<8|A[r++],C=8),i>>--C&1}const o=2**31,g=o>>>1,l=o-1;let D=0;for(let A=0;A<31;A++)D=D<<1|f();let u=[],E=0,c=o;for(;;){let A=Math.floor(((D-E+1)*e-1)/c),r=0,t=w;for(;t-r>1;){let w=r+t>>>1;A<n[w]?t=w:r=w}if(0==r)break;u.push(r);let B=E+Math.floor(c*n[r]/e),Q=E+Math.floor(c*n[r+1]/e)-1;for(;0==((B^Q)&g);)D=D<<1&l|f(),B=B<<1&l,Q=Q<<1&l|1;for(;B&~Q&536870912;)D=D&g|D<<1&l>>>1|f(),B=B<<1^g,Q=(Q^g)<<1|g|1;E=B,c=1+Q-B}let U=w-4;return u.map((r=>{switch(r-U){case 3:return U+65792+(A[Q++]<<16|A[Q++]<<8|A[Q++]);case 2:return U+256+(A[Q++]<<8|A[Q++]);case 1:return U+A[Q++];default:return r-1}}))}(Uint8Array.from(atob(l),(A=>A.charCodeAt(0))))));const u="2022-05-02T09:44:51.349Z",E="14.0.0",c="1.3.16",U="ENS0",M=w(D),I=w(D),s=w(D),K=function(A){let r=[];for(;;){let t=A();if(0==t)break;r.push(B(t,A))}for(;;){let t=A()-1;if(t<0)break;r.push(Q(t,A))}return r.flat().sort(((A,r)=>A[0]-r[0]))}(D),G=w(D),k=D()&&function(A){const r=w(A),t=w(A),n=w(A),B=w(A),Q=w(A),i=w(A),f=w(A),o=w(A),g=w(A),l=C(A,(A=>Array(A()).fill(1))),D=A()?C(A,e,[...B,...i].sort(((A,r)=>A-r))):1,u=65039,E=8205,c=8419;function U(A,r){if(1===A)return 1;let t=String.fromCodePoint(...r.filter((A=>A!=u)));return A.hasOwnProperty(t)?A[t]:void 0}function M(A,r){let t=A[r];if(!t)return;let w=A[r+1];if(o.has(t)&&w&&f.has(w))return[2,[t,w]];if(w==u){if(B.has(t))return[2,[t]];if(i.has(t)||Q.has(t))return[2,[t,u]]}return B.has(t)||i.has(t)?[1,[t]]:void 0}return function(A,w){let e=A[w],B=String.fromCodePoint(e);if(l.hasOwnProperty(B)){let r=l[B],t=w+1;for(;;){let w=A[t];if(!w)break;let e=String.fromCodePoint(w);if(!r.hasOwnProperty(e))break;r=r[e],t++}if(r.hasOwnProperty(""))return[t-w,A.slice(w,t)]}let Q=A[w+1];if(r.has(e)&&r.has(Q))return[2,[e,Q]];let C=t.has(e);if(C&&Q===c)return[2,[e,c]];if((C||n.has(e))&&Q===u&&A[w+2]===c)return[3,C?[e,c]:[e,u,c]];let i=M(A,w);if(!i)return[0];let[f,o]=i,I=w+f;if(Q=A[I],Q===E){let r=U(D,o);if(r){let t,e=[],n=I;for(;A[n++]===E;){let w=M(A,n);if(!w)break;let[B,Q]=w;if(r=U(r,Q),!r)break;n+=B,1===r?(o.push(E,...Q),t=n):(e.push(E,...Q),r.hasOwnProperty("")&&(o.push(...e),e.length=0,t=n))}if(t)return[t-w,o]}}if(g.has(Q)){let r=I+1;for(;g.has(A[r]);)r++;if(917631===A[r++])return[r-w,o.concat(A.slice(I,1+r-I))]}return i}}(D);function F(A){return A.flatMap((({e:A,v:r})=>A??g(r)))}function h(A,r){return new Error(`Disallowed label "${f(String.fromCodePoint(...A))}": ${r}`)}function b(A){const r=45;return Y(g(o(A)),(A=>{if(M.has(A))return;if(s.has(A))return[];if(I.has(A))return[A];let r=i(K,A);if(r)return r;throw new Error(`Disallowed character "${f(String.fromCodePoint(A))}"`)})).map((A=>{let t=F(A);if(t.length>=4&&120==t[0]&&110==t[1]&&t[2]==r&&t[3]==r)try{let r=function(A){let r=[],t=A.lastIndexOf(45);for(let w=0;w<t;w++){let t=A[w];if(t>=128)throw new Error("expected ASCII");r.push(t)}t++;const w=36;let e=0,n=128,B=72;for(;t<A.length;){let Q=e;for(let r=1,n=w;;n+=w){if(t>=A.length)throw new Error("invalid encoding");let Q=A[t++];if(Q>=48&&Q<=57)Q-=22;else{if(!(Q>=97&&Q<=122))throw new Error(`invalid character ${Q}`);Q-=97}e+=Q*r;const C=n<=B?1:n>=B+26?26:n-B;if(Q<C)break;r*=w-C}let C=r.length+1,i=0==Q?e/700|0:e-Q>>1;i+=i/C|0;let f=0;for(;i>455;f+=w)i=i/35|0;B=f+36*i/(i+38)|0,n+=e/C|0,e%=C,r.splice(e++,0,n)}return r}(t.slice(4));[A]=Y(r,(A=>I.has(A)?[A]:[]));let w=F(A);if(r.length!=w.length||!r.every(((A,r)=>A==w[r])))throw new Error("not normalized");t=r}catch(A){throw h(t,`punycode: ${A.message}`)}let w=A.reduce(((A,{v:r})=>(r?A.push(...r):A.length>0&&A.push(65039),A)),[]);if(t.length>0){if(t.length>=4&&t[2]==r&&t[3]==r)throw h(t,"invalid label extension");if(t[0]==r)throw h(t,"leading hyphen");if(t[t.length-1]==r)throw h(t,"trailing hyphen");if(G.has(t[0]))throw h(t,"leading combining mark")}return{cps:t,text:w}})).map((A=>String.fromCodePoint(...A.cps))).join(".")}function N(A){return Y(o(A),(A=>{if(M.has(A))return{};if(I.has(A))return[A];if(s.has(A))return{i:A};let r=i(K,A);return r?{m:r,u:[A]}:{d:A}}))[0]}function Y(A,r){let t=[],w=[],e=[w];function n(){t.length>0&&(w.push({v:t}),t=[])}for(let B=0;B<A.length;B++){if(k){let[r,t]=k(A,B);if(r>0){n(),w.push({e:t,u:A.slice(B,B+r)}),B+=r-1;continue}}let Q=r(A[B]);Array.isArray(Q)?t.push(...Q):(n(),Q?w.push(Q):(w=[],e.push(w)))}return n(),e}export{u as BUILT,U as NAME,E as UNICODE,c as VERSION,b as ens_normalize,N as ens_tokenize};
