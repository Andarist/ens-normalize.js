function A(A){return 1&A?~A>>1:A>>1}function t(A,t){let e=Array(A);for(let r=0,n=-1;r<A;r++)e[r]=n+=1+t();return e}function e(t,e){let r=Array(t);for(let n=0,B=0;n<t;n++)r[n]=B+=A(e());return r}function r(A,e){let r=t(A(),A),n=A(),B=t(n,A),Q=function(A,t){let e=Array(A);for(let r=0;r<A;r++)e[r]=1+t();return e}(n,A);for(let A=0;A<n;A++)for(let t=0;t<Q[A];t++)r.push(B[A]+t);return e?r.map((A=>e[A])):r}function n(A){let t=[];for(;;){let e=A();if(!e)break;t.push(e)}return t}function B(A,t,r){let n=Array(A).fill().map((()=>[]));for(let B=0;B<t;B++)e(A,r).forEach(((A,t)=>n[t].push(A)));return n}function Q(A,t){let e=1+t(),r=t(),Q=n(t);return B(Q.length,1+A,t).flatMap(((A,t)=>{let[n,...B]=A;return Array(Q[t]).fill().map(((A,t)=>{let Q=t*r;return[n+t*e,B.map((A=>A+Q))]}))}))}function w(A,t){return B(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var o=function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let r=e(),n=1,B=[0,1];for(let A=1;A<r;A++)B.push(n+=e());let Q=e(),w=t;t+=Q;let o=0,l=0;function i(){return 0==o&&(l=l<<8|A[t++],o=8),l>>--o&1}const C=2**31,f=C>>>1,E=C-1;let g=0;for(let A=0;A<31;A++)g=g<<1|i();let D=[],s=0,c=C;for(;;){let A=Math.floor(((g-s+1)*n-1)/c),t=0,e=r;for(;e-t>1;){let r=t+e>>>1;A<B[r]?e=r:t=r}if(0==t)break;D.push(t);let Q=s+Math.floor(c*B[t]/n),w=s+Math.floor(c*B[t+1]/n)-1;for(;0==((Q^w)&f);)g=g<<1&E|i(),Q=Q<<1&E,w=w<<1&E|1;for(;Q&~w&536870912;)g=g&f|g<<1&E>>>1|i(),Q=Q<<1^f,w=(w^f)<<1|f|1;s=Q,c=1+w-Q}let h=r-4;return D.map((t=>{switch(t-h){case 3:return h+65792+(A[w++]<<16|A[w++]<<8|A[w++]);case 2:return h+256+(A[w++]<<8|A[w++]);case 1:return h+A[w++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,r=new Uint8Array(6*e>>3);for(let n=0,B=0,Q=0,w=0;n<e;n++)w=w<<6|t[A.charCodeAt(n)],Q+=6,Q>=8&&(r[B++]=w>>(Q-=8));return r}("")));function l(A){return A.toString(16).toUpperCase().padStart(2,"0")}function i(A){let t=[];for(let e=0,r=A.length;e<r;){let r=A.codePointAt(e);e+=r<65536?1:2,t.push(r)}return t}function C(A){return String.fromCodePoint(...A)}function f(A,t){return i(C(A).normalize(t))}function E(A){return f(A,"NFC")}function g(A){return f(A,"NFD")}const D=r(o).sort(((A,t)=>A-t)),s=new Set(D),c=new Set(r(o)),h=new Map(function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(Q(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(w(e,A))}return t.flat()}(o));function a(){return new Set(r(o,D))}const F=a(),u=a(),U=["Latin","Greek","Cyrillic"].map(((A,t)=>[A,a(),t?a():0])),k=n((()=>{let A=a();if(A.size)return A})),p=new Set(r(o)),I=function(A){let t=r(A).sort(((A,t)=>A-t));return function e(){let n=[];for(;;){let B=r(A,t);if(0==B.length)break;n.push({set:new Set(B),node:e()})}n.sort(((A,t)=>t.set.size-A.set.size));let B=A(),Q=B%3;B=B/3|0;let w=!!(1&B);return B>>=1,{branches:n,valid:Q,fe0f:w,save:1==B,check:2==B}}()}(o),G=a();function V(A){let t=A.lastIndexOf(95);for(;t>0;)if(95!==A[--t])throw new Error("underscore only allowed at start")}function M(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}function d(A,t,e,r,n){let B=-1;if(A[0]===t){if(r)throw new Error(`leading ${e}`);B=0}for(;;){let r=A.indexOf(t,B+1);if(-1==r)break;if(B==r-1)throw new Error(`adjacent ${e}`);B=r}if(n&&B==A.length-1)throw new Error(`trailing ${e}`)}function H(A){let t=0;for(;t=A.indexOf(183,t),-1!=t;){if(108!==A[t-1]||108!==A[t+1])throw new Error("ContextO: middle dot");t+=2}}function x(A){for(let t=0;t<U.length;t++){let[e,r,n]=U[t];if(A.some((A=>r.has(A)))){for(let r=t+1;r<U.length;r++){let[t,n]=U[r];if(A.some((A=>n.has(A))))throw new Error(`mixed-script confusable: ${e} + ${t}`)}if(n&&A.every((A=>!r.has(A)||n.has(A))))throw new Error(`whole-script confusable: ${e}`);break}}}function J(A){for(let t of k)if(A.some((A=>t.has(A)))){if(!A.every((A=>t.has(A)||65039==A)))throw new Error("excluded script cannot mix");break}}function L(A){for(let t=0,e=-1;t<A.length;t++)if(F.has(A[t])){if(0==t)throw new Error("leading combining mark");if(t==e)throw new Error(`adjacent combining marks "${C(A.slice(t-2,t+1))}"`);{let e=A[t-1];if(65039==e||u.has(e))throw new Error("isolate combining mark")}e=t+1}}function K(A){for(let t of A.split(".")){if(!t)throw new Error("Empty label");try{let A=i(t);V(A),M(A),d(A,8217,"apostrophe",!0,!0),H(A),x(A);let e=g(O(t,(()=>[65039])));L(e),J(e)}catch(A){throw new Error(`Invalid label "${t}": ${A.message}`)}}return A}function T(A,t=E){return C(t(O(A,P)))}function R(A){return K(T(A))}function Z(A){return C(E(O(A,(A=>A))))}function P(A){return A.filter((A=>65039!=A))}function O(A,t){let e=i(A).reverse(),r=[];for(;e.length;){let A=X(e);if(A)r.push(...t(A));else{let A=e.pop();if(s.has(A))r.push(A);else{let t=h.get(A);if(t)r.push(...t);else if(!c.has(A))throw new Error(`Disallowed codepoint: 0x${l(A)}`)}}}return r}function X(A,t){let e,r,n=I,B=[],Q=A.length;for(t&&(t.length=0);Q;){let w=A[--Q],o=n.branches.find((A=>A.set.has(w)));if(!o)break;if(n=o.node,n.save)r=w;else if(n.check&&w===r)break;B.push(w),n.fe0f&&(B.push(65039),Q>0&&65039==A[Q-1]&&Q--),n.valid&&(e=y(B,n),t&&t.push(...A.slice(Q).reverse()),A.length=Q)}if(!e){let r=A[A.length-1];p.has(r)&&(t&&t.push(r),e=[r],A.pop())}return e}function y(A,t){let e=A.slice();return 2==t.valid&&e.splice(1,1),e}function N(){let A=[...p].map((A=>[A]));return function t(e,r,n){if(e.save)n=r[r.length-1];else if(e.check&&n===r[r.length-1])return;e.fe0f&&r.push(65039),e.valid&&A.push(y(r,e));for(let A of e.branches)for(let e of A.set)t(A.node,[...r,e],n)}(I,[]),A}function b(A){let t=i(A).reverse(),e=[],r=[];for(;t.length;){let A=X(t,e);if(A)r.push({type:"emoji",emoji:A,input:e.slice(),cps:P(A)});else{let A=t.pop();if(46===A)r.push({type:"stop"});else if(s.has(A))u.has(A)?r.push({type:"isolated",cp:A}):r.push({type:"valid",cps:[A]});else if(c.has(A))r.push({type:"ignored",cp:A});else{let t=h.get(A);t?r.push({type:"mapped",cp:A,cps:t.slice()}):r.push({type:"disallowed",cp:A})}}}for(let A=0,t=-1;A<r.length;A++){let e=r[A];if(v(e.type))if(z(e.cps)){let e=A+1;for(let A=e;A<r.length;A++){let{type:t,cps:n}=r[A];if(v(t)){if(!z(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=r.slice(t,e),B=n.flatMap((A=>v(A.type)?A.cps:[])),Q=E(B);C(B)===C(Q)?A=e-1:(r.splice(t,e-t,{type:"nfc",input:B,cps:Q,tokens:m(n)}),A=t),t=-1}else t=A;else"emoji"===e.type&&(t=-1)}return m(r)}function v(A){return"valid"===A||"mapped"===A}function z(A){return A.some((A=>G.has(A)))}function m(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}export{Z as ens_beautify,N as ens_emoji,R as ens_normalize,T as ens_normalize_fragment,K as ens_normalize_post_check,b as ens_tokenize,E as nfc,g as nfd};
