function A(A){return 1&A?~A>>1:A>>1}function e(A,e){let t=Array(A);for(let r=0,n=-1;r<A;r++)t[r]=n+=1+e();return t}function t(e,t){let r=Array(e);for(let n=0,B=0;n<e;n++)r[n]=B+=A(t());return r}function r(A,t){let r=e(A(),A),n=A(),B=e(n,A),l=function(A,e){let t=Array(A);for(let r=0;r<A;r++)t[r]=1+e();return t}(n,A);for(let A=0;A<n;A++)for(let e=0;e<l[A];e++)r.push(B[A]+e);return t?r.map((A=>t[A])):r}function n(A){let e=[];for(;;){let t=A();if(!t)break;e.push(t)}return e}function B(A,e,r){let n=Array(A).fill().map((()=>[]));for(let B=0;B<e;B++)t(A,r).forEach(((A,e)=>n[e].push(A)));return n}function l(A,e){let t=1+e(),r=e(),l=n(e);return B(l.length,1+A,e).flatMap(((A,e)=>{let[n,...B]=A;return Array(l[e]).fill().map(((A,e)=>{let l=e*r;return[n+e*t,B.map((A=>A+l))]}))}))}function w(A,e){return B(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var Q=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,B=[0,1];for(let A=1;A<r;A++)B.push(n+=t());let l=t(),w=e;e+=l;let Q=0,o=0;function f(){return 0==Q&&(o=o<<8|A[e++],Q=8),o>>--Q&1}const s=2**31,i=s>>>1,c=s-1;let E=0;for(let A=0;A<31;A++)E=E<<1|f();let C=[],g=0,M=s;for(;;){let A=Math.floor(((E-g+1)*n-1)/M),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<B[r]?t=r:e=r}if(0==e)break;C.push(e);let l=g+Math.floor(M*B[e]/n),w=g+Math.floor(M*B[e+1]/n)-1;for(;0==((l^w)&i);)E=E<<1&c|f(),l=l<<1&c,w=w<<1&c|1;for(;l&~w&536870912;)E=E&i|E<<1&c>>>1|f(),l=l<<1^i,w=(w^i)<<1|i|1;g=l,M=1+w-l}let u=r-4;return C.map((e=>{switch(e-u){case 3:return u+65792+(A[w++]<<16|A[w++]<<8|A[w++]);case 2:return u+256+(A[w++]<<8|A[w++]);case 1:return u+A[w++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,B=0,l=0,w=0;n<t;n++)w=w<<6|e[A.charCodeAt(n)],l+=6,l>=8&&(r[B++]=w>>(l-=8));return r}("")));function o(A){return A.toString(16).toUpperCase().padStart(2,"0")}function f(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function s(A){return String.fromCodePoint(...A)}function i(A,e){return f(s(A).normalize(e))}function c(A){return i(A,"NFC")}function E(A){return i(A,"NFD")}const C=r(Q).sort(((A,e)=>A-e)),g=new Set(C),M=new Set(r(Q)),u=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(l(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(w(t,A))}return e.flat()}(Q));function h(){return new Set(r(Q,C))}const p=h(),U=h(),D=["Latin","Greek","Cyrillic"].map(((A,e)=>[A,h(),e?h():0])),k=n((()=>{let A=h();if(A.size)return A})),F=new Set(r(Q)),a=function(A){let e=r(A).sort(((A,e)=>A-e));return function t(){let n=[];for(;;){let B=r(A,e);if(0==B.length)break;n.push({set:new Set(B),node:t()})}n.sort(((A,e)=>e.set.size-A.set.size));let B=A(),l=B%3;B=B/3|0;let w=!!(1&B);return B>>=1,{branches:n,valid:l,fe0f:w,save:1==B,check:2==B}}()}(Q),I=h();function K(A){let e=A.lastIndexOf(95);for(;e>0;)if(95!==A[--e])throw new Error("underscore only allowed at start")}function V(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}function L(A,e,t,r,n){let B=-1;if(A[0]===e){if(r)throw new Error(`leading ${t}`);B=0}for(;;){let r=A.indexOf(e,B+1);if(-1==r)break;if(B==r-1)throw new Error(`adjacent ${t}`);B=r}if(n&&B==A.length-1)throw new Error(`trailing ${t}`)}function O(A){let e=0;for(;e=A.indexOf(183,e),-1!=e;){if(108!==A[e-1]||108!==A[e+1])throw new Error("ContextO: middle dot");e+=2}}function T(A){for(let e=0;e<D.length;e++){let[t,r,n]=D[e];if(A.some((A=>r.has(A)))){for(let r=e+1;r<D.length;r++){let[e,n]=D[r];if(A.some((A=>n.has(A))))throw new Error(`mixed-script confusable: ${t} + ${e}`)}if(n&&A.every((A=>!r.has(A)||n.has(A))))throw new Error(`whole-script confusable: ${t}`);break}}}function G(A){for(let e of k)if(A.some((A=>e.has(A)))){if(!A.every((A=>e.has(A)||65039==A)))throw new Error("restricted script cannot mix");break}}function R(A){for(let e=0,t=-1;e<A.length;e++)if(p.has(A[e])){if(0==e)throw new Error("leading combining mark");if(e==t)throw new Error(`adjacent combining marks "${s(A.slice(e-2,e+1))}"`);{let t=A[e-1];if(65039==t||U.has(t))throw new Error("isolate combining mark")}t=e+1}}function d(A){for(let e of A.split(".")){if(!e)throw new Error("Empty label");try{let A=f(e);K(A),V(A),L(A,8217,"apostrophe",!0,!0),O(A),T(A);let t=E(S(e,(()=>[65039])));R(t),G(t)}catch(A){throw new Error(`Invalid label "${e}": ${A.message}`)}}return A}function x(A,e=c){return s(e(S(A,J)))}function m(A){return d(x(A))}function N(A){return s(c(S(A,(A=>A))))}function J(A){return A.filter((A=>65039!=A))}function S(A,e){let t=f(A).reverse(),r=[];for(;t.length;){let A=y(t);if(A)r.push(...e(A));else{let A=t.pop();if(g.has(A))r.push(A);else{let e=u.get(A);if(e)r.push(...e);else if(!M.has(A))throw new Error(`Disallowed codepoint: 0x${o(A)}`)}}}return r}function y(A,e){let t,r,n=a,B=[],l=A.length;for(e&&(e.length=0);l;){let w=A[--l],Q=n.branches.find((A=>A.set.has(w)));if(!Q)break;if(n=Q.node,n.save)r=w;else if(n.check&&w===r)break;B.push(w),n.fe0f&&(B.push(65039),l>0&&65039==A[l-1]&&l--),n.valid&&(t=H(B,n),e&&e.push(...A.slice(l).reverse()),A.length=l)}if(!t){let r=A[A.length-1];F.has(r)&&(e&&e.push(r),t=[r],A.pop())}return t}function H(A,e){let t=A.slice();return 2==e.valid&&t.splice(1,1),t}function b(){let A=[...F].map((A=>[A]));return function e(t,r,n){if(t.save)n=r[r.length-1];else if(t.check&&n===r[r.length-1])return;t.fe0f&&r.push(65039),t.valid&&A.push(H(r,t));for(let A of t.branches)for(let t of A.set)e(A.node,[...r,t],n)}(a,[]),A}function P(A){let e=f(A).reverse(),t=[],r=[];for(;e.length;){let A=y(e,t);if(A)r.push({type:"emoji",emoji:A,input:t.slice(),cps:J(A)});else{let A=e.pop();if(46===A)r.push({type:"stop",cp:A});else if(g.has(A))U.has(A)?r.push({type:"isolated",cp:A}):r.push({type:"valid",cps:[A]});else if(M.has(A))r.push({type:"ignored",cp:A});else{let e=u.get(A);e?r.push({type:"mapped",cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(Z(t.type))if(Y(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(Z(e)){if(!Y(n))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let n=r.slice(e,t),B=n.flatMap((A=>Z(A.type)?A.cps:[])),l=c(B);s(B)===s(l)?A=t-1:(r.splice(e,t-e,{type:"nfc",input:B,cps:l,tokens:X(n)}),A=e),e=-1}else e=A;else"emoji"===t.type&&(e=-1)}return X(r)}function Z(A){return"valid"===A||"mapped"===A}function Y(A){return A.some((A=>I.has(A)))}function X(A){for(let e=0;e<A.length;e++)if("valid"===A[e].type){let t=e+1;for(;t<A.length&&"valid"===A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{N as ens_beautify,b as ens_emoji,m as ens_normalize,x as ens_normalize_fragment,d as ens_normalize_post_check,P as ens_tokenize,c as nfc,E as nfd};
