function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let n=Array(e);for(let r=0,w=0;r<e;r++)n[r]=w+=A(t());return n}function t(A,e=0){let t=[];for(;;){let n=A(),r=A();if(!r)break;e+=n;for(let A=0;A<r;A++)t.push(e+A);e+=r+1}return t}function n(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function r(A,t,n){let r=Array(A).fill().map((()=>[]));for(let w=0;w<t;w++)e(A,n).forEach(((A,e)=>r[e].push(A)));return r}function w(A,e){let t=1+e(),w=e(),o=n(e);return r(o.length,1+A,e).flatMap(((A,e)=>{let[n,...r]=A;return Array(o[e]).fill().map(((A,e)=>{let o=e*w;return[n+e*t,r.map((A=>A+o))]}))}))}function o(A,e){return r(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var l=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),r=1,w=[0,1];for(let A=1;A<n;A++)w.push(r+=t());let o=t(),l=e;e+=o;let f=0,C=0;function s(){return 0==f&&(C=C<<8|A[e++],f=8),C>>--f&1}const Q=2**31,B=Q>>>1,c=Q-1;let D=0;for(let A=0;A<31;A++)D=D<<1|s();let i=[],E=0,h=Q;for(;;){let A=Math.floor(((D-E+1)*r-1)/h),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<w[n]?t=n:e=n}if(0==e)break;i.push(e);let o=E+Math.floor(h*w[e]/r),l=E+Math.floor(h*w[e+1]/r)-1;for(;0==((o^l)&B);)D=D<<1&c|s(),o=o<<1&c,l=l<<1&c|1;for(;o&~l&536870912;)D=D&B|D<<1&c>>>1|s(),o=o<<1^B,l=(l^B)<<1|B|1;E=o,h=1+l-o}let g=n-4;return i.map((e=>{switch(e-g){case 3:return g+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return g+256+(A[l++]<<8|A[l++]);case 1:return g+A[l++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,n=new Uint8Array(6*t>>3);for(let r=0,w=0,o=0,l=0;r<t;r++)l=l<<6|e[A.charCodeAt(r)],o+=6,o>=8&&(n[w++]=l>>(o-=8));return n}("")));const f=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function C(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function s(A){let e=[];for(let t=0,n=A.length;t<n;){let n=A.codePointAt(t);t+=n<65536?1:2,e.push(n)}return e}function Q(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let n=0;n<e;)t.push(String.fromCodePoint(...A.slice(n,n+=4096)));return t.join("")}function B(A,e){let{length:t}=A,n=t-e.length;for(let r=0;0==n&&r<t;r++)n=A[r]-e[r];return n}function c(A,e){return s(Q(A).normalize(e))}function D(A){return c(A,"NFC")}function i(A){return c(A,"NFD")}function E(){return new Set(t(l))}const h=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(w(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(o(t,A))}return e.flat()}(l)),g=E(),u=E(),p=E(),M=E(),a=(I=l,n((()=>{let A=t(I);if(A.length)return A})));var I;function J(){return new Set([t(l).map((A=>a[A])),t(l)].flat(2))}const U=l(),F=n((A=>{let e=n(l).map((A=>A+96));if(e.length){let t=A>=U;e[0]-=32,e=Q(e),t&&(e=`Restricted[${e}]`);let n=J(),r=J(),w=[...n,...r].sort(((A,e)=>A-e));return{N:e,P:n,M:l()-1,R:t,V:new Set(w)}}})),k=E(),N=new Map;[...k,...E()].sort(((A,e)=>A-e)).map(((A,e,t)=>{let n=l(),r=t[e]=n?t[e-n]:{V:[],M:new Map};r.V.push(A),k.has(A)||N.set(A,r)}));for(let{V:A,M:e}of new Set(N.values())){let t=[];for(let e of A){let A=F.filter((A=>A.V.has(e))),n=t.find((({G:e})=>A.some((A=>e.has(A)))));n||(n={G:new Set,V:[]},t.push(n)),n.V.push(e),A.forEach((A=>n.G.add(A)))}let n=t.flatMap((({G:A})=>[...A]));for(let{G:A,V:r}of t){let t=new Set(n.filter((e=>!A.has(e))));for(let A of r)e.set(A,t)}}let R=new Set,y=new Set;for(let A of F)for(let e of A.V)(R.has(e)?y:R).add(e);for(let A of R)N.has(A)||y.has(A)||N.set(A,1);const d=new Set([...R,...i(R)]),j=t(l),G=function A(e){let r=n((()=>{let e=t(l).map((A=>j[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),w=l(),o=w%3;w=w/3|0;let f=1&w;return w>>=1,{B:r,V:o,F:f,S:1&w,C:2&w,Q:new Set(e)}}([]);class H extends Array{get is_emoji(){return!0}}function V(A,e=C){let t=[];P(A[0])&&t.push("◌");let n=0,r=A.length;for(let w=0;w<r;w++){let r=A[w];L(r)&&(t.push(Q(A.slice(n,w))),t.push(e(r)),n=w+1)}return t.push(Q(A.slice(n,r))),t.join("")}function b(A){return(L(A)?"":`"${V([A])}" `)+C(A)}function m(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}function P(A){return u.has(A)}function L(A){return p.has(A)}function O(A,e=D){return A.split(".").map((A=>Q(X(s(A),e).flatMap((A=>A.is_emoji?z(A):A))))).join(".")}function W(A){return q(S(A))}function Y(A){let e=S(A,!0);for(let{type:A,output:t,error:n}of e)if(!n&&"Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return q(e)}function S(A,e){let t=0;return A.split(".").map((A=>{let n,r=s(A),w={input:r,offset:t};t+=r.length+1;try{let A,t=w.tokens=X(r,D),o=t.length;if(o){let r=t[0],l=o>1||r.is_emoji;if(!l&&r.every((A=>A<128)))n=r,m(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(l&&(w.emoji=!0,r=t.flatMap((A=>A.is_emoji?[]:A))),n=t.flatMap((A=>!e&&A.is_emoji?z(A):A)),m(n),r.length){if(u.has(n[0]))throw K("leading combining mark");for(let A=1;A<o;A++){let e=t[A];if(!e.is_emoji&&u.has(e[0]))throw K(`emoji + combining mark: "${Q(t[A-1])} + ${V([e[0]])}"`)}!function(A){let e=A[0],t=f.get(e);if(t)throw K(`leading ${t}`);let n=A.length,r=-1;for(let w=1;w<n;w++){e=A[w];let n=f.get(e);if(n){if(r==w)throw K(`${t} + ${n}`);r=w+1,t=n}}if(r==n)throw K(`trailing ${t}`)}(n);let e=[...new Set(r)],[w]=function(A){let e=F;for(let t of A){let A=e.filter((A=>A.V.has(t)));if(!A.length)throw e===F?x(t):Z(e[0],t);if(e=A,1==A.length)break}return e}(e);!function(A,e){let{V:t,M:n}=A;for(let n of e)if(!t.has(n))throw Z(A,n);if(n>=0)for(let t=1,r=i(e).length;t<r;t++)if(u.has(e[t])){let w=t+1;for(;w<r&&u.has(e[w]);)w++;if(w-t>n)throw new Error(`too many combining marks: ${A.N} "${Q(e.slice(t-1,w))}" (${w-t}/${n})`);t=w}}(w,r),function(A,e){let t,n=[];for(let A of e){let e=N.get(A);if(1===e)return;if(e){let n=e.M.get(A);if(t=t?t.filter((A=>n.has(A))):[...n],!t.length)return}else n.push(A)}if(t)for(let e of t)if(n.every((A=>e.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(w,e),A=w.N}else A="Emoji"}else n=[],A="None";w.type=A}catch(A){w.error=A}return w.output=n,w}))}function q(A){return A.map((({input:e,error:t,output:n})=>{if(t){let n=t.message;throw new Error(1==A.length?n:`Invalid label "${V(e)}": ${n}`)}return Q(n)})).join(".")}function x(A){return new Error(`disallowed character: ${b(A)}`)}function Z(A,e){let t=b(e),n=F.find((A=>A.P.has(e)));return n&&(t=`${n.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function K(A){return new Error(`illegal placement: ${A}`)}function X(A,e){let t=[],n=[];for(A=A.slice().reverse();A.length;){let r=T(A);if(r)n.length&&(t.push(e(n)),n=[]),t.push(r);else{let e=A.pop();if(d.has(e))n.push(e);else{let A=h.get(e);if(A)n.push(...A);else if(!g.has(e))throw x(e)}}}return n.length&&t.push(e(n)),t}function z(A){return A.filter((A=>65039!=A))}function T(A,e){let t,n,r=G,w=[],o=A.length;for(e&&(e.length=0);o;){let l=A[--o];if(r=r.B.find((A=>A.Q.has(l))),!r)break;if(r.S)n=l;else if(r.C&&l===n)break;w.push(l),r.F&&(w.push(65039),o>0&&65039==A[o-1]&&o--),r.V&&(t=v(w,r),e&&e.push(...A.slice(o).reverse()),A.length=o)}return t}function v(A,e){let t=H.from(A);return 2==e.V&&t.splice(1,1),t}function $(){let A=[];return function e(t,n,r){if(t.S)r=n[n.length-1];else if(t.C&&r===n[n.length-1])return;t.F&&n.push(65039),t.V&&A.push(v(n,t));for(let A of t.B)for(let t of A.Q)e(A,[...n,t],r)}(G,[]),A.sort(B)}function _(A,{nf:e=!0}={}){let t=s(A).reverse(),n=[],r=[];for(;t.length;){let A=T(t,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:z(A)});else{let A=t.pop();if(46==A)r.push({type:"stop",cp:A});else if(d.has(A))r.push({type:"valid",cps:[A]});else if(g.has(A))r.push({type:"ignored",cp:A});else{let e=h.get(A);e?r.push({type:"mapped",cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(AA(t.type))if(eA(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(AA(e)){if(!eA(n))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let n=r.slice(e,t),w=n.flatMap((A=>AA(A.type)?A.cps:[])),o=D(w);B(o,w)?(r.splice(e,t-e,{type:"nfc",input:w,cps:o,tokens0:tA(n),tokens:_(Q(o),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else"ignored"!==t.type&&(e=-1)}return tA(r)}function AA(A){return"valid"==A||"mapped"==A}function eA(A){return A.some((A=>M.has(A)))}function tA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{Y as ens_beautify,$ as ens_emoji,W as ens_normalize,O as ens_normalize_fragment,S as ens_split,_ as ens_tokenize,P as is_combining_mark,D as nfc,i as nfd,V as safe_str_from_cps,L as should_escape};
