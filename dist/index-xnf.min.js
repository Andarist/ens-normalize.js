function A(A){return 1&A?~A>>1:A>>1}function t(t,e){let r=Array(t);for(let n=0,l=0;n<t;n++)r[n]=l+=A(e());return r}function e(A,t=0){let e=[];for(;;){let r=A(),n=A();if(!n)break;t+=r;for(let A=0;A<n;A++)e.push(t+A);t+=n+1}return e}function r(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function n(A,e,r){let n=Array(A).fill().map((()=>[]));for(let l=0;l<e;l++)t(A,r).forEach(((A,t)=>n[t].push(A)));return n}function l(A,t){let e=1+t(),l=t(),Q=r(t);return n(Q.length,1+A,t).flatMap(((A,t)=>{let[r,...n]=A;return Array(Q[t]).fill().map(((A,t)=>{let Q=t*l;return[r+t*e,n.map((A=>A+Q))]}))}))}function Q(A,t){return n(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var w=function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let r=e(),n=1,l=[0,1];for(let A=1;A<r;A++)l.push(n+=e());let Q=e(),w=t;t+=Q;let f=0,o=0;function i(){return 0==f&&(o=o<<8|A[t++],f=8),o>>--f&1}const s=2**31,C=s>>>1,B=s-1;let c=0;for(let A=0;A<31;A++)c=c<<1|i();let g=[],u=0,E=s;for(;;){let A=Math.floor(((c-u+1)*n-1)/E),t=0,e=r;for(;e-t>1;){let r=t+e>>>1;A<l[r]?e=r:t=r}if(0==t)break;g.push(t);let Q=u+Math.floor(E*l[t]/n),w=u+Math.floor(E*l[t+1]/n)-1;for(;0==((Q^w)&C);)c=c<<1&B|i(),Q=Q<<1&B,w=w<<1&B|1;for(;Q&~w&536870912;)c=c&C|c<<1&B>>>1|i(),Q=Q<<1^C,w=(w^C)<<1|C|1;u=Q,E=1+w-Q}let h=r-4;return g.map((t=>{switch(t-h){case 3:return h+65792+(A[w++]<<16|A[w++]<<8|A[w++]);case 2:return h+256+(A[w++]<<8|A[w++]);case 1:return h+A[w++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,r=new Uint8Array(6*e>>3);for(let n=0,l=0,Q=0,w=0;n<e;n++)w=w<<6|t[A.charCodeAt(n)],Q+=6,Q>=8&&(r[l++]=w>>(Q-=8));return r}("")));const f=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function o(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function i(A){let t=[];for(let e=0,r=A.length;e<r;){let r=A.codePointAt(e);e+=r<65536?1:2,t.push(r)}return t}function s(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let r=0;r<t;)e.push(String.fromCodePoint(...A.slice(r,r+=4096)));return e.join("")}function C(A,t){let{length:e}=A,r=e-t.length;for(let n=0;0==r&&n<e;n++)r=A[n]-t[n];return r}function B(A,t){return i(s(A).normalize(t))}function c(A){return B(A,"NFC")}function g(A){return B(A,"NFD")}function u(){return new Set(e(w))}const E=new Map(function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(l(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(Q(e,A))}return t.flat()}(w)),h=u(),p=u(),D=u(),a=u(),k=(M=w,r((()=>{let A=e(M);if(A.length)return A})));var M;function I(){return new Set([e(w).map((A=>k[A])),e(w)].flat(2))}const R=w(),G=r((A=>{let t=r(w).map((A=>A+96));if(t.length){let e=A>=R;t[0]-=32,t=s(t),e&&(t=`Restricted[${t}]`);let r=I(),n=I(),l=[...r,...n].sort(((A,t)=>A-t));return{N:t,P:r,M:w()-1,R:e,V:new Set(l)}}})),F=u(),J=new Map;[...F,...u()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let r=w(),n=e[t]=r?e[t-r]:{V:[],M:new Map};n.V.push(A),F.has(A)||J.set(A,n)}));for(let{V:A,M:t}of new Set(J.values())){let e=[];for(let t of A){let A=G.filter((A=>A.V.has(t))),r=e.find((({G:t})=>A.some((A=>t.has(A)))));r||(r={G:new Set,V:[]},e.push(r)),r.V.push(t),A.forEach((A=>r.G.add(A)))}let r=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:n}of e){let e=new Set(r.filter((t=>!A.has(t))));for(let A of n)t.set(A,e)}}let K=new Set,N=new Set;for(let A of G)for(let t of A.V)(K.has(t)?N:K).add(t);for(let A of K)J.has(A)||N.has(A)||J.set(A,1);const m=new Set([...K,...g(K)]),L=e(w),z=function A(t){let n=r((()=>{let t=e(w).map((A=>L[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),l=w(),Q=l%3;l=l/3|0;let f=1&l;return l>>=1,{B:n,V:Q,F:f,S:1&l,C:2&l,Q:new Set(t)}}([]);class U extends Array{get is_emoji(){return!0}}function j(A,t=o){let e=[];V(A[0])&&e.push("◌");let r=0,n=A.length;for(let l=0;l<n;l++){let n=A[l];O(n)&&(e.push(s(A.slice(r,l))),e.push(t(n)),r=l+1)}return e.push(s(A.slice(r,n))),e.join("")}function S(A){return(O(A)?"":`"${j([A])}" `)+o(A)}function d(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function V(A){return p.has(A)}function O(A){return D.has(A)}function x(A,t=c){return A.split(".").map((A=>s(T(i(A),t).flatMap((A=>A.is_emoji?y(A):A))))).join(".")}function H(A){return b(Y(A))}function P(A){let t=Y(A,!0);for(let{type:A,output:e,error:r}of t)if(!r&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return b(t)}function Y(A,t){let e=0;return A.split(".").map((A=>{let r,n=i(A),l={input:n,offset:e};e+=n.length+1;try{let A,e=l.tokens=T(n,c),Q=e.length;if(Q){let n=e[0],w=Q>1||n.is_emoji;if(!w&&n.every((A=>A<128)))r=n,d(r),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(r),A="ASCII";else if(w&&(l.emoji=!0,n=e.flatMap((A=>A.is_emoji?[]:A))),r=e.flatMap((A=>!t&&A.is_emoji?y(A):A)),d(r),n.length){if(p.has(r[0]))throw X("leading combining mark");for(let A=1;A<Q;A++){let t=e[A];if(!t.is_emoji&&p.has(t[0]))throw X(`emoji + combining mark: "${s(e[A-1])} + ${j([t[0]])}"`)}!function(A){let t=A[0],e=f.get(t);if(e)throw X(`leading ${e}`);let r=A.length,n=-1;for(let l=1;l<r;l++){t=A[l];let r=f.get(t);if(r){if(n==l)throw X(`${e} + ${r}`);n=l+1,e=r}}if(n==r)throw X(`trailing ${e}`)}(r);let t=[...new Set(n)],[l]=function(A){let t=G;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===G?v(e):W(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:r}=A;for(let r of t)if(!e.has(r))throw W(A,r);if(r>=0)for(let e=1,n=g(t).length;e<n;e++)if(p.has(t[e])){let l=e+1;for(;l<n&&p.has(t[l]);)l++;if(l-e>r)throw new Error(`too many combining marks: ${A.N} "${s(t.slice(e-1,l))}" (${l-e}/${r})`);e=l}}(l,n),function(A,t){let e,r=[];for(let A of t){let t=J.get(A);if(1===t)return;if(t){let r=t.M.get(A);if(e=e?e.filter((A=>r.has(A))):[...r],!e.length)return}else r.push(A)}if(e)for(let t of e)if(r.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(l,t),A=l.N}else A="Emoji"}else r=[],A="None";l.type=A}catch(A){l.error=A}return l.output=r,l}))}function b(A){return A.map((({input:t,error:e,output:r})=>{if(e){let r=e.message;throw new Error(1==A.length?r:`Invalid label "${j(t)}": ${r}`)}return s(r)})).join(".")}function v(A){return new Error(`disallowed character: ${S(A)}`)}function W(A,t){let e=S(t),r=G.find((A=>A.P.has(t)));return r&&(e=`${r.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function X(A){return new Error(`illegal placement: ${A}`)}function T(A,t){let e=[],r=[];for(A=A.slice().reverse();A.length;){let n=Z(A);if(n)r.length&&(e.push(t(r)),r=[]),e.push(n);else{let t=A.pop();if(m.has(t))r.push(t);else{let A=E.get(t);if(A)r.push(...A);else if(!h.has(t))throw v(t)}}}return r.length&&e.push(t(r)),e}function y(A){return A.filter((A=>65039!=A))}function Z(A,t){let e,r,n=z,l=[],Q=A.length;for(t&&(t.length=0);Q;){let w=A[--Q];if(n=n.B.find((A=>A.Q.has(w))),!n)break;if(n.S)r=w;else if(n.C&&w===r)break;l.push(w),n.F&&(l.push(65039),Q>0&&65039==A[Q-1]&&Q--),n.V&&(e=q(l,n),t&&t.push(...A.slice(Q).reverse()),A.length=Q)}return e}function q(A,t){let e=U.from(A);return 2==t.V&&e.splice(1,1),e}function $(){let A=[];return function t(e,r,n){if(e.S)n=r[r.length-1];else if(e.C&&n===r[r.length-1])return;e.F&&r.push(65039),e.V&&A.push(q(r,e));for(let A of e.B)for(let e of A.Q)t(A,[...r,e],n)}(z,[]),A.sort(C)}function _(A,{nf:t=!0}={}){let e=i(A).reverse(),r=[],n=[];for(;e.length;){let A=Z(e,r);if(A)n.push({type:"emoji",emoji:A,input:r.slice(),cps:y(A)});else{let A=e.pop();if(46==A)n.push({type:"stop",cp:A});else if(m.has(A))n.push({type:"valid",cps:[A]});else if(h.has(A))n.push({type:"ignored",cp:A});else{let t=E.get(A);t?n.push({type:"mapped",cp:A,cps:t.slice()}):n.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<n.length;A++){let e=n[A];if(AA(e.type))if(tA(e.cps)){let e=A+1;for(let A=e;A<n.length;A++){let{type:t,cps:r}=n[A];if(AA(t)){if(!tA(r))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let r=n.slice(t,e),l=r.flatMap((A=>AA(A.type)?A.cps:[])),Q=c(l);C(Q,l)?(n.splice(t,e-t,{type:"nfc",input:l,cps:Q,tokens0:eA(r),tokens:_(s(Q),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return eA(n)}function AA(A){return"valid"==A||"mapped"==A}function tA(A){return A.some((A=>a.has(A)))}function eA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}export{P as ens_beautify,$ as ens_emoji,H as ens_normalize,x as ens_normalize_fragment,Y as ens_split,_ as ens_tokenize,V as is_combining_mark,c as nfc,g as nfd,j as safe_str_from_cps,O as should_escape};
