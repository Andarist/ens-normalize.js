function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let n=Array(e);for(let r=0,l=0;r<e;r++)n[r]=l+=A(t());return n}function t(A,e=0){let t=[];for(;;){let n=A(),r=A();if(!r)break;e+=n;for(let A=0;A<r;A++)t.push(e+A);e+=r+1}return t}function n(A){return r((()=>{let e=t(A);if(e.length)return e}))}function r(A){let e=[];for(;;){let t=A();if(!t)break;e.push(t)}return e}function l(A,t,n){let r=Array(A).fill().map((()=>[]));for(let l=0;l<t;l++)e(A,n).forEach(((A,e)=>r[e].push(A)));return r}function o(A,e){let t=1+e(),n=e(),o=r(e);return l(o.length,1+A,e).flatMap(((A,e)=>{let[r,...l]=A;return Array(o[e]).fill().map(((A,e)=>{let o=e*n;return[r+e*t,l.map((A=>A+o))]}))}))}function f(A,e){return l(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var B=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),r=1,l=[0,1];for(let A=1;A<n;A++)l.push(r+=t());let o=t(),f=e;e+=o;let B=0,w=0;function u(){return 0==B&&(w=w<<8|A[e++],B=8),w>>--B&1}const i=2**31,Q=i>>>1,p=i-1;let s=0;for(let A=0;A<31;A++)s=s<<1|u();let c=[],a=0,C=i;for(;;){let A=Math.floor(((s-a+1)*r-1)/C),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<l[n]?t=n:e=n}if(0==e)break;c.push(e);let o=a+Math.floor(C*l[e]/r),f=a+Math.floor(C*l[e+1]/r)-1;for(;0==((o^f)&Q);)s=s<<1&p|u(),o=o<<1&p,f=f<<1&p|1;for(;o&~f&536870912;)s=s&Q|s<<1&p>>>1|u(),o=o<<1^Q,f=(f^Q)<<1|Q|1;a=o,C=1+f-o}let g=n-4;return c.map((e=>{switch(e-g){case 3:return g+65792+(A[f++]<<16|A[f++]<<8|A[f++]);case 2:return g+256+(A[f++]<<8|A[f++]);case 1:return g+A[f++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,n=new Uint8Array(6*t>>3);for(let r=0,l=0,o=0,f=0;r<t;r++)f=f<<6|e[A.charCodeAt(r)],o+=6,o>=8&&(n[l++]=f>>(o-=8));return n}("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")));function w(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function u(A){let e=[];for(let t=0,n=A.length;t<n;){let n=A.codePointAt(t);t+=n<65536?1:2,e.push(n)}return e}function i(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let n=0;n<e;)t.push(String.fromCodePoint(...A.slice(n,n+=4096)));return t.join("")}function Q(A,e){let{length:t}=A,n=t-e.length;for(let r=0;0==n&&r<t;r++)n=A[r]-e[r];return n}function p(A,e){return u(i(A).normalize(e))}function s(A){return p(A,"NFC")}function c(A){return p(A,"NFD")}function a(){return new Set(t(B))}function C(A){return i(e(A,B))}const g=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(o(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(f(t,A))}return e.flat()}(B)),D=a(),h=new Map(r((()=>{let A=B();if(A)return[A,C(B())]}))),E=a(),F=a(),U=a(),k=n(B);function H(){return new Set([t(B).map((A=>k[A])),t(B)].flat(2))}const I=r((()=>{let A=B();if(A){let e=1==A;A=e?"Restricted":C(A-1);let t=H(),l=H(),o=[...t,...l].sort(((A,e)=>A-e)),f=n(B).map((A=>new Set(A.map((A=>o[A]))))),w=B()-1;return w<0&&(w=new Map(r((()=>{let A=B();if(A)return[o[A-1],r((()=>{let A=r(B);if(A.length)return A.map((A=>A-1))}))]})))),{N:A,P:t,W:f,M:w,R:e,V:new Set(o)}}})),y=t(B),M=new Set(t(B).map((A=>y[A]))),R=function A(e){let n=r((()=>{let e=t(B).map((A=>y[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),l=B(),o=l%3;l=l/3|0;let f=1&l;return l>>=1,{B:n,V:o,F:f,S:1&l,C:2&l,Q:new Set(e)}}([]),G=new Set,S=new Set;for(let A of I)for(let e of A.V)G.has(e)?S.add(e):G.add(e);for(let A of G)for(let e of c([A]))G.add(e);const L=new Map(I.flatMap((A=>[...A.V].filter((A=>!S.has(A))).map((e=>[e,A]))))),K=i([46]);class d extends Array{get is_emoji(){return!0}}function m(A,e=w){let t=[];T(A[0])&&t.push("◌");let n=0,r=A.length;for(let l=0;l<r;l++){let r=A[l];W(r)&&(t.push(i(A.slice(n,l))),t.push(e(r)),n=l+1)}return t.push(i(A.slice(n,r))),t.join("")}function N(A){return W(A)?"":`"${m([A])}" `+w(A)}function T(A){return E.has(A)}function W(A){return F.has(A)}function b(A,e=s){return A.split(K).map((A=>i(j(u(A),e).flatMap((A=>A.is_emoji?J(A):A))))).join(K)}function P(A){return O(Z(A))}function x(A){let e=Z(A,!0);for(let{script:A,output:t}of e)if("Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return O(e)}function Z(A,e){let t=0;return A.split(K).map((A=>{let n,r=u(A),l={input:r,offset:t};t+=r.length+1;try{let A,t=l.tokens=j(r,s),o=t.length;if(o){let r=t[0],f=o>1||r.is_emoji;if(!f&&r.every((A=>A<128)))n=r,function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(f&&(l.emoji=!0,r=t.flatMap((A=>A.is_emoji?[]:A))),n=t.flatMap((A=>!e&&A.is_emoji?J(A):A)),r.length){!function(A){if(E.has(A[0]))throw new Error("leading combining mark")}(n),function(A){let e=A[0],t=h.get(e);if(t)throw new Error(`leading ${t}`);let n=-1;for(let r=1;r<A.length;r++){e=A[r];let l=h.get(e);if(l){if(n==r)throw new Error(`adjacent ${t} + ${l}`);n=r+1,t=l}}if(n==A.length)throw new Error(`trailing ${t}`)}(n);for(let A=1;A<o;A++){let e=t[A];if(!e.is_emoji&&E.has(e[0]))throw new Error(`emoji + combining mark: "${i(t[A-1])} + ${m([e[A][0]])}"`)}A=function(A){for(let e of A){let t=L.get(e);if(t)return V(t,A),t}let e;for(let t of I)if(A.some((A=>t.P.has(A))))try{return V(t,A),t}catch(A){e||(e=A)}if(e)throw e;throw j(A,(A=>A)),new Error("no match")}(r).N}else A="Emoji";f||function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(n)}else n=[],A="None";l.type=A}catch(A){l.error=A}return l.output=n,l}))}function O(A){return A.map((({input:e,error:t,output:n})=>{if(t)throw new Error(1==A.length?t:`Invalid label "${m(e)}": ${t.message}`);return i(n)})).join(K)}function V(A,e){let{V:t,W:n,M:r}=A,l=r instanceof Map;for(let n=0,o=e.length;n<o;){let f=e[n++],B=l&&r.get(f);if(B){let A=n;for(;A<o&&E.has(e[A]);)A++;let t=e.slice(n,A);if(!B.find((A=>!Q(A,t))))throw new Error(`disallowed combining mark sequence: "${m([f,...t])}"`);n=A}else if(!t.has(f)){let t=N(f);for(let n of e){let e=L.get(n);if(e&&e!==A){e.R||(t=`${t} is ${e.N}`);break}}throw new Error(`disallowed ${A.N} character: ${t}`)}}if(!l)for(let A=1,t=c(e).length;A<t;A++)if(E.has(e[A])){let n=A+1;for(;n<t&&E.has(e[n]);)n++;if(n-A>=r)throw new Error(`too many combining marks: "${i(e.slice(A-1,n))}" (max: ${r})`);A=n}for(let A of n)if(e.every((e=>A.has(e))))throw new Error("spoofable")}function j(A,e){let t=[],n=[];for(A=A.slice().reverse();A.length;){let r=X(A);if(r)n.length&&(t.push(e(n)),n=[]),t.push(r);else{let e=A.pop();if(G.has(e))n.push(e);else{let A=g.get(e);if(A)n.push(...A);else if(!D.has(e))throw new Error(`disallowed character: ${N(e)}`)}}}return n.length&&t.push(e(n)),t}function J(A){return A.filter((A=>65039!=A))}function X(A,e){let t,n,r=R,l=[],o=A.length;for(e&&(e.length=0);o;){let f=A[--o];if(r=r.B.find((A=>A.Q.has(f))),!r)break;if(r.S)n=f;else if(r.C&&f===n)break;l.push(f),r.F&&(l.push(65039),o>0&&65039==A[o-1]&&o--),r.V&&(t=z(l,r),e&&e.push(...A.slice(o).reverse()),A.length=o)}if(!t){let n=A[A.length-1];M.has(n)&&(e&&e.push(n),t=d.of(n),A.pop())}return t}function z(A,e){let t=d.from(A);return 2==e.V&&t.splice(1,1),t}function v(){let A=[...M].map((A=>[A]));return function e(t,n,r){if(t.S)r=n[n.length-1];else if(t.C&&r===n[n.length-1])return;t.F&&n.push(65039),t.V&&A.push(z(n,t));for(let A of t.B)for(let t of A.Q)e(A,[...n,t],r)}(R,[]),A.sort(Q)}function q(A,{nf:e=!0}={}){let t=u(A).reverse(),n=[],r=[];for(;t.length;){let A=X(t,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:J(A)});else{let A=t.pop();if(46==A)r.push({type:"stop",cp:A});else if(G.has(A))r.push({type:"valid",cps:[A]});else if(D.has(A))r.push({type:"ignored",cp:A});else{let e=g.get(A);e?r.push({type:"mapped",cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(Y(t.type))if($(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(Y(e)){if(!$(n))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let n=r.slice(e,t),l=n.flatMap((A=>Y(A.type)?A.cps:[])),o=s(l);Q(o,l)?(r.splice(e,t-e,{type:"nfc",input:l,cps:o,tokens:_(n)}),A=e):A=t-1,e=-1}else e=A;else"emoji"==t.type&&(e=-1)}return _(r)}function Y(A){return"valid"==A||"mapped"==A}function $(A){return A.some((A=>U.has(A)))}function _(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{x as ens_beautify,v as ens_emoji,P as ens_normalize,b as ens_normalize_fragment,Z as ens_split,q as ens_tokenize,T as is_combining_mark,s as nfc,c as nfd,m as safe_str_from_cps,W as should_escape};
