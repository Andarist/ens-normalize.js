function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let r=Array(e);for(let n=0,B=0;n<e;n++)r[n]=B+=A(t());return r}function t(A,e=0){let t=[];for(;;){let r=A(),n=A();if(!n)break;e+=r;for(let A=0;A<n;A++)t.push(e+A);e+=n+1}return t}function r(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function n(A,t,r){let n=Array(A).fill().map((()=>[]));for(let B=0;B<t;B++)e(A,r).forEach(((A,e)=>n[e].push(A)));return n}function B(A,e){let t=1+e(),B=e(),l=r(e);return n(l.length,1+A,e).flatMap(((A,e)=>{let[r,...n]=A;return Array(l[e]).fill().map(((A,e)=>{let l=e*B;return[r+e*t,n.map((A=>A+l))]}))}))}function l(A,e){return n(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var o=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,B=[0,1];for(let A=1;A<r;A++)B.push(n+=t());let l=t(),o=e;e+=l;let g=0,f=0;function s(){return 0==g&&(f=f<<8|A[e++],g=8),f>>--g&1}const w=2**31,Q=w>>>1,i=w-1;let C=0;for(let A=0;A<31;A++)C=C<<1|s();let u=[],E=0,c=w;for(;;){let A=Math.floor(((C-E+1)*n-1)/c),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<B[r]?t=r:e=r}if(0==e)break;u.push(e);let l=E+Math.floor(c*B[e]/n),o=E+Math.floor(c*B[e+1]/n)-1;for(;0==((l^o)&Q);)C=C<<1&i|s(),l=l<<1&i,o=o<<1&i|1;for(;l&~o&536870912;)C=C&Q|C<<1&i>>>1|s(),l=l<<1^Q,o=(o^Q)<<1|Q|1;E=l,c=1+o-l}let a=r-4;return u.map((e=>{switch(e-a){case 3:return a+65792+(A[o++]<<16|A[o++]<<8|A[o++]);case 2:return a+256+(A[o++]<<8|A[o++]);case 1:return a+A[o++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,B=0,l=0,o=0;n<t;n++)o=o<<6|e[A.charCodeAt(n)],l+=6,l>=8&&(r[B++]=o>>(l-=8));return r}("")));const g=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function f(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function s(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function w(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function Q(A,e){let{length:t}=A,r=t-e.length;for(let n=0;0==r&&n<t;n++)r=A[n]-e[n];return r}function i(A,e){return s(w(A).normalize(e))}function C(A){return i(A,"NFC")}function u(A){return i(A,"NFD")}function E(){return new Set(t(o))}const c=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(B(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(l(t,A))}return e.flat()}(o)),a=E(),h=E(),p=E(),M=E(),F=(D=o,r((()=>{let A=t(D);if(A.length)return A})));var D;function k(){return new Set([t(o).map((A=>F[A])),t(o)].flat(2))}const I=o(),K=r((A=>{let e=r(o).map((A=>A+96));if(e.length){let t=A>=I;e[0]-=32,e=w(e),t&&(e=`Restricted[${e}]`);let r=k(),n=k(),B=[...r,...n].sort(((A,e)=>A-e));return{N:e,P:r,M:o()-1,R:t,V:new Set(B)}}})),U=E(),S=new Map;[...U,...E()].sort(((A,e)=>A-e)).map(((A,e,t)=>{let r=o(),n=t[e]=r?t[e-r]:{V:[],M:new Map};n.V.push(A),U.has(A)||S.set(A,n)}));for(let{V:A,M:e}of new Set(S.values())){let t=[];for(let e of A){let A=K.filter((A=>A.V.has(e))),r=t.find((({G:e})=>A.some((A=>e.has(A)))));r||(r={G:new Set,V:[]},t.push(r)),r.V.push(e),A.forEach((A=>r.G.add(A)))}let r=t.flatMap((({G:A})=>[...A]));for(let{G:A,V:n}of t){let t=new Set(r.filter((e=>!A.has(e))));for(let A of n)e.set(A,t)}}let m=[...new Set(K.flatMap((A=>[...A.V])))];for(let A of m)S.has(A)||1!=K.filter((e=>e.V.has(A))).length||S.set(A,1);const d=new Set([...m,...u(m)]),x=t(o),G=function A(e){let n=r((()=>{let e=t(o).map((A=>x[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),B=o(),l=B%3;B=B/3|0;let g=1&B;return B>>=1,{B:n,V:l,F:g,S:1&B,C:2&B,Q:new Set(e)}}([]);class H extends Array{get is_emoji(){return!0}}function N(A,e=f){let t=[];q(A[0])&&t.push("◌");let r=0,n=A.length;for(let B=0;B<n;B++){let n=A[B];O(n)&&(t.push(w(A.slice(r,B))),t.push(e(n)),r=B+1)}return t.push(w(A.slice(r,n))),t.join("")}function R(A){return(O(A)?"":`"${N([A])}" `)+f(A)}function W(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}function q(A){return h.has(A)}function O(A){return p.has(A)}function L(A,e=C){return A.split(".").map((A=>w(v(s(A),e).flatMap((A=>A.is_emoji?V(A):A))))).join(".")}function Y(A){return P(J(A))}function T(A){let e=J(A,!0);for(let{type:A,output:t,error:r}of e)if(!r&&"Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return P(e)}function J(A,e){let t=0;return A.split(".").map((A=>{let r,n=s(A),B={input:n,offset:t};t+=n.length+1;try{let A,t=B.tokens=v(n,C),l=t.length;if(l){let n=t[0],o=l>1||n.is_emoji;if(!o&&n.every((A=>A<128)))r=n,W(r),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(r),A="ASCII";else if(o&&(B.emoji=!0,n=t.flatMap((A=>A.is_emoji?[]:A))),r=t.flatMap((A=>!e&&A.is_emoji?V(A):A)),W(r),n.length){!function(A){if(h.has(A[0]))throw new Error("leading combining mark")}(r),function(A){let e=A[0],t=g.get(e);if(t)throw new Error(`leading ${t}`);let r=-1;for(let n=1;n<A.length;n++){e=A[n];let B=g.get(e);if(B){if(r==n)throw new Error(`adjacent ${t} + ${B}`);r=n+1,t=B}}if(r==A.length)throw new Error(`trailing ${t}`)}(r);for(let A=1;A<l;A++){let e=t[A];if(!e.is_emoji&&h.has(e[0]))throw new Error(`emoji + combining mark: "${w(t[A-1])} + ${N([e[0]])}"`)}let e=[...new Set(n)],[B]=function(A){let e=K;for(let t of A){let A=e.filter((A=>A.V.has(t)));if(!A.length)throw e===K?z(t):j(e[0],t);if(e=A,1==A.length)break}return e}(e);!function(A,e){let{V:t,M:r}=A;for(let r of e)if(!t.has(r))throw j(A,r);if(r>=0)for(let t=1,n=u(e).length;t<n;t++)if(h.has(e[t])){let B=t+1;for(;B<n&&h.has(e[B]);)B++;if(B-t>r)throw new Error(`too many combining marks: ${A.N} "${w(e.slice(t-1,B))}" (${B-t}/${r})`);t=B}}(B,n),function(A,e){let t,r=[];for(let A of e){let e=S.get(A);if(1===e)return;if(e){let r=e.M.get(A);if(t=t?t.filter((A=>r.has(A))):[...r],!t.length)return}else r.push(A)}if(t)for(let e of t)if(r.every((A=>e.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(B,e),A=B.N}else A="Emoji"}else r=[],A="None";B.type=A}catch(A){B.error=A}return B.output=r,B}))}function P(A){return A.map((({input:e,error:t,output:r})=>{if(t){let r=t.message;throw new Error(1==A.length?r:`Invalid label "${N(e)}": ${r}`)}return w(r)})).join(".")}function j(A,e){let t=R(e),r=K.find((A=>A.P.has(e)));return r&&(t=`${r.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function z(A){return new Error(`disallowed character: ${R(A)}`)}function v(A,e){let t=[],r=[];for(A=A.slice().reverse();A.length;){let n=b(A);if(n)r.length&&(t.push(e(r)),r=[]),t.push(n);else{let e=A.pop();if(d.has(e))r.push(e);else{let A=c.get(e);if(A)r.push(...A);else if(!a.has(e))throw z(e)}}}return r.length&&t.push(e(r)),t}function V(A){return A.filter((A=>65039!=A))}function b(A,e){let t,r,n=G,B=[],l=A.length;for(e&&(e.length=0);l;){let o=A[--l];if(n=n.B.find((A=>A.Q.has(o))),!n)break;if(n.S)r=o;else if(n.C&&o===r)break;B.push(o),n.F&&(B.push(65039),l>0&&65039==A[l-1]&&l--),n.V&&(t=y(B,n),e&&e.push(...A.slice(l).reverse()),A.length=l)}return t}function y(A,e){let t=H.from(A);return 2==e.V&&t.splice(1,1),t}function X(){let A=[];return function e(t,r,n){if(t.S)n=r[r.length-1];else if(t.C&&n===r[r.length-1])return;t.F&&r.push(65039),t.V&&A.push(y(r,t));for(let A of t.B)for(let t of A.Q)e(A,[...r,t],n)}(G,[]),A.sort(Q)}function Z(A,{nf:e=!0}={}){let t=s(A).reverse(),r=[],n=[];for(;t.length;){let A=b(t,r);if(A)n.push({type:"emoji",emoji:A,input:r.slice(),cps:V(A)});else{let A=t.pop();if(46==A)n.push({type:"stop",cp:A});else if(d.has(A))n.push({type:"valid",cps:[A]});else if(a.has(A))n.push({type:"ignored",cp:A});else{let e=c.get(A);e?n.push({type:"mapped",cp:A,cps:e.slice()}):n.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<n.length;A++){let t=n[A];if($(t.type))if(_(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:r}=n[A];if($(e)){if(!_(r))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let r=n.slice(e,t),B=r.flatMap((A=>$(A.type)?A.cps:[])),l=C(B);Q(l,B)?(n.splice(e,t-e,{type:"nfc",input:B,cps:l,tokens0:AA(r),tokens:Z(w(l),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else"ignored"!==t.type&&(e=-1)}return AA(n)}function $(A){return"valid"==A||"mapped"==A}function _(A){return A.some((A=>M.has(A)))}function AA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{T as ens_beautify,X as ens_emoji,Y as ens_normalize,L as ens_normalize_fragment,J as ens_split,Z as ens_tokenize,q as is_combining_mark,C as nfc,u as nfd,N as safe_str_from_cps,O as should_escape};
