function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let r=Array(e);for(let n=0,o=0;n<e;n++)r[n]=o+=A(t());return r}function t(A,e=0){let t=[];for(;;){let r=A(),n=A();if(!n)break;e+=r;for(let A=0;A<n;A++)t.push(e+A);e+=n+1}return t}function r(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function n(A,t,r){let n=Array(A).fill().map((()=>[]));for(let o=0;o<t;o++)e(A,r).forEach(((A,e)=>n[e].push(A)));return n}function o(A,e){let t=1+e(),o=e(),l=r(e);return n(l.length,1+A,e).flatMap(((A,e)=>{let[r,...n]=A;return Array(l[e]).fill().map(((A,e)=>{let l=e*o;return[r+e*t,n.map((A=>A+l))]}))}))}function l(A,e){return n(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var B=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),n=1,o=[0,1];for(let A=1;A<r;A++)o.push(n+=t());let l=t(),B=e;e+=l;let g=0,i=0;function f(){return 0==g&&(i=i<<8|A[e++],g=8),i>>--g&1}const C=2**31,w=C>>>1,Q=C-1;let s=0;for(let A=0;A<31;A++)s=s<<1|f();let E=[],c=0,u=C;for(;;){let A=Math.floor(((s-c+1)*n-1)/u),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<o[r]?t=r:e=r}if(0==e)break;E.push(e);let l=c+Math.floor(u*o[e]/n),B=c+Math.floor(u*o[e+1]/n)-1;for(;0==((l^B)&w);)s=s<<1&Q|f(),l=l<<1&Q,B=B<<1&Q|1;for(;l&~B&536870912;)s=s&w|s<<1&Q>>>1|f(),l=l<<1^w,B=(B^w)<<1|w|1;c=l,u=1+B-l}let a=r-4;return E.map((e=>{switch(e-a){case 3:return a+65792+(A[B++]<<16|A[B++]<<8|A[B++]);case 2:return a+256+(A[B++]<<8|A[B++]);case 1:return a+A[B++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let n=0,o=0,l=0,B=0;n<t;n++)B=B<<6|e[A.charCodeAt(n)],l+=6,l>=8&&(r[o++]=B>>(l-=8));return r}("")));const g=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function i(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function f(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function C(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function w(A,e){let{length:t}=A,r=t-e.length;for(let n=0;0==r&&n<t;n++)r=A[n]-e[n];return r}function Q(A,e){return f(C(A).normalize(e))}function s(A){return Q(A,"NFC")}function E(A){return Q(A,"NFD")}function c(){return new Set(t(B))}const u=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(o(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(l(t,A))}return e.flat()}(B)),a=c(),p=c(),h=c(),D=c(),M=(I=B,r((()=>{let A=t(I);if(A.length)return A})));var I;function k(){return new Set([t(B).map((A=>M[A])),t(B)].flat(2))}const J=B(),F=r((A=>{let e=r(B).map((A=>A+96));if(e.length){let t=A>=J;e[0]-=32,e=C(e),t&&(e=`Restricted[${e}]`);let r=k(),n=k(),o=[...r,...n].sort(((A,e)=>A-e));return{I:A,N:e,P:r,M:B()-1,R:t,V:new Set(o)}}})),U=c(),L=new Map;[...U,...c()].sort(((A,e)=>A-e)).map(((A,e,t)=>{let r=B(),n=t[e]=r?t[e-r]:{V:[],M:new Map};n.V.push(A),U.has(A)||L.set(A,n)}));for(let{V:A,M:e}of new Set(L.values())){let t=[];for(let e of A){let A=F.filter((A=>A.V.has(e))),r=t.find((({G:e})=>A.some((A=>e.has(A)))));r||(r={G:new Set,V:[]},t.push(r)),r.V.push(e),A.forEach((A=>r.G.add(A)))}let r=t.flatMap((({G:A})=>[...A]));for(let{G:A,V:n}of t){let t=new Set(r.filter((e=>!A.has(e))));for(let A of n)e.set(A,t)}}let K=[...new Set(F.flatMap((A=>[...A.V])))];for(let A of K)L.has(A)||1!=F.filter((e=>e.V.has(A))).length||L.set(A,1);const m=new Set([...K,...E(K)]),S=t(B),Y=function A(e){let n=r((()=>{let e=t(B).map((A=>S[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),o=B(),l=o%3;o=o/3|0;let g=1&o;return o>>=1,{B:n,V:l,F:g,S:1&o,C:2&o,Q:new Set(e)}}([]);class G extends Array{get is_emoji(){return!0}}function V(A,e=i){let t=[];W(A[0])&&t.push("◌");let r=0,n=A.length;for(let o=0;o<n;o++){let n=A[o];b(n)&&(t.push(C(A.slice(r,o))),t.push(e(n)),r=o+1)}return t.push(C(A.slice(r,n))),t.join("")}function N(A){return(b(A)?"":`"${V([A])}" `)+i(A)}function d(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}function W(A){return p.has(A)}function b(A){return h.has(A)}function y(A,e=s){return A.split(".").map((A=>C(T(f(A),e).flatMap((A=>A.is_emoji?Z(A):A))))).join(".")}function x(A){return j(R(A))}function P(A){let e=R(A,!0);for(let{type:A,output:t,error:r}of e)if(!r&&"Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return j(e)}function R(A,e){let t=0;return A.split(".").map((A=>{let r,n=f(A),o={input:n,offset:t};t+=n.length+1;try{let A,t=o.tokens=T(n,s),l=t.length;if(l){let n=t[0],B=l>1||n.is_emoji;if(!B&&n.every((A=>A<128)))r=n,d(r),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(r),A="ASCII";else if(B&&(o.emoji=!0,n=t.flatMap((A=>A.is_emoji?[]:A))),r=t.flatMap((A=>!e&&A.is_emoji?Z(A):A)),d(r),n.length){!function(A){if(p.has(A[0]))throw new Error("leading combining mark")}(r),function(A){let e=A[0],t=g.get(e);if(t)throw new Error(`leading ${t}`);let r=-1;for(let n=1;n<A.length;n++){e=A[n];let o=g.get(e);if(o){if(r==n)throw new Error(`adjacent ${t} + ${o}`);r=n+1,t=o}}if(r==A.length)throw new Error(`trailing ${t}`)}(r);for(let A=1;A<l;A++){let e=t[A];if(!e.is_emoji&&p.has(e[0]))throw new Error(`emoji + combining mark: "${C(t[A-1])} + ${V([e[0]])}"`)}let e=[...new Set(n)],[o]=function(A){let e=F;for(let t of A){let A=e.filter((A=>A.V.has(t)));if(!A.length)throw e===F?O(t):H(e[0],t);if(e=A,1==A.length)break}return e}(e);!function(A,e){let{V:t,M:r}=A;for(let r of e)if(!t.has(r))throw H(A,r);if(r>=0)for(let t=1,n=E(e).length;t<n;t++)if(p.has(e[t])){let o=t+1;for(;o<n&&p.has(e[o]);)o++;if(o-t>r)throw new Error(`too many combining marks: ${A.N} "${C(e.slice(t-1,o))}" (${o-t}/${r})`);t=o}}(o,n),function(A,e){let t,r=[];for(let A of e){let e=L.get(A);if(1===e)return;if(e){let r=e.M.get(A);if(t=t?t.filter((A=>r.has(A))):[...r],!t.length)return}else r.push(A)}if(t)for(let e of t)if(r.every((A=>e.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(o,e),A=o.N}else A="Emoji"}else r=[],A="None";o.type=A}catch(A){o.error=A}return o.output=r,o}))}function j(A){return A.map((({input:e,error:t,output:r})=>{if(t){let r=t.message;throw new Error(1==A.length?r:`Invalid label "${V(e)}": ${r}`)}return C(r)})).join(".")}function H(A,e){let t=N(e),r=F.find((A=>A.P.has(e)));return r&&(t=`${r.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function O(A){return new Error(`disallowed character: ${N(A)}`)}function T(A,e){let t=[],r=[];for(A=A.slice().reverse();A.length;){let n=q(A);if(n)r.length&&(t.push(e(r)),r=[]),t.push(n);else{let e=A.pop();if(m.has(e))r.push(e);else{let A=u.get(e);if(A)r.push(...A);else if(!a.has(e))throw O(e)}}}return r.length&&t.push(e(r)),t}function Z(A){return A.filter((A=>65039!=A))}function q(A,e){let t,r,n=Y,o=[],l=A.length;for(e&&(e.length=0);l;){let B=A[--l];if(n=n.B.find((A=>A.Q.has(B))),!n)break;if(n.S)r=B;else if(n.C&&B===r)break;o.push(B),n.F&&(o.push(65039),l>0&&65039==A[l-1]&&l--),n.V&&(t=z(o,n),e&&e.push(...A.slice(l).reverse()),A.length=l)}return t}function z(A,e){let t=G.from(A);return 2==e.V&&t.splice(1,1),t}function v(){let A=[];return function e(t,r,n){if(t.S)n=r[r.length-1];else if(t.C&&n===r[r.length-1])return;t.F&&r.push(65039),t.V&&A.push(z(r,t));for(let A of t.B)for(let t of A.Q)e(A,[...r,t],n)}(Y,[]),A.sort(w)}function X(A,{nf:e=!0}={}){let t=f(A).reverse(),r=[],n=[];for(;t.length;){let A=q(t,r);if(A)n.push({type:"emoji",emoji:A,input:r.slice(),cps:Z(A)});else{let A=t.pop();if(46==A)n.push({type:"stop",cp:A});else if(m.has(A))n.push({type:"valid",cps:[A]});else if(a.has(A))n.push({type:"ignored",cp:A});else{let e=u.get(A);e?n.push({type:"mapped",cp:A,cps:e.slice()}):n.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<n.length;A++){let t=n[A];if($(t.type))if(_(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:r}=n[A];if($(e)){if(!_(r))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let r=n.slice(e,t),o=r.flatMap((A=>$(A.type)?A.cps:[])),l=s(o);w(l,o)?(n.splice(e,t-e,{type:"nfc",input:o,cps:l,tokens0:AA(r),tokens:X(C(l),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else"ignored"!==t.type&&(e=-1)}return AA(n)}function $(A){return"valid"==A||"mapped"==A}function _(A){return A.some((A=>D.has(A)))}function AA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{P as ens_beautify,v as ens_emoji,x as ens_normalize,y as ens_normalize_fragment,R as ens_split,X as ens_tokenize,W as is_combining_mark,s as nfc,E as nfd,V as safe_str_from_cps,b as should_escape};
