function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let n=Array(e);for(let r=0,w=0;r<e;r++)n[r]=w+=A(t());return n}function t(A,e=0){let t=[];for(;;){let n=A(),r=A();if(!r)break;e+=n;for(let A=0;A<r;A++)t.push(e+A);e+=r+1}return t}function n(A){let e=[];for(;;){let t=A(e.length);if(!t)break;e.push(t)}return e}function r(A,t,n){let r=Array(A).fill().map((()=>[]));for(let w=0;w<t;w++)e(A,n).forEach(((A,e)=>r[e].push(A)));return r}function w(A,e){let t=1+e(),w=e(),l=n(e);return r(l.length,1+A,e).flatMap(((A,e)=>{let[n,...r]=A;return Array(l[e]).fill().map(((A,e)=>{let l=e*w;return[n+e*t,r.map((A=>A+l))]}))}))}function l(A,e){return r(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var o=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),r=1,w=[0,1];for(let A=1;A<n;A++)w.push(r+=t());let l=t(),o=e;e+=l;let Q=0,i=0;function C(){return 0==Q&&(i=i<<8|A[e++],Q=8),i>>--Q&1}const g=2**31,f=g>>>1,B=g-1;let c=0;for(let A=0;A<31;A++)c=c<<1|C();let p=[],s=0,D=g;for(;;){let A=Math.floor(((c-s+1)*r-1)/D),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<w[n]?t=n:e=n}if(0==e)break;p.push(e);let l=s+Math.floor(D*w[e]/r),o=s+Math.floor(D*w[e+1]/r)-1;for(;0==((l^o)&f);)c=c<<1&B|C(),l=l<<1&B,o=o<<1&B|1;for(;l&~o&536870912;)c=c&f|c<<1&B>>>1|C(),l=l<<1^f,o=(o^f)<<1|f|1;s=l,D=1+o-l}let M=n-4;return p.map((e=>{switch(e-M){case 3:return M+65792+(A[o++]<<16|A[o++]<<8|A[o++]);case 2:return M+256+(A[o++]<<8|A[o++]);case 1:return M+A[o++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,n=new Uint8Array(6*t>>3);for(let r=0,w=0,l=0,o=0;r<t;r++)o=o<<6|e[A.charCodeAt(r)],l+=6,l>=8&&(n[w++]=o>>(l-=8));return n}("")));const Q=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function i(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function C(A){let e=[];for(let t=0,n=A.length;t<n;){let n=A.codePointAt(t);t+=n<65536?1:2,e.push(n)}return e}function g(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let n=0;n<e;)t.push(String.fromCodePoint(...A.slice(n,n+=4096)));return t.join("")}function f(A,e){let{length:t}=A,n=t-e.length;for(let r=0;0==n&&r<t;r++)n=A[r]-e[r];return n}function B(A,e){return C(g(A).normalize(e))}function c(A){return B(A,"NFC")}function p(A){return B(A,"NFD")}function s(){return new Set(t(o))}const D=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(w(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(l(t,A))}return e.flat()}(o)),M=s(),u=s(),E=s(),a=s(),h=(K=o,n((()=>{let A=t(K);if(A.length)return A})));var K;function U(){return new Set([t(o).map((A=>h[A])),t(o)].flat(2))}const J=o(),k=n((A=>{let e=n(o).map((A=>A+96));if(e.length){let t=A>=J;e[0]-=32,e=g(e),t&&(e=`Restricted[${e}]`);let n=U(),r=U(),w=[...n,...r].sort(((A,e)=>A-e));return{N:e,P:n,M:o()-1,R:t,V:new Set(w)}}})),F=s(),S=new Map;[...F,...s()].sort(((A,e)=>A-e)).map(((A,e,t)=>{let n=o(),r=t[e]=n?t[e-n]:{V:[],M:new Map};r.V.push(A),F.has(A)||S.set(A,r)}));for(let{V:A,M:e}of new Set(S.values())){let t=[];for(let e of A){let A=k.filter((A=>A.V.has(e))),n=t.find((({G:e})=>A.some((A=>e.has(A)))));n||(n={G:new Set,V:[]},t.push(n)),n.V.push(e),A.forEach((A=>n.G.add(A)))}let n=t.flatMap((({G:A})=>[...A]));for(let{G:A,V:r}of t){let t=new Set(n.filter((e=>!A.has(e))));for(let A of r)e.set(A,t)}}let G=new Set,I=new Set;for(let A of k)for(let e of A.V)(G.has(e)?I:G).add(e);for(let A of G)S.has(A)||I.has(A)||S.set(A,1);const V=new Set([...G,...p(G)]),N=t(o),H=function A(e){let r=n((()=>{let e=t(o).map((A=>N[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),w=o(),l=w%3;w=w/3|0;let Q=1&w;return w>>=1,{B:r,V:l,F:Q,S:1&w,C:2&w,Q:new Set(e)}}([]);class P extends Array{get is_emoji(){return!0}}function X(A,e=i){let t=[];Y(A[0])&&t.push("◌");let n=0,r=A.length;for(let w=0;w<r;w++){let r=A[w];x(r)&&(t.push(g(A.slice(n,w))),t.push(e(r)),n=w+1)}return t.push(g(A.slice(n,r))),t.join("")}function y(A){return(x(A)?"":`"${X([A])}" `)+i(A)}function T(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}function Y(A){return u.has(A)}function x(A){return E.has(A)}function m(A,e=c){return A.split(".").map((A=>g(W(C(A),e).flatMap((A=>A.is_emoji?Z(A):A))))).join(".")}function z(A){return O(L(A))}function v(A){let e=L(A,!0);for(let{type:A,output:t,error:n}of e)if(!n&&"Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return O(e)}function L(A,e){let t=0;return A.split(".").map((A=>{let n,r=C(A),w={input:r,offset:t};t+=r.length+1;try{let A,t=w.tokens=W(r,c),l=t.length;if(l){let r=t[0],o=l>1||r.is_emoji;if(!o&&r.every((A=>A<128)))n=r,T(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(o&&(w.emoji=!0,r=t.flatMap((A=>A.is_emoji?[]:A))),n=t.flatMap((A=>!e&&A.is_emoji?Z(A):A)),T(n),r.length){if(u.has(n[0]))throw j("leading combining mark");for(let A=1;A<l;A++){let e=t[A];if(!e.is_emoji&&u.has(e[0]))throw j(`emoji + combining mark: "${g(t[A-1])} + ${X([e[0]])}"`)}!function(A){let e=A[0],t=Q.get(e);if(t)throw j(`leading ${t}`);let n=A.length,r=-1;for(let w=1;w<n;w++){e=A[w];let n=Q.get(e);if(n){if(r==w)throw j(`${t} + ${n}`);r=w+1,t=n}}if(r==n)throw j(`trailing ${t}`)}(n);let e=[...new Set(r)],[w]=function(A){let e=k;for(let t of A){let A=e.filter((A=>A.V.has(t)));if(!A.length)throw e===k?d(t):b(e[0],t);if(e=A,1==A.length)break}return e}(e);!function(A,e){let{V:t,M:n}=A;for(let n of e)if(!t.has(n))throw b(A,n);if(n>=0)for(let t=1,r=p(e).length;t<r;t++)if(u.has(e[t])){let w=t+1;for(;w<r&&u.has(e[w]);)w++;if(w-t>n)throw new Error(`too many combining marks: ${A.N} "${g(e.slice(t-1,w))}" (${w-t}/${n})`);t=w}}(w,r),function(A,e){let t,n=[];for(let A of e){let e=S.get(A);if(1===e)return;if(e){let n=e.M.get(A);if(t=t?t.filter((A=>n.has(A))):[...n],!t.length)return}else n.push(A)}if(t)for(let e of t)if(n.every((A=>e.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${e.N}`)}(w,e),A=w.N}else A="Emoji"}else n=[],A="None";w.type=A}catch(A){w.error=A}return w.output=n,w}))}function O(A){return A.map((({input:e,error:t,output:n})=>{if(t){let n=t.message;throw new Error(1==A.length?n:`Invalid label "${X(e)}": ${n}`)}return g(n)})).join(".")}function d(A){return new Error(`disallowed character: ${y(A)}`)}function b(A,e){let t=y(e),n=k.find((A=>A.P.has(e)));return n&&(t=`${n.N} ${t}`),new Error(`illegal mixture: ${A.N} + ${t}`)}function j(A){return new Error(`illegal placement: ${A}`)}function W(A,e){let t=[],n=[];for(A=A.slice().reverse();A.length;){let r=R(A);if(r)n.length&&(t.push(e(n)),n=[]),t.push(r);else{let e=A.pop();if(V.has(e))n.push(e);else{let A=D.get(e);if(A)n.push(...A);else if(!M.has(e))throw d(e)}}}return n.length&&t.push(e(n)),t}function Z(A){return A.filter((A=>65039!=A))}function R(A,e){let t,n,r=H,w=[],l=A.length;for(e&&(e.length=0);l;){let o=A[--l];if(r=r.B.find((A=>A.Q.has(o))),!r)break;if(r.S)n=o;else if(r.C&&o===n)break;w.push(o),r.F&&(w.push(65039),l>0&&65039==A[l-1]&&l--),r.V&&(t=q(w,r),e&&e.push(...A.slice(l).reverse()),A.length=l)}return t}function q(A,e){let t=P.from(A);return 2==e.V&&t.splice(1,1),t}function $(){let A=[];return function e(t,n,r){if(t.S)r=n[n.length-1];else if(t.C&&r===n[n.length-1])return;t.F&&n.push(65039),t.V&&A.push(q(n,t));for(let A of t.B)for(let t of A.Q)e(A,[...n,t],r)}(H,[]),A.sort(f)}function _(A,{nf:e=!0}={}){let t=C(A).reverse(),n=[],r=[];for(;t.length;){let A=R(t,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:Z(A)});else{let A=t.pop();if(46==A)r.push({type:"stop",cp:A});else if(V.has(A))r.push({type:"valid",cps:[A]});else if(M.has(A))r.push({type:"ignored",cp:A});else{let e=D.get(A);e?r.push({type:"mapped",cp:A,cps:e.slice()}):r.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<r.length;A++){let t=r[A];if(AA(t.type))if(eA(t.cps)){let t=A+1;for(let A=t;A<r.length;A++){let{type:e,cps:n}=r[A];if(AA(e)){if(!eA(n))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let n=r.slice(e,t),w=n.flatMap((A=>AA(A.type)?A.cps:[])),l=c(w);f(l,w)?(r.splice(e,t-e,{type:"nfc",input:w,cps:l,tokens0:tA(n),tokens:_(g(l),{nf:!1})}),A=e):A=t-1,e=-1}else e=A;else"ignored"!==t.type&&(e=-1)}return tA(r)}function AA(A){return"valid"==A||"mapped"==A}function eA(A){return A.some((A=>a.has(A)))}function tA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{v as ens_beautify,$ as ens_emoji,z as ens_normalize,m as ens_normalize_fragment,L as ens_split,_ as ens_tokenize,Y as is_combining_mark,c as nfc,p as nfd,X as safe_str_from_cps,x as should_escape};
