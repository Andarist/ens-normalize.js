function A(A){return 1&A?~A>>1:A>>1}function e(e,t){let r=Array(e);for(let o=0,n=0;o<e;o++)r[o]=n+=A(t());return r}function t(A,e=0){let t=[];for(;;){let r=A(),o=A();if(!o)break;e+=r;for(let A=0;A<o;A++)t.push(e+A);e+=o+1}return t}function r(A){let e=[];for(;;){let t=A();if(!t)break;e.push(t)}return e}function o(A,t,r){let o=Array(A).fill().map((()=>[]));for(let n=0;n<t;n++)e(A,r).forEach(((A,e)=>o[e].push(A)));return o}function n(A,e){let t=1+e(),n=e(),l=r(e);return o(l.length,1+A,e).flatMap(((A,e)=>{let[r,...o]=A;return Array(l[e]).fill().map(((A,e)=>{let l=e*n;return[r+e*t,o.map((A=>A+l))]}))}))}function l(A,e){return o(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var B=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let r=t(),o=1,n=[0,1];for(let A=1;A<r;A++)n.push(o+=t());let l=t(),B=e;e+=l;let g=0,i=0;function C(){return 0==g&&(i=i<<8|A[e++],g=8),i>>--g&1}const s=2**31,f=s>>>1,Q=s-1;let w=0;for(let A=0;A<31;A++)w=w<<1|C();let u=[],E=0,a=s;for(;;){let A=Math.floor(((w-E+1)*o-1)/a),e=0,t=r;for(;t-e>1;){let r=e+t>>>1;A<n[r]?t=r:e=r}if(0==e)break;u.push(e);let l=E+Math.floor(a*n[e]/o),B=E+Math.floor(a*n[e+1]/o)-1;for(;0==((l^B)&f);)w=w<<1&Q|C(),l=l<<1&Q,B=B<<1&Q|1;for(;l&~B&536870912;)w=w&f|w<<1&Q>>>1|C(),l=l<<1^f,B=(B^f)<<1|f|1;E=l,a=1+B-l}let c=r-4;return u.map((e=>{switch(e-c){case 3:return c+65792+(A[B++]<<16|A[B++]<<8|A[B++]);case 2:return c+256+(A[B++]<<8|A[B++]);case 1:return c+A[B++];default:return e-1}}))}(function(A){let e=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,t)=>e[A.charCodeAt(0)]=t));let t=A.length,r=new Uint8Array(6*t>>3);for(let o=0,n=0,l=0,B=0;o<t;o++)B=B<<6|e[A.charCodeAt(o)],l+=6,l>=8&&(r[n++]=B>>(l-=8));return r}("")));function g(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function i(A){let e=[];for(let t=0,r=A.length;t<r;){let r=A.codePointAt(t);t+=r<65536?1:2,e.push(r)}return e}function C(A){let e=A.length;if(e<4096)return String.fromCodePoint(...A);let t=[];for(let r=0;r<e;)t.push(String.fromCodePoint(...A.slice(r,r+=4096)));return t.join("")}function s(A,e){let{length:t}=A,r=t-e.length;for(let o=0;0==r&&o<t;o++)r=A[o]-e[o];return r}function f(A,e){return i(C(A).normalize(e))}function Q(A){return f(A,"NFC")}function w(A){return f(A,"NFD")}function u(){return new Set(t(B))}function E(A){return C(e(A,B))}const a=new Map(function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(n(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(l(t,A))}return e.flat()}(B)),c=u(),p=new Map(r((()=>{let A=B();if(A)return[A,E(B())]}))),h=u(),D=u(),I=u(),F=(M=B,r((()=>{let A=t(M);if(A.length)return A})));var M;function k(){return new Set([t(B).map((A=>F[A])),t(B)].flat(2))}const K=r((()=>{let A=B();if(A){let e=1==A;A=e?"Restricted":E(A-1);let t=k(),o=k(),n=[...t,...o].sort(((A,e)=>A-e)),l=B()-1;return l<0&&(l=new Map(r((()=>{let A=B();if(A)return[n[A-1],r((()=>{let A=r(B);if(A.length)return A.map((A=>A-1))}))]})))),{N:A,P:t,M:l,R:e,V:new Set(n)}}})),J=new Map(r((()=>{let A=t(B);if(A.length){let e=u();return A.map((A=>[A,e]))}})).flat()),S=t(B),P=new Set(t(B).map((A=>S[A]))),U=function A(e){let o=r((()=>{let e=t(B).map((A=>S[A]));if(e.length)return A(e)})).sort(((A,e)=>e.Q.size-A.Q.size)),n=B(),l=n%3;n=n/3|0;let g=1&n;return n>>=1,{B:o,V:l,F:g,S:1&n,C:2&n,Q:new Set(e)}}([]),G=new Set,L=new Set;for(let A of K)for(let e of A.V)G.has(e)?L.add(e):G.add(e);for(let A of G)for(let e of w([A]))G.add(e);const H=new Map(K.flatMap((A=>[...A.V].filter((A=>!L.has(A))).map((e=>[e,A]))))),R=C([46]);class y extends Array{get is_emoji(){return!0}}function O(A,e=g){let t=[];Y(A[0])&&t.push("◌");let r=0,o=A.length;for(let n=0;n<o;n++){let o=A[n];d(o)&&(t.push(C(A.slice(r,n))),t.push(e(o)),r=n+1)}return t.push(C(A.slice(r,o))),t.join("")}function m(A){return(d(A)?"":`"${O([A])}" `)+g(A)}function Y(A){return h.has(A)}function d(A){return D.has(A)}function q(A,e=Q){return A.split(R).map((A=>C(V(i(A),e).flatMap((A=>A.is_emoji?Z(A):A))))).join(R)}function N(A){return j(X(A))}function T(A){let e=X(A,!0);for(let{script:A,output:t,error:r}of e)if("Greek"!==A){let A=0;for(;;){let e=t.indexOf(958,A);if(e<0)break;t[e]=926,A=e+1}}return j(e)}function X(A,e){let t=0;return A.split(R).map((A=>{let r,o=i(A),n={input:o,offset:t};t+=o.length+1;try{let A,t=n.tokens=V(o,Q),l=t.length;if(l){let o=t[0],B=l>1||o.is_emoji;if(!B&&o.every((A=>A<128)))r=o,function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(r),A="ASCII";else if(B&&(n.emoji=!0,o=t.flatMap((A=>A.is_emoji?[]:A))),r=t.flatMap((A=>!e&&A.is_emoji?Z(A):A)),o.length){!function(A){if(h.has(A[0]))throw new Error("leading combining mark")}(r),function(A){let e=A[0],t=p.get(e);if(t)throw new Error(`leading ${t}`);let r=-1;for(let o=1;o<A.length;o++){e=A[o];let n=p.get(e);if(n){if(r==o)throw new Error(`adjacent ${t} + ${n}`);r=o+1,t=n}}if(r==A.length)throw new Error(`trailing ${t}`)}(r);for(let A=1;A<l;A++){let e=t[A];if(!e.is_emoji&&h.has(e[0]))throw new Error(`emoji + combining mark: "${C(t[A-1])} + ${O([e[0]])}"`)}A=function(A){let e,t,r=[],o=[];for(let t of A){let n=J.get(t);if(n)if(o.push(t),e){if(e=e.filter((A=>n.has(A))),!e.length)break}else e=[...n];else{let e=H.get(t);if(e)return x(e,A),e;r.push(t)}}if(e)for(let A of e){let e=K[A];if(r.every((A=>e.V.has(A)))&&!o.every((A=>e.V.has(A))))throw new Error("whole-label confusable")}for(let e of K)if(A.some((A=>e.P.has(A))))try{return x(e,A),e}catch(A){t||(t=A)}if(t)throw t;throw V(A,(A=>A)),new Error("no match")}(o).N}else A="Emoji";!function(A){for(let e=A.lastIndexOf(95);e>0;)if(95!==A[--e])throw new Error("underscore allowed only at start")}(r)}else r=[],A="None";n.type=A}catch(A){n.error=A}return n.output=r,n}))}function j(A){return A.map((({input:e,error:t,output:r})=>{if(t){let r=t.message;throw new Error(1==A.length?r:`Invalid label "${O(e)}": ${r}`)}return C(r)})).join(R)}function x(A,e){let{V:t,M:r}=A,o=r instanceof Map;for(let n=0,l=e.length;n<l;){let B=e[n++],g=o&&r.get(B);if(g){let A=n;for(;A<l&&h.has(e[A]);)A++;let t=e.slice(n,A);if(!g.find((A=>!s(A,t))))throw new Error(`disallowed combining mark sequence: "${O([B,...t])}"`);n=A}else if(!t.has(B)){let t=m(B);for(let r of e){let e=H.get(r);if(e&&e!==A){e.R||(t=`${t} is ${e.N}`);break}}throw new Error(`disallowed ${A.N} character: ${t}`)}}if(!o)for(let A=1,t=w(e).length;A<t;A++)if(h.has(e[A])){let o=A+1;for(;o<t&&h.has(e[o]);)o++;if(o-A>r)throw new Error(`too many combining marks: "${C(e.slice(A-1,o))}" (${o-A}/${r})`);A=o}}function V(A,e){let t=[],r=[];for(A=A.slice().reverse();A.length;){let o=b(A);if(o)r.length&&(t.push(e(r)),r=[]),t.push(o);else{let e=A.pop();if(G.has(e))r.push(e);else{let A=a.get(e);if(A)r.push(...A);else if(!c.has(e))throw new Error(`disallowed character: ${m(e)}`)}}}return r.length&&t.push(e(r)),t}function Z(A){return A.filter((A=>65039!=A))}function b(A,e){let t,r,o=U,n=[],l=A.length;for(e&&(e.length=0);l;){let B=A[--l];if(o=o.B.find((A=>A.Q.has(B))),!o)break;if(o.S)r=B;else if(o.C&&B===r)break;n.push(B),o.F&&(n.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(t=z(n,o),e&&e.push(...A.slice(l).reverse()),A.length=l)}if(!t){let r=A[A.length-1];P.has(r)&&(e&&e.push(r),t=y.of(r),A.pop())}return t}function z(A,e){let t=y.from(A);return 2==e.V&&t.splice(1,1),t}function W(){let A=[...P].map((A=>[A]));return function e(t,r,o){if(t.S)o=r[r.length-1];else if(t.C&&o===r[r.length-1])return;t.F&&r.push(65039),t.V&&A.push(z(r,t));for(let A of t.B)for(let t of A.Q)e(A,[...r,t],o)}(U,[]),A.sort(s)}function v(A,{nf:e=!0}={}){let t=i(A).reverse(),r=[],o=[];for(;t.length;){let A=b(t,r);if(A)o.push({type:"emoji",emoji:A,input:r.slice(),cps:Z(A)});else{let A=t.pop();if(46==A)o.push({type:"stop",cp:A});else if(G.has(A))o.push({type:"valid",cps:[A]});else if(c.has(A))o.push({type:"ignored",cp:A});else{let e=a.get(A);e?o.push({type:"mapped",cp:A,cps:e.slice()}):o.push({type:"disallowed",cp:A})}}}if(e)for(let A=0,e=-1;A<o.length;A++){let t=o[A];if($(t.type))if(_(t.cps)){let t=A+1;for(let A=t;A<o.length;A++){let{type:e,cps:r}=o[A];if($(e)){if(!_(r))break;t=A+1}else if("ignored"!==e)break}e<0&&(e=A);let r=o.slice(e,t),n=r.flatMap((A=>$(A.type)?A.cps:[])),l=Q(n);s(l,n)?(o.splice(e,t-e,{type:"nfc",input:n,cps:l,tokens:AA(r)}),A=e):A=t-1,e=-1}else e=A;else"emoji"==t.type&&(e=-1)}return AA(o)}function $(A){return"valid"==A||"mapped"==A}function _(A){return A.some((A=>I.has(A)))}function AA(A){for(let e=0;e<A.length;e++)if("valid"==A[e].type){let t=e+1;for(;t<A.length&&"valid"==A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}export{T as ens_beautify,W as ens_emoji,N as ens_normalize,q as ens_normalize_fragment,X as ens_split,v as ens_tokenize,Y as is_combining_mark,Q as nfc,w as nfd,O as safe_str_from_cps,d as should_escape};
