function A(A){return 1&A?~A>>1:A>>1}function t(t,e){let r=Array(t);for(let n=0,o=0;n<t;n++)r[n]=o+=A(e());return r}function e(A,t=0){let e=[];for(;;){let r=A(),n=A();if(!n)break;t+=r;for(let A=0;A<n;A++)e.push(t+A);t+=n+1}return e}function r(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function n(A,e,r){let n=Array(A).fill().map((()=>[]));for(let o=0;o<e;o++)t(A,r).forEach(((A,t)=>n[t].push(A)));return n}function o(A,t){let e=1+t(),o=t(),w=r(t);return n(w.length,1+A,t).flatMap(((A,t)=>{let[r,...n]=A;return Array(w[t]).fill().map(((A,t)=>{let w=t*o;return[r+t*e,n.map((A=>A+w))]}))}))}function w(A,t){return n(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var l=function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let r=e(),n=1,o=[0,1];for(let A=1;A<r;A++)o.push(n+=e());let w=e(),l=t;t+=w;let B=0,i=0;function C(){return 0==B&&(i=i<<8|A[t++],B=8),i>>--B&1}const f=2**31,c=f>>>1,Q=f-1;let s=0;for(let A=0;A<31;A++)s=s<<1|C();let D=[],p=0,u=f;for(;;){let A=Math.floor(((s-p+1)*n-1)/u),t=0,e=r;for(;e-t>1;){let r=t+e>>>1;A<o[r]?e=r:t=r}if(0==t)break;D.push(t);let w=p+Math.floor(u*o[t]/n),l=p+Math.floor(u*o[t+1]/n)-1;for(;0==((w^l)&c);)s=s<<1&Q|C(),w=w<<1&Q,l=l<<1&Q|1;for(;w&~l&536870912;)s=s&c|s<<1&Q>>>1|C(),w=w<<1^c,l=(l^c)<<1|c|1;p=w,u=1+l-w}let h=r-4;return D.map((t=>{switch(t-h){case 3:return h+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return h+256+(A[l++]<<8|A[l++]);case 1:return h+A[l++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,r=new Uint8Array(6*e>>3);for(let n=0,o=0,w=0,l=0;n<e;n++)l=l<<6|t[A.charCodeAt(n)],w+=6,w>=8&&(r[o++]=l>>(w-=8));return r}("")));const B=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function i(A){return`{${function(A){return A.toString(16).toUpperCase().padStart(2,"0")}(A)}}`}function C(A){let t=[];for(let e=0,r=A.length;e<r;){let r=A.codePointAt(e);e+=r<65536?1:2,t.push(r)}return t}function f(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let r=0;r<t;)e.push(String.fromCodePoint(...A.slice(r,r+=4096)));return e.join("")}function c(A,t){let{length:e}=A,r=e-t.length;for(let n=0;0==r&&n<e;n++)r=A[n]-t[n];return r}function Q(A,t){return C(f(A).normalize(t))}function s(A){return Q(A,"NFC")}function D(A){return Q(A,"NFD")}function p(){return new Set(e(l))}const u=new Map(function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(o(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(w(e,A))}return t.flat()}(l)),h=p(),g=p(),E=p(),a=p(),M=(k=l,r((()=>{let A=e(k);if(A.length)return A})));var k;function I(){return new Set([e(l).map((A=>M[A])),e(l)].flat(2))}const J=l(),V=r((A=>{let t=r(l).map((A=>A+96));if(t.length){let e=A>=J;t[0]-=32,t=f(t),e&&(t=`Restricted[${t}]`);let r=I(),n=I(),o=[...r,...n].sort(((A,t)=>A-t));return{N:t,P:r,M:l()-1,R:e,V:new Set(o)}}})),d=p(),U=new Map;[...d,...p()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let r=l(),n=e[t]=r?e[t-r]:{V:[],M:new Map};n.V.push(A),d.has(A)||U.set(A,n)}));for(let{V:A,M:t}of new Set(U.values())){let e=[];for(let t of A){let A=V.filter((A=>A.V.has(t))),r=e.find((({G:t})=>A.some((A=>t.has(A)))));r||(r={G:new Set,V:[]},e.push(r)),r.V.push(t),A.forEach((A=>r.G.add(A)))}let r=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:n}of e){let e=new Set(r.filter((t=>!A.has(t))));for(let A of n)t.set(A,e)}}let F=new Set,N=new Set;for(let A of V)for(let t of A.V)(F.has(t)?N:F).add(t);for(let A of F)U.has(A)||N.has(A)||U.set(A,1);const O=new Set([...F,...D(F)]),P=e(l),j=function A(t){let n=r((()=>{let t=e(l).map((A=>P[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=l(),w=o%3;o=o/3|0;let B=1&o;return o>>=1,{B:n,V:w,F:B,S:1&o,C:2&o,Q:new Set(t)}}([]);class T extends Array{get is_emoji(){return!0}}function K(A,t=i){let e=[];R(A[0])&&e.push("◌");let r=0,n=A.length;for(let o=0;o<n;o++){let n=A[o];m(n)&&(e.push(f(A.slice(r,o))),e.push(t(n)),r=o+1)}return e.push(f(A.slice(r,n))),e.join("")}function L(A){return(m(A)?"":`"${K([A])}" `)+i(A)}function G(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function R(A){return g.has(A)}function m(A){return E.has(A)}function Y(A,t=s){return A.split(".").map((A=>f(q(C(A),t).flatMap((A=>A.is_emoji?X(A):A))))).join(".")}function b(A){return y(x(A))}function S(A){let t=x(A,!0);for(let{type:A,output:e,error:r}of t)if(!r&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return y(t)}function x(A,t){let e=0;return A.split(".").map((A=>{let r,n=C(A),o={input:n,offset:e};e+=n.length+1;try{let A,e=o.tokens=q(n,s),w=e.length;if(w){let n=e[0],l=w>1||n.is_emoji;if(!l&&n.every((A=>A<128)))r=n,G(r),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(r),A="ASCII";else if(l&&(o.emoji=!0,n=e.flatMap((A=>A.is_emoji?[]:A))),r=e.flatMap((A=>!t&&A.is_emoji?X(A):A)),G(r),n.length){if(g.has(r[0]))throw W("leading combining mark");for(let A=1;A<w;A++){let t=e[A];if(!t.is_emoji&&g.has(t[0]))throw W(`emoji + combining mark: "${f(e[A-1])} + ${K([t[0]])}"`)}!function(A){let t=A[0],e=B.get(t);if(e)throw W(`leading ${e}`);let r=A.length,n=-1;for(let o=1;o<r;o++){t=A[o];let r=B.get(t);if(r){if(n==o)throw W(`${e} + ${r}`);n=o+1,e=r}}if(n==r)throw W(`trailing ${e}`)}(r);let t=[...new Set(n)],[o]=function(A){let t=V;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===V?z(e):H(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:r}=A;for(let r of t)if(!e.has(r))throw H(A,r);if(r>=0)for(let e=1,n=D(t).length;e<n;e++)if(g.has(t[e])){let o=e+1;for(;o<n&&g.has(t[o]);)o++;if(o-e>r)throw new Error(`too many combining marks: ${A.N} "${f(t.slice(e-1,o))}" (${o-e}/${r})`);e=o}}(o,n),function(A,t){let e,r=[];for(let A of t){let t=U.get(A);if(1===t)return;if(t){let r=t.M.get(A);if(e=e?e.filter((A=>r.has(A))):[...r],!e.length)return}else r.push(A)}if(e)for(let t of e)if(r.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(o,t),A=o.N}else A="Emoji"}else r=[],A="None";o.type=A}catch(A){o.error=A}return o.output=r,o}))}function y(A){return A.map((({input:t,error:e,output:r})=>{if(e){let r=e.message;throw new Error(1==A.length?r:`Invalid label "${K(t)}": ${r}`)}return f(r)})).join(".")}function z(A){return new Error(`disallowed character: ${L(A)}`)}function H(A,t){let e=L(t),r=V.find((A=>A.P.has(t)));return r&&(e=`${r.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function W(A){return new Error(`illegal placement: ${A}`)}function q(A,t){let e=[],r=[];for(A=A.slice().reverse();A.length;){let n=Z(A);if(n)r.length&&(e.push(t(r)),r=[]),e.push(n);else{let t=A.pop();if(O.has(t))r.push(t);else{let A=u.get(t);if(A)r.push(...A);else if(!h.has(t))throw z(t)}}}return r.length&&e.push(t(r)),e}function X(A){return A.filter((A=>65039!=A))}function Z(A,t){let e,r,n=j,o=[],w=A.length;for(t&&(t.length=0);w;){let l=A[--w];if(n=n.B.find((A=>A.Q.has(l))),!n)break;if(n.S)r=l;else if(n.C&&l===r)break;o.push(l),n.F&&(o.push(65039),w>0&&65039==A[w-1]&&w--),n.V&&(e=v(o,n),t&&t.push(...A.slice(w).reverse()),A.length=w)}return e}function v(A,t){let e=T.from(A);return 2==t.V&&e.splice(1,1),e}function $(){let A=[];return function t(e,r,n){if(e.S)n=r[r.length-1];else if(e.C&&n===r[r.length-1])return;e.F&&r.push(65039),e.V&&A.push(v(r,e));for(let A of e.B)for(let e of A.Q)t(A,[...r,e],n)}(j,[]),A.sort(c)}function _(A,{nf:t=!0}={}){let e=C(A).reverse(),r=[],n=[];for(;e.length;){let A=Z(e,r);if(A)n.push({type:"emoji",emoji:A,input:r.slice(),cps:X(A)});else{let A=e.pop();if(46==A)n.push({type:"stop",cp:A});else if(O.has(A))n.push({type:"valid",cps:[A]});else if(h.has(A))n.push({type:"ignored",cp:A});else{let t=u.get(A);t?n.push({type:"mapped",cp:A,cps:t.slice()}):n.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<n.length;A++){let e=n[A];if(AA(e.type))if(tA(e.cps)){let e=A+1;for(let A=e;A<n.length;A++){let{type:t,cps:r}=n[A];if(AA(t)){if(!tA(r))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let r=n.slice(t,e),o=r.flatMap((A=>AA(A.type)?A.cps:[])),w=s(o);c(w,o)?(n.splice(t,e-t,{type:"nfc",input:o,cps:w,tokens0:eA(r),tokens:_(f(w),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return eA(n)}function AA(A){return"valid"==A||"mapped"==A}function tA(A){return A.some((A=>a.has(A)))}function eA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}export{S as ens_beautify,$ as ens_emoji,b as ens_normalize,Y as ens_normalize_fragment,x as ens_split,_ as ens_tokenize,R as is_combining_mark,s as nfc,D as nfd,K as safe_str_from_cps,m as should_escape};
