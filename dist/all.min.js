function A(A){return 1&A?~A>>1:A>>1}function t(A,t){let e=Array(A);for(let n=0,o=-1;n<A;n++)e[n]=o+=1+t();return e}function e(t,e){let n=Array(t);for(let o=0,r=0;o<t;o++)n[o]=r+=A(e());return n}function n(A,e){let n=t(A(),A),o=A(),r=t(o,A),i=function(A,t){let e=Array(A);for(let n=0;n<A;n++)e[n]=1+t();return e}(o,A);for(let A=0;A<o;A++)for(let t=0;t<i[A];t++)n.push(r[A]+t);return e?n.map((A=>e[A])):n}function o(A,t,n,o){let r=Array(A).fill().map((()=>[]));for(let i=0;i<t;i++)e(A,n).forEach(((A,t)=>r[t].push(o?o(A):A)));return r}function r(A,t){let e=1+t(),n=t(),r=function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(e)}return t}(t);return o(r.length,1+A,t).flatMap(((A,t)=>{let[o,...i]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,i.map((A=>A+r))]}))}))}function i(A,t){return o(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var l=function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let i=e(),l=t;t+=i;let g=0,s=0;function a(){return 0==g&&(s=s<<8|A[t++],g=8),s>>--g&1}const c=2**31,f=c>>>1,C=c-1;let d=0;for(let A=0;A<31;A++)d=d<<1|a();let p=[],B=0,u=c;for(;;){let A=Math.floor(((d-B+1)*o-1)/u),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;p.push(t);let i=B+Math.floor(u*r[t]/o),l=B+Math.floor(u*r[t+1]/o)-1;for(;0==((i^l)&f);)d=d<<1&C|a(),i=i<<1&C,l=l<<1&C|1;for(;i&~l&536870912;)d=d&f|d<<1&C>>>1|a(),i=i<<1^f,l=(l^f)<<1|f|1;B=i,u=1+l-i}let w=n-4;return p.map((t=>{switch(t-w){case 3:return w+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return w+256+(A[l++]<<8|A[l++]);case 1:return w+A[l++];default:return t-1}}))}(Uint8Array.from(atob(""),(A=>A.charCodeAt(0)))));const g=new Set(n(l)),s=new Set(n(l)),a=function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(r(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(i(e,A))}return Object.fromEntries(t.flat())}(l),c=function(A){let t=n(A).sort(((A,t)=>A-t));return function e(){let o=[];for(;;){let r=n(A);if(0==r.length)break;o.push({set:new Set(r.map((A=>t[A]))),node:e()})}o.sort(((A,t)=>t.set.size-A.set.size));let r=A();return{branches:o,valid:0!=(1&r),fe0f:0!=(2&r),save:0!=(4&r),check:0!=(8&r)}}()}(l),f=new Set(n(l,[...g].sort(((A,t)=>A-t))));function C(A){return A.normalize("NFC")}function d(A){return[...A].map((A=>A.codePointAt(0)))}function p(A){return A.filter((A=>65039!=A))}function B(A){return w(A,(A=>A))}function u(A){return w(A,p)}function w(A,t){let e=d(A).reverse(),n=[];for(;e.length;){let A=D(e,c);if(A){n.push(...t(A));continue}let o=e.pop();if(g.has(o)){n.push(o);continue}if(s.has(o))continue;let r=a[o];if(!r)throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`);n.push(...r)}return C(String.fromCodePoint(...n))}function D(A,t,e){let n,o,r=[],i=A.length;for(e&&(e.length=0);i;){let l=A[--i];if(t=t.branches.find((A=>A.set.has(l)))?.node,!t)break;if(t.save)o=l;else if(t.check&&l===o)break;r.push(l),t.fe0f&&(r.push(65039),i>0&&65039==A[i-1]&&i--),t.valid&&(n=r.slice(),e&&e.push(...A.slice(i).reverse()),A.length=i)}return n}function h(A){let t=d(A).reverse(),e=[],n=[];for(;t.length;){let A=D(t,c,e);if(A)n.push({type:"emoji",emoji:A,input:e.slice(),cps:p(A)});else{let A=t.pop();if(46===A)n.push({type:"stop"});else if(g.has(A))n.push({type:"valid",cps:[A]});else if(s.has(A))n.push({type:"ignored",cp:A});else{let t=a[A];t?n.push({type:"mapped",cp:A,cps:t}):n.push({type:"disallowed",cp:A})}}}for(let A=0,t=-1;A<n.length;A++){let e=n[A];if(E(e.type))if(m(e.cps)){let e=A+1;for(let A=e;A<n.length;A++){let{type:t,cps:o}=n[A];if(E(t)){if(!m(o))break;e=A+1}else if("ignored"!==t||"disallowed"!==t)break}t<0&&(t=A);let o=n.slice(t,e),r=o.flatMap((A=>E(A.type)?A.cps:[])),i=String.fromCodePoint(...r),l=C(i);i===l?A=e-1:(n.splice(t,e-t,{type:"nfc",input:r,cps:d(l),tokens:Q(o)}),A=t),t=-1}else t=A;else"emoji"===e.type&&(t=-1)}return Q(n)}function E(A){return"valid"===A||"mapped"===A}function m(A){return A.some((A=>f.has(A)))}function Q(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function M(A){return A.toString(16).toUpperCase()}function k(A){return`{${M(A)}}`}function T(A){return[...A].map((A=>A.codePointAt(0)))}function I(A,t=k){return A.replace(/(?:([\x00-\x20\x7F\xA0\s\u200C\u200D\u{E0020}-\u{E007F}])|([^\x21-\x25\x27-\x3B\x3D\x3F-\x7E]))/gu,((A,e,n)=>e?t(e.codePointAt(0)):`&#${n.codePointAt(0)}`))}function F(A){return A.replace(/[^\x21\x23-\x7A\x7C\x7E]/gu,(A=>k(A.codePointAt(0))))}function L(A){return/^[\x21-\x7E]+$/gu.test(A)}function K(A,t,e={}){for(let n of A){let A=t(n),o=e[A];o||(o=e[A]=[]),o.push(n)}return e}function x(A,t){let e=0,n=[];for(let o=1;o<A.length;o++)t(A[o-1],A[o])&&(n.push(A.slice(e,o)),e=o);return e<A.length&&n.push(A.slice(e)),n}function H(A,t,e){let n=[];A=A.map((A=>A.slice()));for(let o=0;o<A.length;o++){let r=A[o],[i,l]=r;if(-1==i)continue;let g=[r];A:for(let n=o+1;n<A.length;n++){let o=A[n],[r,s]=o;if(-1==r)continue;let a=i+g.length*t;if(!(r<a)){if(r>a)break;for(let A=0;A<l.length;A++)if(l[A]+g.length*e!=s[A])continue A;g.push(o)}}g.length>1&&(g.forEach((A=>A[0]=-1)),n.push([i,g.length,l]))}return{linear:n,nonlinear:A.filter((A=>A[0]>=0))}}function y(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function N(A){return A<26?97+A:22+A}function Y(A,t){let e=A-t;return e<=0?1:e>=26?26:e}function U(A,t,e){A=Math.floor(A/(e?700:2)),A+=Math.floor(A/t);let n=0;for(;A>455;)A=Math.floor(A/35),n+=36;return n+Math.floor(36*A/(A+38))}const P=new Set(T("-.0123456789abcdefghijklmnopqrstuvwxyz"));function S(A){let t=0;return A.split(".").map(((A,e)=>{if(e>0&&t++,!A)return"";let n=T(A),o=function(A){if(!Array.isArray(A)||!A.every((A=>Number.isSafeInteger(A)&&A>=0&&A<=1114111)))throw new TypeError("expected array of Unicode codepoints");let t=A.filter((A=>A<128)),e=t.length;if(e==A.length)return A;e&&t.push(45);let n=128,o=72,r=0,i=e;for(;i<A.length;){let l=A.reduce(((A,t)=>t>=n&&t<A?t:A),1114111);r+=(l-n)*(i+1);for(let n of A)if(n<l)r++;else if(n==l){let A=r;for(let e=36;;e+=36){let n=Y(e,o),r=A-n;if(r<0)break;let i=36-n;t.push(N(n+r%i)),A=Math.floor(r/i)}t.push(N(A)),o=U(r,i+1,i==e),r=0,i++}r++,n=l+1}return t}(n);try{for(let A of o)if(!P.has(A))throw new Error(`invalid ASCII: "${F(String.fromCodePoint(A))}"`);if(t+=o.length,o===n){if(A.startsWith("xn--"))throw new Error("punycode literal");if("--"===A.slice(2,4))throw Error("invalid label extension");if(A.startsWith("-"))throw Error("leading hyphen");if(A.endsWith("-"))throw Error("trailing hyphen")}else t+=4,A="xn--"+String.fromCodePoint(...o);if(A.length>63)throw new Error(`too long: ${A.length} > 63`)}catch(t){throw new Error(`Invalid label "${F(A)}": ${t.message}`)}if(t>253)throw new Error(`Name too long: ${t} > 253`);return A})).join(".")}function b(A){return I(String.fromCodePoint(...A),(A=>8204==A?'<span class="mod zwj">ZWNJ</span>':8205==A?'<span class="mod zwj">ZWJ</span>':`<code>${M(A)}</code>`))}function G(A){return`Hex: 0x${A.map(M).join(" ")}\nDec: ${A.join(" ")}`}function V(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function j(A,t){let e=document.createElement("div");return e.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"===A.type?A.tokens:A))),e.append(...A.flatMap((A=>{let e;if("emoji"===A.type){let n=t?A.input:A.cps;e=document.createElement("a"),e.href=`https://emojipedia.org/${String.fromCodePoint(...A.emoji)}`,e.classList.add("glyph"),e.append(...n.map(((A,t)=>{let e=document.createElement("span");if(8205==A)e.classList.add("mod","zwj"),e.innerHTML="ZWJ";else if(65039==A)e.classList.add("mod","dropped","style"),e.innerHTML="FE0F";else if(8419==A)e.classList.add("mod","keycap"),e.innerHTML="Keycap";else if(A>=917536&&A<=917631){A-=917504;let t=String.fromCodePoint(A);127===A?(e.classList.add("mod"),e.innerHTML="TagEnd"):(L(t)?e.innerHTML=t:(e=document.createElement("code"),e.innerHTML=M(A)),e.classList.add("mod","tag"))}else e.classList.add("emoji"),e.innerHTML=String.fromCodePoint(A);return e})))}else if("nfc"===A.type){e=document.createElement("div"),e.classList.add("nfc");let t=j(A.tokens,!1);t.classList.add("before");let n=document.createElement("div");n.classList.add("valid"),n.innerHTML=b(A.cps),n.title=G(A.cps),e.append(t,V(),n)}else if(e=document.createElement("div"),"valid"===A.type)e.classList.add("valid"),e.innerHTML=b(A.cps),e.title=G(A.cps);else if("mapped"===A.type){e.classList.add("mapped");let n=document.createElement("span");n.classList.add("before"),n.innerHTML=b([A.cp]),n.title=G([A.cp]),e.append(n),t||e.append(V(),...A.cps.map((A=>{let t=document.createElement("span");return t.innerHTML=b([A]),t.title=G([A]),t})))}else if("ignored"===A.type)e=document.createElement("code"),e.innerHTML=M(A.cp),e.title=G([A.cp]),e.classList.add("ignored");else if("disallowed"===A.type)e.classList.add("disallowed"),e.innerHTML=b([A.cp]),e.title=G([A.cp]);else{if("stop"!==A.type)throw new TypeError(`unknown token type: ${A.type}`);e.classList.add("stop"),e.innerHTML="."}return e}))),e}function z(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #f66;\t\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .glyph {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 0.5rem;\n\t\tbackground: #cff;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tbackground: #333;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .mod.tag {\n\t\tbackground: #33f;\n\t}\n\t.tokens .mod.dropped {\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #fa0;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens code {\n\t\tfont-size: 90%;\n\t\tpadding: 2px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t\tbackground: rgba(0, 0, 0, .3);\n\t\talign-self: center;\n\t}",document.body.append(A)}export{y as compare_arrays,S as dns_from_normalized_ens,j as dom_from_tokens,B as ens_beautify,u as ens_normalize,h as ens_tokenize,I as escape_for_html,F as escape_unicode,T as explode_cp,K as group_by,M as hex_cp,L as is_printable_ascii,k as quote_cp,x as split_between,H as split_linear,z as use_default_style};
