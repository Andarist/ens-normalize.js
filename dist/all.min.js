function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),r=1,o=[0,1];for(let A=1;A<n;A++)o.push(r+=e());let l=e(),i=t;t+=l;let s=0,w=0;function c(){return 0==s&&(w=w<<8|A[t++],s=8),w>>--s&1}const f=2**31,a=f>>>1,B=f-1;let p=0;for(let A=0;A<31;A++)p=p<<1|c();let E=[],Q=0,u=f;for(;;){let A=Math.floor(((p-Q+1)*r-1)/u),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<o[n]?e=n:t=n}if(0==t)break;E.push(t);let l=Q+Math.floor(u*o[t]/r),i=Q+Math.floor(u*o[t+1]/r)-1;for(;0==((l^i)&a);)p=p<<1&B|c(),l=l<<1&B,i=i<<1&B|1;for(;l&~i&536870912;)p=p&a|p<<1&B>>>1|c(),l=l<<1^a,i=(i^a)<<1|a|1;Q=l,u=1+i-l}let g=n-4;return E.map((t=>{switch(t-g){case 3:return g+65792+(A[i++]<<16|A[i++]<<8|A[i++]);case 2:return g+256+(A[i++]<<8|A[i++]);case 1:return g+A[i++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let r=0,o=0,l=0,i=0;r<e;r++)i=i<<6|t[A.charCodeAt(r)],l+=6,l>=8&&(n[o++]=i>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,t){let e=Array(A);for(let n=0,r=-1;n<A;n++)e[n]=r+=1+t();return e}function n(A,e){let n=Array(A);for(let r=0,o=0;r<A;r++)n[r]=o+=t(e());return n}function r(A,t){let n=e(A(),A),r=A(),o=e(r,A),l=function(A,t){let e=Array(A);for(let n=0;n<A;n++)e[n]=1+t();return e}(r,A);for(let A=0;A<r;A++)for(let t=0;t<l[A];t++)n.push(o[A]+t);return t?n.map((A=>t[A])):n}function o(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(s(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(w(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A();if(!e)break;t.push(e)}return t}function i(A,t,e){let r=Array(A).fill().map((()=>[]));for(let o=0;o<t;o++)n(A,e).forEach(((A,t)=>r[t].push(A)));return r}function s(A,t){let e=1+t(),n=t(),r=l(t);return i(r.length,1+A,t).flatMap(((A,t)=>{let[o,...l]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,l.map((A=>A+r))]}))}))}function w(A,t){return i(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var c=A("");function f(A){return A.toString(16).toUpperCase().padStart(2,"0")}function a(A){return`{${f(A)}}`}function B(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function p(A){return String.fromCodePoint(...A)}function E(A,t=a){return A.replace(/(?:([\x00-\x20\x7F\xA0\s\u200C\u200D\u2800\u{E0020}-\u{E007F}])|([\x26\x3C\x3E]))/gu,((A,e,n)=>e?t(e.codePointAt(0)):`&#${n.codePointAt(0)};`))}function Q(A){return A.replace(/[^\x21\x23-\x7A\x7C\x7E]/gu,(A=>a(A.codePointAt(0))))}function u(A){return/^[\x21-\x7E]+$/gu.test(A)}function g(A,t){let{length:e}=A,n=e-t.length;for(let r=0;0==n&&r<e;r++)n=A[r]-t[r];return n}function d(A,t=Math.random){return A[t()*A.length|0]}function C(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],r=Math.floor(n+e()*(A.length-n));A[n]=A[r],A[r]=t}A=A.slice(0,t)}return A}function h(A,t){let e=[];for(let n of t){let{name:t,norm:r,error:o}=n;"string"!=typeof r&&(r=t);try{let l=A(t);o?e.push({type:"expected error",result:l,...n}):l!=r&&e.push({type:"wrong norm",result:l,...n})}catch(A){o||e.push({type:"unexpected error",result:A.message,...n})}}return e}var k=A("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");function M(A){return A>>24&255}function D(A){return 16777215&A}const F=new Map(l((()=>{let A=r(k);if(A.length)return A})).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),L=new Set(r(k)),m=new Map,I=new Map;for(let[A,t]of o(k)){if(!L.has(A)&&2==t.length){let[e,n]=t,r=I.get(e);r||(r=new Map,I.set(e,r)),r.set(n,A)}m.set(A,t.reverse())}const U=44032;function x(A){return A>=U&&A<55204}function J(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return U+588*(A-4352)+28*(t-4449);if(x(A)&&t>4519&&t<4547&&(A-U)%28==0)return A+(t-4519);{let e=I.get(A);return e&&(e=e.get(t),e)?e:-1}}function K(A){let t=[],e=[],n=!1;function r(A){let e=F.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(x(n)){let A=n-U,t=A%588/28|0,e=A%28;r(4352+(A/588|0)),r(4449+t),e>0&&r(4519+e)}else{let A=m.get(n);A?e.push(...A):r(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=M(t[0]);for(let e=1;e<t.length;e++){let n=M(t[e]);if(0==n||A<=n){A=n;continue}let r=e-1;for(;;){let e=t[r+1];if(t[r+1]=t[r],t[r]=e,!r)break;if(A=M(t[--r]),A<=n)break}A=M(t[e])}}return t}function N(A){return K(A).map(D)}function R(A){return function(A){let t=[],e=[],n=-1,r=0;for(let o of A){let A=M(o),l=D(o);if(-1==n)0==A?n=l:t.push(l);else if(r>0&&r>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),r=A;else{let o=J(n,l);o>=0?n=o:0==r&&0==A?(t.push(n),n=l):(e.push(l),r=A)}}return n>=0&&t.push(n,...e),t}(K(A))}const O=r(c).sort(((A,t)=>A-t)),y=new Set(O),b=new Set(r(c)),G=new Map(o(c));function H(){return new Set(r(c,O))}const P=H(),T=H(),X=["Latin","Greek","Cyrillic"].map(((A,t)=>[A,H(),t?H():0])),j=l((()=>{let A=H();if(A.size)return A})),V=new Set(r(c)),Y=function(A){let t=r(A).sort(((A,t)=>A-t));return function e(){let n=[];for(;;){let o=r(A,t);if(0==o.length)break;n.push({set:new Set(o),node:e()})}n.sort(((A,t)=>t.set.size-A.set.size));let o=A(),l=o%3;o=o/3|0;let i=!!(1&o);return o>>=1,{branches:n,valid:l,fe0f:i,save:1==o,check:2==o}}()}(c),S=H();function v(A){let t=A.lastIndexOf(95);for(;t>0;)if(95!==A[--t])throw new Error("underscore only allowed at start")}function z(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}function W(A,t,e,n,r){let o=-1;if(A[0]===t){if(n)throw new Error(`leading ${e}`);o=0}for(;;){let n=A.indexOf(t,o+1);if(-1==n)break;if(o==n-1)throw new Error(`adjacent ${e}`);o=n}if(r&&o==A.length-1)throw new Error(`trailing ${e}`)}function Z(A){let t=0;for(;t=A.indexOf(183,t),-1!=t;){if(108!==A[t-1]||108!==A[t+1])throw new Error("ContextO: middle dot");t+=2}}function q(A){for(let t=0;t<X.length;t++){let[e,n,r]=X[t];if(A.some((A=>n.has(A)))){for(let n=t+1;n<X.length;n++){let[t,r]=X[n];if(A.some((A=>r.has(A))))throw new Error(`mixed-script confusable: ${e} + ${t}`)}if(r&&A.every((A=>!n.has(A)||r.has(A))))throw new Error(`whole-script confusable: ${e}`);break}}}function $(A){for(let t of j)if(A.some((A=>t.has(A)))){if(!A.every((A=>t.has(A)||65039==A)))throw new Error("excluded script cannot mix");break}}function _(A){for(let t=0,e=-1;t<A.length;t++)if(P.has(A[t])){if(0==t)throw new Error("leading combining mark");if(t==e)throw new Error(`adjacent combining marks "${p(A.slice(t-2,t+1))}"`);{let e=A[t-1];if(65039==e||T.has(e))throw new Error("isolate combining mark")}e=t+1}}function AA(A){for(let t of A.split(".")){if(!t)throw new Error("Empty label");try{let A=B(t);v(A),z(A),W(A,8217,"apostrophe",!0,!0),Z(A),q(A);let e=N(oA(t,(()=>[65039])));_(e),$(e)}catch(A){throw new Error(`Invalid label "${t}": ${A.message}`)}}return A}function tA(A,t=R){return p(t(oA(A,rA)))}function eA(A){return AA(tA(A))}function nA(A){return p(R(oA(A,(A=>A))))}function rA(A){return A.filter((A=>65039!=A))}function oA(A,t){let e=B(A).reverse(),n=[];for(;e.length;){let A=lA(e);if(A)n.push(...t(A));else{let A=e.pop();if(y.has(A))n.push(A);else{let t=G.get(A);if(t)n.push(...t);else if(!b.has(A))throw new Error(`Disallowed codepoint: 0x${f(A)}`)}}}return n}function lA(A,t){let e,n,r=Y,o=[],l=A.length;for(t&&(t.length=0);l;){let i=A[--l],s=r.branches.find((A=>A.set.has(i)));if(!s)break;if(r=s.node,r.save)n=i;else if(r.check&&i===n)break;o.push(i),r.fe0f&&(o.push(65039),l>0&&65039==A[l-1]&&l--),r.valid&&(e=iA(o,r),t&&t.push(...A.slice(l).reverse()),A.length=l)}if(!e){let n=A[A.length-1];V.has(n)&&(t&&t.push(n),e=[n],A.pop())}return e}function iA(A,t){let e=A.slice();return 2==t.valid&&e.splice(1,1),e}function sA(){let A=[...V].map((A=>[A]));return function t(e,n,r){if(e.save)r=n[n.length-1];else if(e.check&&r===n[n.length-1])return;e.fe0f&&n.push(65039),e.valid&&A.push(iA(n,e));for(let A of e.branches)for(let e of A.set)t(A.node,[...n,e],r)}(Y,[]),A}function wA(A){let t=B(A).reverse(),e=[],n=[];for(;t.length;){let A=lA(t,e);if(A)n.push({type:"emoji",emoji:A,input:e.slice(),cps:rA(A)});else{let A=t.pop();if(46===A)n.push({type:"stop"});else if(y.has(A))T.has(A)?n.push({type:"isolated",cp:A}):n.push({type:"valid",cps:[A]});else if(b.has(A))n.push({type:"ignored",cp:A});else{let t=G.get(A);t?n.push({type:"mapped",cp:A,cps:t.slice()}):n.push({type:"disallowed",cp:A})}}}for(let A=0,t=-1;A<n.length;A++){let e=n[A];if(cA(e.type))if(fA(e.cps)){let e=A+1;for(let A=e;A<n.length;A++){let{type:t,cps:r}=n[A];if(cA(t)){if(!fA(r))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let r=n.slice(t,e),o=r.flatMap((A=>cA(A.type)?A.cps:[])),l=R(o);p(o)===p(l)?A=e-1:(n.splice(t,e-t,{type:"nfc",input:o,cps:l,tokens:aA(r)}),A=t),t=-1}else t=A;else"emoji"===e.type&&(t=-1)}return aA(n)}function cA(A){return"valid"===A||"mapped"===A}function fA(A){return A.some((A=>S.has(A)))}function aA(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function BA(A){return A<26?97+A:22+A}function pA(A,t){let e=A-t;return e<=0?1:e>=26?26:e}function EA(A,t,e){A=Math.floor(A/(e?700:2)),A+=Math.floor(A/t);let n=0;for(;A>455;)A=Math.floor(A/35),n+=36;return n+Math.floor(36*A/(A+38))}const QA=new Set(B("-.0123456789abcdefghijklmnopqrstuvwxyz"));function uA(A){if((A=A.split(".").map((A=>{if(!A)return"";let t=A;try{let A=B(t),e=function(A,t){if(!Array.isArray(A)||!A.every((A=>Number.isSafeInteger(A)&&A>=0&&A<=1114111)))throw new TypeError("expected array of Unicode codepoints");return function(A,t){let e=A.filter((A=>A<128)),n=e.length;if(n==A.length)return A;t&&e.splice(0,0,120,110,45,45),n&&e.push(45);let r=128,o=72,l=0,i=n;for(;i<A.length;){let t=A.reduce(((A,t)=>t>=r&&t<A?t:A),1114111);l+=(t-r)*(i+1);for(let r of A)if(r<t)l++;else if(r==t){let A=l;for(let t=36;;t+=36){let n=pA(t,o),r=A-n;if(r<0)break;let l=36-n;e.push(BA(n+r%l)),A=Math.floor(r/l)}e.push(BA(A)),o=EA(l,i+1,i==n),l=0,i++}l++,r=t+1}return e}(A,t)}(A);for(let A of e)if(!QA.has(A))throw new Error(`invalid ASCII: "${Q(String.fromCodePoint(A))}"`);if(e===A){if(t.startsWith("xn--"))throw new Error("punycode literal");if("--"===t.slice(2,4))throw new Error("invalid label extension");if(t.startsWith("-"))throw new Error("leading hyphen");if(t.endsWith("-"))throw new Error("trailing hyphen")}else t="xn--"+String.fromCodePoint(...e);if(t.length>63)throw new Error(`too long: ${t.length} > 63`)}catch(t){throw new Error(`Invalid label "${Q(A)}": ${t.message}`)}return t})).join(".")).length>253)throw new Error(`Name too long: ${A.length} > 253`);return A}function gA(A){return A.map(f).join(" ")}function dA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function CA(A){let t=document.createElement("span");if(8205==A)t.classList.add("mod","zwj"),t.innerHTML="ZWJ";else if(8204==A)t.classList.add("mod","zwj"),t.innerHTML="ZWNJ";else if(65039==A)t.classList.add("mod","dropped","style"),t.innerHTML="FE0F";else if(8419==A)t.classList.add("mod","keycap"),t.innerHTML="Keycap";else if(A>=917536&&A<=917631){A-=917504;let e,n=String.fromCodePoint(A);t.classList.add("mod","tag"),127===A?e="End":(e=E(n),e!==n&&t.classList.add("code")),t.innerHTML=`<span class="tag">${e}<sub>🏷️</sub></span>`}else{let e=String.fromCodePoint(A),n=E(e,f);n!==e&&t.classList.add("code"),t.classList.add("raw"),t.innerHTML=n}return t}function hA(A,{before:t=!1,components:e=!0}={}){let n=document.createElement("div");return n.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"===A.type?A.tokens:A))),n.append(...A.flatMap((A=>{let n;if("emoji"===A.type){let r=t?A.input:A.cps;n=document.createElement("a"),n.href=`https://emojipedia.org/${String.fromCodePoint(...A.emoji)}`,n.title=`Emoji\n${gA(r)}`,n.classList.add("glyph"),e?n.append(...r.map((A=>CA(A)))):n.innerHTML=String.fromCodePoint(...A.emoji)}else if("nfc"===A.type){n=document.createElement("div"),n.classList.add("nfc");let t=hA(A.tokens,!1);t.classList.add("before");let e=document.createElement("div");e.classList.add("valid"),e.innerHTML=String.fromCodePoint(...A.cps),e.title=`NFC\n${gA(A.cps)}`,n.append(t,dA(),e)}else if(n=document.createElement("div"),"valid"===A.type)n.classList.add("valid"),n.innerHTML=String.fromCodePoint(...A.cps),n.title=`Valid\n${gA(A.cps)}`;else if("mapped"===A.type){n.classList.add("mapped");let e=document.createElement("span");e.classList.add("before"),e.innerHTML=String.fromCodePoint(A.cp),e.title=`Mapped\n${f(A.cp)}`,n.append(e),t||n.append(dA(),...A.cps.map((A=>{let t=document.createElement("span");return t.innerHTML=String.fromCodePoint(A),t.title=f(A),t})))}else if("ignored"===A.type)n.innerHTML=f(A.cp),n.title=`Ignored\n${f(A.cp)}`,n.classList.add("ignored");else if("disallowed"===A.type)n=CA(A.cp),n.classList.add("disallowed"),n.title=`Disallowed\n${f(A.cp)}`;else if("stop"===A.type)n.classList.add("stop"),n.innerHTML=".";else{if("isolated"!==A.type)throw new TypeError(`unknown token type: ${A.type}`);n.classList.add("isolated"),n.innerHTML=String.fromCodePoint(A.cp),n.title=`Valid (Isolated)\n${f(A.cp)}`}return n}))),n}function kA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t\tfont-size: 70%;\n\t\tfont-family: monospace;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 65%;\n\t\tbackground: #800;\n\t}\n\t.tokens .tag sub {\n\t\tfont-size: 50%;\n\t\tcolor: #ccc;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .isolated {\n\t\tborder: 2px solid #87e;\n\t\tborder-radius: 5px;\n\t\tbackground: #ecf;\n\t}\n\t.tokens .glyph {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 5px;\n\t\tbackground: #cff;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .glyph .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .glyph .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .glyph .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .glyph .mod.tag sub {\n\t\tdisplay: none;\n\t}\n\t.tokens .glyph .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #fa0;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}",document.body.append(A)}export{g as compare_arrays,uA as dns_from_normalized_ens,hA as dom_from_tokens,nA as ens_beautify,sA as ens_emoji,eA as ens_normalize,tA as ens_normalize_fragment,AA as ens_normalize_post_check,wA as ens_tokenize,E as escape_for_html,Q as escape_unicode,B as explode_cp,f as hex_cp,u as is_printable_ascii,R as nfc,N as nfd,a as quote_cp,d as random_choice,C as random_sample,h as run_tests,p as str_from_cps,kA as use_default_style};
