function A(A){return 1&A?~A>>1:A>>1}function e(A,e){let t=Array(A);for(let n=0,o=-1;n<A;n++)t[n]=o+=1+e();return t}function t(e,t){let n=Array(e);for(let o=0,r=0;o<e;o++)n[o]=r+=A(t());return n}function n(A,t){let n=e(A(),A),o=A(),r=e(o,A),i=function(A,e){let t=Array(A);for(let n=0;n<A;n++)t[n]=1+e();return t}(o,A);for(let A=0;A<o;A++)for(let e=0;e<i[A];e++)n.push(r[A]+e);return t?n.map((A=>t[A])):n}function o(A,e,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<e;r++)t(A,n).forEach(((A,e)=>o[e].push(A)));return o}function r(A,e){let t=1+e(),n=e(),r=function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(t)}return e}(e);return o(r.length,1+A,e).flatMap(((A,e)=>{let[o,...i]=A;return Array(r[e]).fill().map(((A,e)=>{let r=e*n;return[o+e*t,i.map((A=>A+r))]}))}))}function i(A,e){return o(1+e(),1+A,e).map((A=>[A[0],A.slice(1)]))}var l=function(A){let e=0;return()=>A[e++]}(function(A){let e=0;function t(){return A[e++]<<8|A[e++]}let n=t(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=t());let i=t(),l=e;e+=i;let g=0,a=0;function s(){return 0==g&&(a=a<<8|A[e++],g=8),a>>--g&1}const c=2**31,p=c>>>1,B=c-1;let f=0;for(let A=0;A<31;A++)f=f<<1|s();let d=[],C=0,u=c;for(;;){let A=Math.floor(((f-C+1)*o-1)/u),e=0,t=n;for(;t-e>1;){let n=e+t>>>1;A<r[n]?t=n:e=n}if(0==e)break;d.push(e);let i=C+Math.floor(u*r[e]/o),l=C+Math.floor(u*r[e+1]/o)-1;for(;0==((i^l)&p);)f=f<<1&B|s(),i=i<<1&B,l=l<<1&B|1;for(;i&~l&536870912;)f=f&p|f<<1&B>>>1|s(),i=i<<1^p,l=(l^p)<<1|p|1;C=i,u=1+l-i}let w=n-4;return d.map((e=>{switch(e-w){case 3:return w+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return w+256+(A[l++]<<8|A[l++]);case 1:return w+A[l++];default:return e-1}}))}(Uint8Array.from(atob("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"),(A=>A.charCodeAt(0)))));function g(A){return A.toString(16).toUpperCase()}function a(A){return`{${g(A)}}`}function s(A){return[...A].map((A=>A.codePointAt(0)))}function c(A){return A.filter((A=>65039!=A))}function p(A,e=a){return A.replace(/(?:([\x00-\x20\x7F\xA0\s\u200C\u200D\u{E0020}-\u{E007F}])|([^\x21-\x25\x27-\x3B\x3D\x3F-\x7E]))/gu,((A,t,n)=>t?e(t.codePointAt(0)):`&#${n.codePointAt(0)}`))}function B(A){return A.replace(/[^\x21\x23-\x7A\x7C\x7E]/gu,(A=>a(A.codePointAt(0))))}function f(A){return/^[\x21-\x7E]+$/gu.test(A)}function d(A,e){let{length:t}=A,n=t-e.length;for(let o=0;0==n&&o<t;o++)n=A[o]-e[o];return n}const C=new Set(n(l)),u=new Set(n(l)),w=function(A){let e=[];for(;;){let t=A();if(0==t)break;e.push(r(t,A))}for(;;){let t=A()-1;if(t<0)break;e.push(i(t,A))}return Object.fromEntries(e.flat())}(l),h=function(A){let e=n(A).sort(((A,e)=>A-e));return function t(){let o=[];for(;;){let r=n(A);if(0==r.length)break;o.push({set:new Set(r.map((A=>e[A]))),node:t()})}o.sort(((A,e)=>e.set.size-A.set.size));let r=A(),i=r%3;r=r/3|0;let l=!!(1&r);return r>>=1,{branches:o,valid:i,fe0f:l,save:1==r,check:2==r}}()}(l),Q=new Set(n(l,[...C].sort(((A,e)=>A-e))));function E(A){return A.normalize("NFC")}function I(A){return D(A,(A=>A))}function m(A){return D(A,c)}function D(A,e){let t=s(A).reverse(),n=[];for(;t.length;){let A=y(t);if(A){n.push(...e(A));continue}let o=t.pop();if(C.has(o)){n.push(o);continue}if(u.has(o))continue;let r=w[o];if(!r)throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`);n.push(...r)}return E(String.fromCodePoint(...n))}function y(A,e){let t,n,o=h,r=[],i=A.length;for(e&&(e.length=0);i;){let l=A[--i];if(o=o.branches.find((A=>A.set.has(l)))?.node,!o)break;if(o.save)n=l;else if(o.check&&l===n)break;r.push(l),o.fe0f&&(r.push(65039),i>0&&65039==A[i-1]&&i--),o.valid&&(t=r.slice(),2==o.valid&&t.splice(1,1),e&&e.push(...A.slice(i).reverse()),A.length=i)}return t}function k(A){let e=s(A).reverse(),t=[],n=[];for(;e.length;){let A=y(e,t);if(A)n.push({type:"emoji",emoji:A,input:t.slice(),cps:c(A)});else{let A=e.pop();if(46===A)n.push({type:"stop"});else if(C.has(A))n.push({type:"valid",cps:[A]});else if(u.has(A))n.push({type:"ignored",cp:A});else{let e=w[A];e?n.push({type:"mapped",cp:A,cps:e}):n.push({type:"disallowed",cp:A})}}}for(let A=0,e=-1;A<n.length;A++){let t=n[A];if(M(t.type))if(T(t.cps)){let t=A+1;for(let A=t;A<n.length;A++){let{type:e,cps:o}=n[A];if(M(e)){if(!T(o))break;t=A+1}else if("ignored"!==e||"disallowed"!==e)break}e<0&&(e=A);let o=n.slice(e,t),r=o.flatMap((A=>M(A.type)?A.cps:[])),i=String.fromCodePoint(...r),l=E(i);i===l?A=t-1:(n.splice(e,t-e,{type:"nfc",input:r,cps:s(l),tokens:H(o)}),A=e),e=-1}else e=A;else"emoji"===t.type&&(e=-1)}return H(n)}function M(A){return"valid"===A||"mapped"===A}function T(A){return A.some((A=>Q.has(A)))}function H(A){for(let e=0;e<A.length;e++)if("valid"===A[e].type){let t=e+1;for(;t<A.length&&"valid"===A[t].type;)t++;A.splice(e,t-e,{type:"valid",cps:A.slice(e,t).flatMap((A=>A.cps))})}return A}function F(A){return A<26?97+A:22+A}function G(A,e){let t=A-e;return t<=0?1:t>=26?26:t}function x(A,e,t){A=Math.floor(A/(t?700:2)),A+=Math.floor(A/e);let n=0;for(;A>455;)A=Math.floor(A/35),n+=36;return n+Math.floor(36*A/(A+38))}const K=new Set(s("-.0123456789abcdefghijklmnopqrstuvwxyz"));function L(A){let e=0;return A.split(".").map(((A,t)=>{if(t>0&&e++,!A)return"";let n=s(A),o=function(A){if(!Array.isArray(A)||!A.every((A=>Number.isSafeInteger(A)&&A>=0&&A<=1114111)))throw new TypeError("expected array of Unicode codepoints");let e=A.filter((A=>A<128)),t=e.length;if(t==A.length)return A;t&&e.push(45);let n=128,o=72,r=0,i=t;for(;i<A.length;){let l=A.reduce(((A,e)=>e>=n&&e<A?e:A),1114111);r+=(l-n)*(i+1);for(let n of A)if(n<l)r++;else if(n==l){let A=r;for(let t=36;;t+=36){let n=G(t,o),r=A-n;if(r<0)break;let i=36-n;e.push(F(n+r%i)),A=Math.floor(r/i)}e.push(F(A)),o=x(r,i+1,i==t),r=0,i++}r++,n=l+1}return e}(n);try{for(let A of o)if(!K.has(A))throw new Error(`invalid ASCII: "${B(String.fromCodePoint(A))}"`);if(e+=o.length,o===n){if(A.startsWith("xn--"))throw new Error("punycode literal");if("--"===A.slice(2,4))throw Error("invalid label extension");if(A.startsWith("-"))throw Error("leading hyphen");if(A.endsWith("-"))throw Error("trailing hyphen")}else e+=4,A="xn--"+String.fromCodePoint(...o);if(A.length>63)throw new Error(`too long: ${A.length} > 63`)}catch(e){throw new Error(`Invalid label "${B(A)}": ${e.message}`)}if(e>253)throw new Error(`Name too long: ${e} > 253`);return A})).join(".")}function v(A){return p(String.fromCodePoint(...A),(A=>8204==A?'<span class="mod zwj">ZWNJ</span>':8205==A?'<span class="mod zwj">ZWJ</span>':`<code>${g(A)}</code>`))}function Y(A){return`Hex: 0x${A.map(g).join(" ")}\nDec: ${A.join(" ")}`}function P(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function b(A,e){let t=document.createElement("div");return t.classList.add("tokens"),e&&(A=A.flatMap((A=>"nfc"===A.type?A.tokens:A))),t.append(...A.flatMap((A=>{let t;if("emoji"===A.type){let n=e?A.input:A.cps;t=document.createElement("a"),t.href=`https://emojipedia.org/${String.fromCodePoint(...A.emoji)}`,t.classList.add("glyph"),t.append(...n.map(((A,e)=>{let t=document.createElement("span");if(8205==A)t.classList.add("mod","zwj"),t.innerHTML="ZWJ";else if(65039==A)t.classList.add("mod","dropped","style"),t.innerHTML="FE0F";else if(8419==A)t.classList.add("mod","keycap"),t.innerHTML="Keycap";else if(A>=917536&&A<=917631){A-=917504;let e=String.fromCodePoint(A);127===A?(t.classList.add("mod"),t.innerHTML="TagEnd"):(f(e)?t.innerHTML=e:(t=document.createElement("code"),t.innerHTML=g(A)),t.classList.add("mod","tag"))}else t.classList.add("emoji"),t.innerHTML=String.fromCodePoint(A);return t})))}else if("nfc"===A.type){t=document.createElement("div"),t.classList.add("nfc");let e=b(A.tokens,!1);e.classList.add("before");let n=document.createElement("div");n.classList.add("valid"),n.innerHTML=v(A.cps),n.title=Y(A.cps),t.append(e,P(),n)}else if(t=document.createElement("div"),"valid"===A.type)t.classList.add("valid"),t.innerHTML=v(A.cps),t.title=Y(A.cps);else if("mapped"===A.type){t.classList.add("mapped");let n=document.createElement("span");n.classList.add("before"),n.innerHTML=v([A.cp]),n.title=Y([A.cp]),t.append(n),e||t.append(P(),...A.cps.map((A=>{let e=document.createElement("span");return e.innerHTML=v([A]),e.title=Y([A]),e})))}else if("ignored"===A.type)t=document.createElement("code"),t.innerHTML=g(A.cp),t.title=Y([A.cp]),t.classList.add("ignored");else if("disallowed"===A.type)t.classList.add("disallowed"),t.innerHTML=v([A.cp]),t.title=Y([A.cp]);else{if("stop"!==A.type)throw new TypeError(`unknown token type: ${A.type}`);t.classList.add("stop"),t.innerHTML="."}return t}))),t}function J(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #f66;\t\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .glyph {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 0.5rem;\n\t\tbackground: #cff;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tbackground: #333;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .mod.tag {\n\t\tbackground: #33f;\n\t}\n\t.tokens .mod.dropped {\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #fa0;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens code {\n\t\tfont-size: 90%;\n\t\tpadding: 2px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t\tbackground: rgba(0, 0, 0, .3);\n\t\talign-self: center;\n\t}",document.body.append(A)}export{d as compare_arrays,L as dns_from_normalized_ens,b as dom_from_tokens,I as ens_beautify,m as ens_normalize,k as ens_tokenize,p as escape_for_html,B as escape_unicode,s as explode_cp,c as filter_fe0f,g as hex_cp,f as is_printable_ascii,a as quote_cp,J as use_default_style};
