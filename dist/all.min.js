function A(A){return 1&A?~A>>1:A>>1}function t(A,t){let e=Array(A);for(let n=0,o=-1;n<A;n++)e[n]=o+=1+t();return e}function e(t,e){let n=Array(t);for(let o=0,r=0;o<t;o++)n[o]=r+=A(e());return n}function n(A,e){let n=t(A(),A),o=A(),r=t(o,A),g=function(A,t){let e=Array(A);for(let n=0;n<A;n++)e[n]=1+t();return e}(o,A);for(let A=0;A<o;A++)for(let t=0;t<g[A];t++)n.push(r[A]+t);return e?n.map((A=>e[A])):n}function o(A,t,n,o){let r=Array(A).fill().map((()=>[]));for(let g=0;g<t;g++)e(A,n).forEach(((A,t)=>r[t].push(o?o(A):A)));return r}function r(A,t){let e=1+t(),n=t(),r=function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(e)}return t}(t);return o(r.length,1+A,t).flatMap(((A,t)=>{let[o,...g]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,g.map((A=>A+r))]}))}))}function g(A,t){return o(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var l=function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let g=e(),l=t;t+=g;let i=0,s=0;function a(){return 0==i&&(s=s<<8|A[t++],i=8),s>>--i&1}const c=2**31,p=c>>>1,w=c-1;let B=0;for(let A=0;A<31;A++)B=B<<1|a();let C=[],d=0,f=c;for(;;){let A=Math.floor(((B-d+1)*o-1)/f),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;C.push(t);let g=d+Math.floor(f*r[t]/o),l=d+Math.floor(f*r[t+1]/o)-1;for(;0==((g^l)&p);)B=B<<1&w|a(),g=g<<1&w,l=l<<1&w|1;for(;g&~l&536870912;)B=B&p|B<<1&w>>>1|a(),g=g<<1^p,l=(l^p)<<1|p|1;d=g,f=1+l-g}let u=n-4;return C.map((t=>{switch(t-u){case 3:return u+65792+(A[l++]<<16|A[l++]<<8|A[l++]);case 2:return u+256+(A[l++]<<8|A[l++]);case 1:return u+A[l++];default:return t-1}}))}(Uint8Array.from(atob(""),(A=>A.charCodeAt(0)))));const i=new Set(n(l)),s=new Set(n(l)),a=function(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(r(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(g(e,A))}return Object.fromEntries(t.flat())}(l),c=function(A){let t=n(A).sort(((A,t)=>A-t));return function e(){let o=[];for(;;){let r=n(A);if(0==r.length)break;o.push({set:new Set(r.map((A=>t[A]))),node:e()})}o.sort(((A,t)=>t.set.size-A.set.size));let r=A();return{branches:o,valid:0!=(1&r),fe0f:0!=(2&r),save:0!=(4&r),check:0!=(8&r)}}()}(l),p=new Set(n(l,[...i].sort(((A,t)=>A-t))));function w(A){return A.normalize("NFC")}function B(A){return[...A].map((A=>A.codePointAt(0)))}function C(A){return A.filter((A=>65039!=A))}function d(A,t=!1){let e=[...A].map((A=>A.codePointAt(0))).reverse(),n=[];for(;e.length;){let A=M(e,c);if(A){n.push(...t?A.emoji:C(A.input));continue}let o=e.pop();if(i.has(o)){n.push(o);continue}if(s.has(o))continue;let r=a[o];if(!r)throw new Error(`Disallowed codepoint: 0x${o.toString(16).toUpperCase()}`);n.push(...r)}return w(String.fromCodePoint(...n))}function f(A){let t=B(A).reverse(),e=[];for(;t.length;){let A=M(t,c);if(A)e.push({type:"emoji",...A,cps:C(A.input)});else{let A=t.pop();if(46===A)e.push({type:"stop"});else if(i.has(A))e.push({type:"valid",cps:[A]});else if(s.has(A))e.push({type:"ignored",cp:A});else{let t=a[A];t?e.push({type:"mapped",cp:A,cps:t}):e.push({type:"disallowed",cp:A})}}}for(let A=0,t=-1;A<e.length;A++){let n=e[A];if(u(n.type))if(h(n.cps)){let n=A+1;for(let A=n;A<e.length;A++){let{type:t,cps:o}=e[A];if(u(t)){if(!h(o))break;n=A+1}else if("ignored"!==t||"disallowed"!==t)break}t<0&&(t=A);let o=e.slice(t,n),r=o.flatMap((A=>u(A.type)?A.cps:[])),g=String.fromCodePoint(...r),l=w(g);g===l?A=n-1:(e.splice(t,n-t,{type:"nfc",input:r,cps:B(l),tokens:E(o)}),A=t),t=-1}else t=A;else"emoji"===n.type&&(t=-1)}return E(e)}function u(A){return"valid"===A||"mapped"===A}function h(A){return A.some((A=>p.has(A)))}function E(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function M(A,t){let e,n,o=[],r=[],g=A.length;for(;g;){let l=A[--g];if(65039!==l){if(t=t.branches.find((A=>A.set.has(l)))?.node,!t)break;o.push(l),n=t.fe0f,n&&o.push(65039),t.valid&&(n&&g>0&&65039==A[g-1]&&(n=!1,g--),e=o.slice(),r.push(...A.slice(g).reverse()),A.length=g)}else{if(!n)break;n=!1}}if(e)return{input:r,emoji:e}}function Q(A){return A.toString(16).toUpperCase()}function I(A){return`{${Q(A)}}`}function D(A){return[...A].map((A=>A.codePointAt(0)))}function m(A,t=I){return A.replace(/(?:([\x00-\x20\x7F\xA0\s\u200C\u200D\u{E0020}-\u{E007F}])|([^\x21-\x25\x27-\x3B\x3D\x3F-\x7E]))/gu,((A,e,n)=>e?t(e.codePointAt(0)):`&#${n.codePointAt(0)}`))}function x(A){return A.replace(/[^\x21\x23-\x7A\x7C\x7E]/gu,(A=>I(A.codePointAt(0))))}function y(A){return/^[\x21-\x7E]+$/gu.test(A)}function F(A,t,e={}){for(let n of A){let A=t(n),o=e[A];o||(o=e[A]=[]),o.push(n)}return e}function k(A,t){let e=0,n=[];for(let o=1;o<A.length;o++)t(A[o-1],A[o])&&(n.push(A.slice(e,o)),e=o);return e<A.length&&n.push(A.slice(e)),n}function K(A,t,e){let n=[];A=A.map((A=>A.slice()));for(let o=0;o<A.length;o++){let r=A[o],[g,l]=r;if(-1==g)continue;let i=[r];A:for(let n=o+1;n<A.length;n++){let o=A[n],[r,s]=o;if(-1==r)continue;let a=g+i.length*t;if(!(r<a)){if(r>a)break;for(let A=0;A<l.length;A++)if(l[A]+i.length*e!=s[A])continue A;i.push(o)}}i.length>1&&(i.forEach((A=>A[0]=-1)),n.push([g,i.length,l]))}return{linear:n,nonlinear:A.filter((A=>A[0]>=0))}}function H(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function Y(A){return A<26?97+A:22+A}function b(A,t){let e=A-t;return e<=0?1:e>=26?26:e}function G(A,t,e){A=Math.floor(A/(e?700:2)),A+=Math.floor(A/t);let n=0;for(;A>455;)A=Math.floor(A/35),n+=36;return n+Math.floor(36*A/(A+38))}const U=new Set(D("-.0123456789abcdefghijklmnopqrstuvwxyz"));function L(A){let t=0;return A.split(".").map(((A,e)=>{if(e>0&&t++,!A)return"";let n=D(A),o=function(A){if(!Array.isArray(A)||!A.every((A=>Number.isSafeInteger(A)&&A>=0&&A<=1114111)))throw new TypeError("expected array of Unicode codepoints");let t=A.filter((A=>A<128)),e=t.length;if(e==A.length)return A;e&&t.push(45);let n=128,o=72,r=0,g=e;for(;g<A.length;){let l=A.reduce(((A,t)=>t>=n&&t<A?t:A),1114111);r+=(l-n)*(g+1);for(let n of A)if(n<l)r++;else if(n==l){let A=r;for(let e=36;;e+=36){let n=b(e,o),r=A-n;if(r<0)break;let g=36-n;t.push(Y(n+r%g)),A=Math.floor(r/g)}t.push(Y(A)),o=G(r,g+1,g==e),r=0,g++}r++,n=l+1}return t}(n);try{for(let A of o)if(!U.has(A))throw new Error(`invalid ASCII: "${x(String.fromCodePoint(A))}"`);if(t+=o.length,o===n){if(A.startsWith("xn--"))throw new Error("punycode literal");if("--"===A.slice(2,4))throw Error("invalid label extension");if(A.startsWith("-"))throw Error("leading hyphen");if(A.endsWith("-"))throw Error("trailing hyphen")}else t+=4,A="xn--"+String.fromCodePoint(...o);if(A.length>63)throw new Error("too long")}catch(t){throw new Error(`Invalid label "${x(A)}": ${t.message}`)}if(t>253)throw new Error("Name too long");return A})).join(".")}function O(A){return m(String.fromCodePoint(...A),(A=>8204==A?'<span class="mod zwj">ZWNJ</span>':8205==A?'<span class="mod zwj">ZWJ</span>':`<code>${Q(A)}</code>`))}function S(A){return`Hex: 0x${A.map(Q).join(" ")}\nDec: ${A.join(" ")}`}function N(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="🡆",A}function T(A,t){let e=document.createElement("div");return e.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"===A.type?A.tokens:A))),e.append(...A.flatMap((A=>{let e;if("emoji"===A.type){let n=t?A.input:A.cps;e=document.createElement("a"),e.href=`https://emojipedia.org/${String.fromCodePoint(...A.emoji)}`,e.classList.add("glyph"),e.append(...n.map(((A,t)=>{let e=document.createElement("span");if(8205==A)e.classList.add("mod","zwj"),e.innerHTML="ZWJ";else if(65039==A)e.classList.add("mod","dropped","style"),e.innerHTML="FE0F";else if(8419==A)e.classList.add("mod","keycap"),e.innerHTML="Keycap";else if(A>=917536&&A<=917631){A-=917504;let t=String.fromCodePoint(A);127===A?(e.classList.add("mod"),e.innerHTML="TagEnd"):(y(t)?e.innerHTML=t:(e=document.createElement("code"),e.innerHTML=Q(A)),e.classList.add("mod","tag"))}else e.classList.add("emoji"),e.innerHTML=String.fromCodePoint(A);return e})))}else if("nfc"===A.type){e=document.createElement("div"),e.classList.add("nfc");let t=T(A.tokens,!1);t.classList.add("before");let n=document.createElement("div");n.classList.add("valid"),n.innerHTML=O(A.cps),n.title=S(A.cps),e.append(t,N(),n)}else if(e=document.createElement("div"),"valid"===A.type)e.classList.add("valid"),e.innerHTML=O(A.cps),e.title=S(A.cps);else if("mapped"===A.type){e.classList.add("mapped");let n=document.createElement("span");n.classList.add("before"),n.innerHTML=O([A.cp]),n.title=S([A.cp]),e.append(n),t||e.append(N(),...A.cps.map((A=>{let t=document.createElement("span");return t.innerHTML=O([A]),t.title=S([A]),t})))}else if("ignored"===A.type)e=document.createElement("code"),e.innerHTML=Q(A.cp),e.title=S([A.cp]),e.classList.add("ignored");else if("disallowed"===A.type)e.classList.add("disallowed"),e.innerHTML=O([A.cp]),e.title=S([A.cp]);else{if("stop"!==A.type)throw new TypeError(`unknown token type: ${A.type}`);e.classList.add("stop"),e.innerHTML="."}return e}))),e}function v(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #f66;\t\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .glyph {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 0.5rem;\n\t\tbackground: #cff;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tbackground: #333;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .mod.tag {\n\t\tbackground: #33f;\n\t}\n\t.tokens .mod.dropped {\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #fa0;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens code {\n\t\tfont-size: 90%;\n\t\tpadding: 2px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t\tbackground: rgba(0, 0, 0, .3);\n\t\talign-self: center;\n\t}",document.body.append(A)}export{H as compare_arrays,L as dns_from_normalized_ens,T as dom_from_tokens,d as ens_normalize,f as ens_tokenize,m as escape_for_html,x as escape_unicode,D as explode_cp,F as group_by,Q as hex_cp,y as is_printable_ascii,I as quote_cp,k as split_between,K as split_linear,v as use_default_style};
