function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let l=e(),i=t;t+=l;let s=0,c=0;function w(){return 0==s&&(c=c<<8|A[t++],s=8),c>>--s&1}const p=2**31,a=p>>>1,C=p-1;let B=0;for(let A=0;A<31;A++)B=B<<1|w();let f=[],Q=0,d=p;for(;;){let A=Math.floor(((B-Q+1)*o-1)/d),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;f.push(t);let l=Q+Math.floor(d*r[t]/o),i=Q+Math.floor(d*r[t+1]/o)-1;for(;0==((l^i)&a);)B=B<<1&C|w(),l=l<<1&C,i=i<<1&C|1;for(;l&~i&536870912;)B=B&a|B<<1&C>>>1|w(),l=l<<1^a,i=(i^a)<<1|a|1;Q=l,d=1+i-l}let u=n-4;return f.map((t=>{switch(t-u){case 3:return u+65792+(A[i++]<<16|A[i++]<<8|A[i++]);case 2:return u+256+(A[i++]<<8|A[i++]);case 1:return u+A[i++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let o=0,r=0,l=0,i=0;o<e;o++)i=i<<6|t[A.charCodeAt(o)],l+=6,l>=8&&(n[r++]=i>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let o=0,r=0;o<A;o++)n[o]=r+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),o=A();if(!o)break;t+=n;for(let A=0;A<o;A++)e.push(t+A);t+=o+1}return e}function o(A){return l((()=>{let t=n(A);if(t.length)return t}))}function r(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(s(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(c(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function i(A,t,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)e(A,n).forEach(((A,t)=>o[t].push(A)));return o}function s(A,t){let e=1+t(),n=t(),o=l(t);return i(o.length,1+A,t).flatMap(((A,t)=>{let[r,...l]=A;return Array(o[t]).fill().map(((A,t)=>{let o=t*n;return[r+t*e,l.map((A=>A+o))]}))}))}function c(A,t){return i(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var w=A("");const p=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function a(A){return A.toString(16).toUpperCase().padStart(2,"0")}function C(A){return`{${a(A)}}`}function B(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function f(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function Q(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function d(A,t=Math.random){return A[t()*A.length|0]}function u(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],o=Math.floor(n+e()*(A.length-n));A[n]=A[o],A[o]=t}A=A.slice(0,t)}return A}function g(A,t){let e=[];for(let n of t){let{name:t,norm:o,error:r}=n;"string"!=typeof o&&(o=t);try{let l=A(t);r?e.push({type:"expected error",result:l,...n}):l!=o&&e.push({type:"wrong norm",result:l,...n})}catch(A){r||e.push({type:"unexpected error",result:A.message,...n})}}return e}var E=A("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");function D(A){return A>>24&255}function h(A){return 16777215&A}const M=new Map(o(E).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),k=new Set(n(E)),m=new Map,I=new Map;for(let[A,t]of r(E)){if(!k.has(A)&&2==t.length){let[e,n]=t,o=I.get(e);o||(o=new Map,I.set(e,o)),o.set(n,A)}m.set(A,t.reverse())}const N=44032;function U(A){return A>=N&&A<55204}function J(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return N+588*(A-4352)+28*(t-4449);if(U(A)&&t>4519&&t<4547&&(A-N)%28==0)return A+(t-4519);{let e=I.get(A);return e&&(e=e.get(t),e)?e:-1}}function L(A){let t=[],e=[],n=!1;function o(A){let e=M.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(U(n)){let A=n-N,t=A%588/28|0,e=A%28;o(4352+(A/588|0)),o(4449+t),e>0&&o(4519+e)}else{let A=m.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=D(t[0]);for(let e=1;e<t.length;e++){let n=D(t[e]);if(0==n||A<=n){A=n;continue}let o=e-1;for(;;){let e=t[o+1];if(t[o+1]=t[o],t[o]=e,!o)break;if(A=D(t[--o]),A<=n)break}A=D(t[e])}}return t}function T(A){return L(A).map(h)}function x(A){return function(A){let t=[],e=[],n=-1,o=0;for(let r of A){let A=D(r),l=h(r);if(-1==n)0==A?n=l:t.push(l);else if(o>0&&o>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),o=A;else{let r=J(n,l);r>=0?n=r:0==o&&0==A?(t.push(n),n=l):(e.push(l),o=A)}}return n>=0&&t.push(n,...e),t}(L(A))}function V(){return new Set(n(w))}const j=new Map(r(w)),b=V(),P=V(),F=V(),O=V(),R=o(w);function S(){return new Set([n(w).map((A=>R[A])),n(w)].flat(2))}const K=w(),G=l((A=>{let t=l(w).map((A=>A+96));if(t.length){let e=A>=K;t[0]-=32,t=f(t),e&&(t=`Restricted[${t}]`);let n=S(),o=S(),r=[...n,...o].sort(((A,t)=>A-t));return{N:t,P:n,M:w()-1,R:e,V:new Set(r)}}})),y=V(),H=new Map;[...y,...V()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let n=w(),o=e[t]=n?e[t-n]:{V:[],M:new Map};o.V.push(A),y.has(A)||H.set(A,o)}));for(let{V:A,M:t}of new Set(H.values())){let e=[];for(let t of A){let A=G.filter((A=>A.V.has(t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),A.forEach((A=>n.G.add(A)))}let n=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:o}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of o)t.set(A,e)}}let z=new Set,Y=new Set;for(let A of G)for(let t of A.V)(z.has(t)?Y:z).add(t);for(let A of z)H.has(A)||Y.has(A)||H.set(A,1);const W=new Set([...z,...T(z)]),Z=n(w),X=function A(t){let e=l((()=>{let t=n(w).map((A=>Z[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=w(),r=o%3;o=o/3|0;let i=1&o;return o>>=1,{B:e,V:r,F:i,S:1&o,C:2&o,Q:new Set(t)}}([]);class v extends Array{get is_emoji(){return!0}}function q(A,t=C){let e=[];AA(A[0])&&e.push("◌");let n=0,o=A.length;for(let r=0;r<o;r++){let o=A[r];tA(o)&&(e.push(f(A.slice(n,r))),e.push(t(o)),n=r+1)}return e.push(f(A.slice(n,o))),e.join("")}function $(A){return(tA(A)?"":`"${q([A])}" `)+C(A)}function _(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function AA(A){return P.has(A)}function tA(A){return F.has(A)}function eA(A,t=x){return A.split(".").map((A=>f(wA(B(A),t).flatMap((A=>A.is_emoji?pA(A):A))))).join(".")}function nA(A){return lA(rA(A))}function oA(A){let t=rA(A,!0);for(let{type:A,output:e,error:n}of t)if(!n&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return lA(t)}function rA(A,t){let e=0;return A.split(".").map((A=>{let n,o=B(A),r={input:o,offset:e};e+=o.length+1;try{let A,e=r.tokens=wA(o,x),l=e.length;if(l){let o=e[0],i=l>1||o.is_emoji;if(!i&&o.every((A=>A<128)))n=o,_(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(i&&(r.emoji=!0,o=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?pA(A):A)),_(n),o.length){if(P.has(n[0]))throw cA("leading combining mark");for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&P.has(t[0]))throw cA(`emoji + combining mark: "${f(e[A-1])} + ${q([t[0]])}"`)}!function(A){let t=A[0],e=p.get(t);if(e)throw cA(`leading ${e}`);let n=A.length,o=-1;for(let r=1;r<n;r++){t=A[r];let n=p.get(t);if(n){if(o==r)throw cA(`${e} + ${n}`);o=r+1,e=n}}if(o==n)throw cA(`trailing ${e}`)}(n);let t=[...new Set(o)],[r]=function(A){let t=G;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===G?iA(e):sA(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:n}=A;for(let n of t)if(!e.has(n))throw sA(A,n);if(n>=0)for(let e=1,o=T(t).length;e<o;e++)if(P.has(t[e])){let r=e+1;for(;r<o&&P.has(t[r]);)r++;if(r-e>n)throw new Error(`too many combining marks: ${A.N} "${f(t.slice(e-1,r))}" (${r-e}/${n})`);e=r}}(r,o),function(A,t){let e,n=[];for(let A of t){let t=H.get(A);if(1===t)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):[...n],!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(r,t),A=r.N}else A="Emoji"}else n=[],A="None";r.type=A}catch(A){r.error=A}return r.output=n,r}))}function lA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${q(t)}": ${n}`)}return f(n)})).join(".")}function iA(A){return new Error(`disallowed character: ${$(A)}`)}function sA(A,t){let e=$(t),n=G.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function cA(A){return new Error(`illegal placement: ${A}`)}function wA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let o=aA(A);if(o)n.length&&(e.push(t(n)),n=[]),e.push(o);else{let t=A.pop();if(W.has(t))n.push(t);else{let A=j.get(t);if(A)n.push(...A);else if(!b.has(t))throw iA(t)}}}return n.length&&e.push(t(n)),e}function pA(A){return A.filter((A=>65039!=A))}function aA(A,t){let e,n,o=X,r=[],l=A.length;for(t&&(t.length=0);l;){let i=A[--l];if(o=o.B.find((A=>A.Q.has(i))),!o)break;if(o.S)n=i;else if(o.C&&i===n)break;r.push(i),o.F&&(r.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(e=CA(r,o),t&&t.push(...A.slice(l).reverse()),A.length=l)}return e}function CA(A,t){let e=v.from(A);return 2==t.V&&e.splice(1,1),e}function BA(){let A=[];return function t(e,n,o){if(e.S)o=n[n.length-1];else if(e.C&&o===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(CA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],o)}(X,[]),A.sort(Q)}function fA(A,{nf:t=!0}={}){let e=B(A).reverse(),n=[],o=[];for(;e.length;){let A=aA(e,n);if(A)o.push({type:"emoji",emoji:A,input:n.slice(),cps:pA(A)});else{let A=e.pop();if(46==A)o.push({type:"stop",cp:A});else if(W.has(A))o.push({type:"valid",cps:[A]});else if(b.has(A))o.push({type:"ignored",cp:A});else{let t=j.get(A);t?o.push({type:"mapped",cp:A,cps:t.slice()}):o.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<o.length;A++){let e=o[A];if(QA(e.type))if(dA(e.cps)){let e=A+1;for(let A=e;A<o.length;A++){let{type:t,cps:n}=o[A];if(QA(t)){if(!dA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=o.slice(t,e),r=n.flatMap((A=>QA(A.type)?A.cps:[])),l=x(r);Q(l,r)?(o.splice(t,e-t,{type:"nfc",input:r,cps:l,tokens0:uA(n),tokens:fA(f(l),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return uA(o)}function QA(A){return"valid"==A||"mapped"==A}function dA(A){return A.some((A=>O.has(A)))}function uA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function gA(A){return A.map(a).join(" ")}function EA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function DA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&tA(A)?(e.classList.add("code"),e.innerText=a(A)):e.innerText=q([A]),e}function hA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function MA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:o="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,i)=>{let s;switch(l.type){case"emoji":{s=document.createElement(o?"a":"span"),o&&(s.href=o.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?s.append(...A.map((A=>DA(A,!0)))):s.innerText=String.fromCodePoint(...l.emoji),s.title=hA({Type:"Emoji",Hex:gA(A),Beautified:gA(l.emoji)},r(l.type,A));break}case"nfc":if(s=document.createElement("div"),t)s.innerText=q(l.input),s.title=hA({Type:"NFC (Unnormalized)",Hex:gA(l.input)},r(l.type,l.input));else{let A=MA(l.tokens0,{components:n,emoji_url:o,extra:r});l.tokens0.every((A=>"valid"===A.type))&&(A.querySelector(".valid").innerHTML=l.input.map((A=>q([A]))).join("<span>+</span>")),A.classList.add("before"),A.title=hA({Type:"NFC (Unnormalized)",Hex:gA(l.input)},r(l.type,l.input));let t=MA(l.tokens,{components:n,emoji_url:o,extra:r});t.title=hA({Type:"NFC (Normalized)",Hex:gA(l.cps)},r(l.type,l.cps)),s.append(A,EA(),t)}break;case"valid":{s=document.createElement("span");let t=q(l.cps);e&&(1==A.length||i===A.length-1&&"stop"===A[i-1].type)&&/[a-z]/.test(t)&&s.classList.add(t),s.innerText=t,s.title=hA({Type:"Valid",Hex:gA(l.cps)},r(l.type,l.cps));break}case"mapped":{s=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=q([l.cp]),A.title=hA({Type:"Mapped (Match)",Hex:a(l.cp)},r(l.type,[l.cp])),s.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>q([A]))).join("​"),A.title=hA({Type:"Mapped (Replacement)",Hex:gA(l.cps)},r(l.type,l.cps)),s.append(EA(),A)}break}case"stop":case"ignored":case"disallowed":s=DA(l.cp),s.title=hA({Type:l.type,Hex:a(l.cp)},r(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return s.classList.add(l.type),s}))),l}function kA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\tborder-color: #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}\n\t.tokens .nfc .before .valid span {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}",document.body.append(A)}export{Q as compare_arrays,MA as dom_from_tokens,oA as ens_beautify,BA as ens_emoji,nA as ens_normalize,eA as ens_normalize_fragment,rA as ens_split,fA as ens_tokenize,B as explode_cp,a as hex_cp,AA as is_combining_mark,x as nfc,T as nfd,C as quote_cp,d as random_choice,u as random_sample,g as run_tests,q as safe_str_from_cps,tA as should_escape,f as str_from_cps,kA as use_default_style};
