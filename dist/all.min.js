function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let l=e(),i=t;t+=l;let c=0,s=0;function w(){return 0==c&&(s=s<<8|A[t++],c=8),s>>--c&1}const p=2**31,a=p>>>1,C=p-1;let g=0;for(let A=0;A<31;A++)g=g<<1|w();let f=[],Q=0,B=p;for(;;){let A=Math.floor(((g-Q+1)*o-1)/B),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;f.push(t);let l=Q+Math.floor(B*r[t]/o),i=Q+Math.floor(B*r[t+1]/o)-1;for(;0==((l^i)&a);)g=g<<1&C|w(),l=l<<1&C,i=i<<1&C|1;for(;l&~i&536870912;)g=g&a|g<<1&C>>>1|w(),l=l<<1^a,i=(i^a)<<1|a|1;Q=l,B=1+i-l}let u=n-4;return f.map((t=>{switch(t-u){case 3:return u+65792+(A[i++]<<16|A[i++]<<8|A[i++]);case 2:return u+256+(A[i++]<<8|A[i++]);case 1:return u+A[i++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let o=0,r=0,l=0,i=0;o<e;o++)i=i<<6|t[A.charCodeAt(o)],l+=6,l>=8&&(n[r++]=i>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let o=0,r=0;o<A;o++)n[o]=r+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),o=A();if(!o)break;t+=n;for(let A=0;A<o;A++)e.push(t+A);t+=o+1}return e}function o(A){return l((()=>{let t=n(A);if(t.length)return t}))}function r(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(c(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(s(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function i(A,t,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)e(A,n).forEach(((A,t)=>o[t].push(A)));return o}function c(A,t){let e=1+t(),n=t(),o=l(t);return i(o.length,1+A,t).flatMap(((A,t)=>{let[r,...l]=A;return Array(o[t]).fill().map(((A,t)=>{let o=t*n;return[r+t*e,l.map((A=>A+o))]}))}))}function s(A,t){return i(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var w=A("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");const p=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function a(A){return A.toString(16).toUpperCase().padStart(2,"0")}function C(A){return`{${a(A)}}`}function g(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function f(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function Q(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function B(A,t=Math.random){return A[t()*A.length|0]}function u(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],o=Math.floor(n+e()*(A.length-n));A[n]=A[o],A[o]=t}A=A.slice(0,t)}return A}function E(A,t){let e=[];for(let n of t){let{name:t,norm:o,error:r}=n;"string"!=typeof o&&(o=t);try{let l=A(t);r?e.push({type:"expected error",result:l,...n}):l!=o&&e.push({type:"wrong norm",result:l,...n})}catch(A){r||e.push({type:"unexpected error",result:A.message,...n})}}return e}var M=A("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");function d(A){return A>>24&255}function D(A){return 16777215&A}const k=new Map(o(M).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),h=new Set(n(M)),U=new Map,J=new Map;for(let[A,t]of r(M)){if(!h.has(A)&&2==t.length){let[e,n]=t,o=J.get(e);o||(o=new Map,J.set(e,o)),o.set(n,A)}U.set(A,t.reverse())}const m=44032;function x(A){return A>=m&&A<55204}function N(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return m+588*(A-4352)+28*(t-4449);if(x(A)&&t>4519&&t<4547&&(A-m)%28==0)return A+(t-4519);{let e=J.get(A);return e&&(e=e.get(t),e)?e:-1}}function S(A){let t=[],e=[],n=!1;function o(A){let e=k.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(x(n)){let A=n-m,t=A%588/28|0,e=A%28;o(4352+(A/588|0)),o(4449+t),e>0&&o(4519+e)}else{let A=U.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=d(t[0]);for(let e=1;e<t.length;e++){let n=d(t[e]);if(0==n||A<=n){A=n;continue}let o=e-1;for(;;){let e=t[o+1];if(t[o+1]=t[o],t[o]=e,!o)break;if(A=d(t[--o]),A<=n)break}A=d(t[e])}}return t}function K(A){return S(A).map(D)}function I(A){return function(A){let t=[],e=[],n=-1,o=0;for(let r of A){let A=d(r),l=D(r);if(-1==n)0==A?n=l:t.push(l);else if(o>0&&o>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),o=A;else{let r=N(n,l);r>=0?n=r:0==o&&0==A?(t.push(n),n=l):(e.push(l),o=A)}}return n>=0&&t.push(n,...e),t}(S(A))}function F(){return new Set(n(w))}const T=new Map(r(w)),V=F(),b=F(),H=F(),L=F(),P=o(w);function y(){return new Set([n(w).map((A=>P[A])),n(w)].flat(2))}const G=w(),X=l((A=>{let t=l(w).map((A=>A+96));if(t.length){let e=A>=G;t[0]-=32,t=f(t),e&&(t=`Restricted[${t}]`);let n=y(),o=y(),r=[...n,...o].sort(((A,t)=>A-t));return{N:t,P:n,M:w()-1,R:e,V:new Set(r)}}})),z=F(),j=new Map;[...z,...F()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let n=w(),o=e[t]=n?e[t-n]:{V:[],M:new Map};o.V.push(A),z.has(A)||j.set(A,o)}));for(let{V:A,M:t}of new Set(j.values())){let e=[];for(let t of A){let A=X.filter((A=>A.V.has(t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),A.forEach((A=>n.G.add(A)))}let n=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:o}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of o)t.set(A,e)}}let O=new Set,Y=new Set;for(let A of X)for(let t of A.V)(O.has(t)?Y:O).add(t);for(let A of O)j.has(A)||Y.has(A)||j.set(A,1);const v=new Set([...O,...K(O)]),R=n(w),Z=function A(t){let e=l((()=>{let t=n(w).map((A=>R[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=w(),r=o%3;o=o/3|0;let i=1&o;return o>>=1,{B:e,V:r,F:i,S:1&o,C:2&o,Q:new Set(t)}}([]);class W extends Array{get is_emoji(){return!0}}function q(A,t=C){let e=[];AA(A[0])&&e.push("◌");let n=0,o=A.length;for(let r=0;r<o;r++){let o=A[r];tA(o)&&(e.push(f(A.slice(n,r))),e.push(t(o)),n=r+1)}return e.push(f(A.slice(n,o))),e.join("")}function $(A){return(tA(A)?"":`"${q([A])}" `)+C(A)}function _(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function AA(A){return b.has(A)}function tA(A){return H.has(A)}function eA(A,t=I){return A.split(".").map((A=>f(wA(g(A),t).flatMap((A=>A.is_emoji?pA(A):A))))).join(".")}function nA(A){return lA(rA(A))}function oA(A){let t=rA(A,!0);for(let{type:A,output:e,error:n}of t)if(!n&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return lA(t)}function rA(A,t){let e=0;return A.split(".").map((A=>{let n,o=g(A),r={input:o,offset:e};e+=o.length+1;try{let A,e=r.tokens=wA(o,I),l=e.length;if(l){let o=e[0],i=l>1||o.is_emoji;if(!i&&o.every((A=>A<128)))n=o,_(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(i&&(r.emoji=!0,o=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?pA(A):A)),_(n),o.length){if(b.has(n[0]))throw sA("leading combining mark");for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&b.has(t[0]))throw sA(`emoji + combining mark: "${f(e[A-1])} + ${q([t[0]])}"`)}!function(A){let t=A[0],e=p.get(t);if(e)throw sA(`leading ${e}`);let n=A.length,o=-1;for(let r=1;r<n;r++){t=A[r];let n=p.get(t);if(n){if(o==r)throw sA(`${e} + ${n}`);o=r+1,e=n}}if(o==n)throw sA(`trailing ${e}`)}(n);let t=[...new Set(o)],[r]=function(A){let t=X;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===X?iA(e):cA(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:n}=A;for(let n of t)if(!e.has(n))throw cA(A,n);if(n>=0)for(let e=1,o=K(t).length;e<o;e++)if(b.has(t[e])){let r=e+1;for(;r<o&&b.has(t[r]);)r++;if(r-e>n)throw new Error(`too many combining marks: ${A.N} "${f(t.slice(e-1,r))}" (${r-e}/${n})`);e=r}}(r,o),function(A,t){let e,n=[];for(let A of t){let t=j.get(A);if(1===t)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):[...n],!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(r,t),A=r.N}else A="Emoji"}else n=[],A="None";r.type=A}catch(A){r.error=A}return r.output=n,r}))}function lA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${q(t)}": ${n}`)}return f(n)})).join(".")}function iA(A){return new Error(`disallowed character: ${$(A)}`)}function cA(A,t){let e=$(t),n=X.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function sA(A){return new Error(`illegal placement: ${A}`)}function wA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let o=aA(A);if(o)n.length&&(e.push(t(n)),n=[]),e.push(o);else{let t=A.pop();if(v.has(t))n.push(t);else{let A=T.get(t);if(A)n.push(...A);else if(!V.has(t))throw iA(t)}}}return n.length&&e.push(t(n)),e}function pA(A){return A.filter((A=>65039!=A))}function aA(A,t){let e,n,o=Z,r=[],l=A.length;for(t&&(t.length=0);l;){let i=A[--l];if(o=o.B.find((A=>A.Q.has(i))),!o)break;if(o.S)n=i;else if(o.C&&i===n)break;r.push(i),o.F&&(r.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(e=CA(r,o),t&&t.push(...A.slice(l).reverse()),A.length=l)}return e}function CA(A,t){let e=W.from(A);return 2==t.V&&e.splice(1,1),e}function gA(){let A=[];return function t(e,n,o){if(e.S)o=n[n.length-1];else if(e.C&&o===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(CA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],o)}(Z,[]),A.sort(Q)}function fA(A,{nf:t=!0}={}){let e=g(A).reverse(),n=[],o=[];for(;e.length;){let A=aA(e,n);if(A)o.push({type:"emoji",emoji:A,input:n.slice(),cps:pA(A)});else{let A=e.pop();if(46==A)o.push({type:"stop",cp:A});else if(v.has(A))o.push({type:"valid",cps:[A]});else if(V.has(A))o.push({type:"ignored",cp:A});else{let t=T.get(A);t?o.push({type:"mapped",cp:A,cps:t.slice()}):o.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<o.length;A++){let e=o[A];if(QA(e.type))if(BA(e.cps)){let e=A+1;for(let A=e;A<o.length;A++){let{type:t,cps:n}=o[A];if(QA(t)){if(!BA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=o.slice(t,e),r=n.flatMap((A=>QA(A.type)?A.cps:[])),l=I(r);Q(l,r)?(o.splice(t,e-t,{type:"nfc",input:r,cps:l,tokens0:uA(n),tokens:fA(f(l),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return uA(o)}function QA(A){return"valid"==A||"mapped"==A}function BA(A){return A.some((A=>L.has(A)))}function uA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function EA(A){return A.map(a).join(" ")}function MA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function dA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&tA(A)?(e.classList.add("code"),e.innerText=a(A)):e.innerText=q([A]),e}function DA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function kA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:o="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,i)=>{let c;switch(l.type){case"emoji":{c=document.createElement(o?"a":"span"),o&&(c.href=o.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?c.append(...A.map((A=>dA(A,!0)))):c.innerText=String.fromCodePoint(...l.emoji),c.title=DA({Type:"Emoji",Hex:EA(A),Beautified:EA(l.emoji)},r(l.type,A));break}case"nfc":if(c=document.createElement("div"),t)c.innerText=q(l.input),c.title=DA({Type:"NFC (Unnormalized)",Hex:EA(l.input)},r(l.type,l.input));else{let A=kA(l.tokens0,{components:n,emoji_url:o,extra:r});l.tokens0.every((A=>"valid"===A.type))&&(A.querySelector(".valid").innerHTML=l.input.map((A=>q([A]))).join("<span>+</span>")),A.classList.add("before"),A.title=DA({Type:"NFC (Unnormalized)",Hex:EA(l.input)},r(l.type,l.input));let t=kA(l.tokens,{components:n,emoji_url:o,extra:r});t.title=DA({Type:"NFC (Normalized)",Hex:EA(l.cps)},r(l.type,l.cps)),c.append(A,MA(),t)}break;case"valid":{c=document.createElement("span");let t=q(l.cps);e&&(1==A.length||i===A.length-1&&"stop"===A[i-1].type)&&/[a-z]/.test(t)&&c.classList.add(t),c.innerText=t,c.title=DA({Type:"Valid",Hex:EA(l.cps)},r(l.type,l.cps));break}case"mapped":{c=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=q([l.cp]),A.title=DA({Type:"Mapped (Match)",Hex:a(l.cp)},r(l.type,[l.cp])),c.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>q([A]))).join("​"),A.title=DA({Type:"Mapped (Replacement)",Hex:EA(l.cps)},r(l.type,l.cps)),c.append(MA(),A)}break}case"stop":case"ignored":case"disallowed":c=dA(l.cp),c.title=DA({Type:l.type,Hex:a(l.cp)},r(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return c.classList.add(l.type),c}))),l}function hA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\tborder-color: #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}\n\t.tokens .nfc .before .valid span {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}",document.body.append(A)}export{Q as compare_arrays,kA as dom_from_tokens,oA as ens_beautify,gA as ens_emoji,nA as ens_normalize,eA as ens_normalize_fragment,rA as ens_split,fA as ens_tokenize,g as explode_cp,a as hex_cp,AA as is_combining_mark,I as nfc,K as nfd,C as quote_cp,B as random_choice,u as random_sample,E as run_tests,q as safe_str_from_cps,tA as should_escape,f as str_from_cps,hA as use_default_style};
