function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let l=e(),s=t;t+=l;let i=0,g=0;function a(){return 0==i&&(g=g<<8|A[t++],i=8),g>>--i&1}const B=2**31,C=B>>>1,c=B-1;let f=0;for(let A=0;A<31;A++)f=f<<1|a();let p=[],w=0,Q=B;for(;;){let A=Math.floor(((f-w+1)*o-1)/Q),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;p.push(t);let l=w+Math.floor(Q*r[t]/o),s=w+Math.floor(Q*r[t+1]/o)-1;for(;0==((l^s)&C);)f=f<<1&c|a(),l=l<<1&c,s=s<<1&c|1;for(;l&~s&536870912;)f=f&C|f<<1&c>>>1|a(),l=l<<1^C,s=(s^C)<<1|C|1;w=l,Q=1+s-l}let u=n-4;return p.map((t=>{switch(t-u){case 3:return u+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return u+256+(A[s++]<<8|A[s++]);case 1:return u+A[s++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let o=0,r=0,l=0,s=0;o<e;o++)s=s<<6|t[A.charCodeAt(o)],l+=6,l>=8&&(n[r++]=s>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let o=0,r=0;o<A;o++)n[o]=r+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),o=A();if(!o)break;t+=n;for(let A=0;A<o;A++)e.push(t+A);t+=o+1}return e}function o(A){return l((()=>{let t=n(A);if(t.length)return t}))}function r(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(i(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(g(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A();if(!e)break;t.push(e)}return t}function s(A,t,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)e(A,n).forEach(((A,t)=>o[t].push(A)));return o}function i(A,t){let e=1+t(),n=t(),o=l(t);return s(o.length,1+A,t).flatMap(((A,t)=>{let[r,...l]=A;return Array(o[t]).fill().map(((A,t)=>{let o=t*n;return[r+t*e,l.map((A=>A+o))]}))}))}function g(A,t){return s(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var a=A("");function B(A){return A.toString(16).toUpperCase().padStart(2,"0")}function C(A){return`{${B(A)}}`}function c(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function f(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function p(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function w(A,t=Math.random){return A[t()*A.length|0]}function Q(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],o=Math.floor(n+e()*(A.length-n));A[n]=A[o],A[o]=t}A=A.slice(0,t)}return A}function u(A,t){let e=[];for(let n of t){let{name:t,norm:o,error:r}=n;"string"!=typeof o&&(o=t);try{let l=A(t);r?e.push({type:"expected error",result:l,...n}):l!=o&&e.push({type:"wrong norm",result:l,...n})}catch(A){r||e.push({type:"unexpected error",result:A.message,...n})}}return e}var E=A("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");function d(A){return A>>24&255}function h(A){return 16777215&A}const D=new Map(o(E).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),I=new Set(n(E)),k=new Map,M=new Map;for(let[A,t]of r(E)){if(!I.has(A)&&2==t.length){let[e,n]=t,o=M.get(e);o||(o=new Map,M.set(e,o)),o.set(n,A)}k.set(A,t.reverse())}const F=44032;function m(A){return A>=F&&A<55204}function J(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return F+588*(A-4352)+28*(t-4449);if(m(A)&&t>4519&&t<4547&&(A-F)%28==0)return A+(t-4519);{let e=M.get(A);return e&&(e=e.get(t),e)?e:-1}}function L(A){let t=[],e=[],n=!1;function o(A){let e=D.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(m(n)){let A=n-F,t=A%588/28|0,e=A%28;o(4352+(A/588|0)),o(4449+t),e>0&&o(4519+e)}else{let A=k.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=d(t[0]);for(let e=1;e<t.length;e++){let n=d(t[e]);if(0==n||A<=n){A=n;continue}let o=e-1;for(;;){let e=t[o+1];if(t[o+1]=t[o],t[o]=e,!o)break;if(A=d(t[--o]),A<=n)break}A=d(t[e])}}return t}function U(A){return L(A).map(h)}function S(A){return function(A){let t=[],e=[],n=-1,o=0;for(let r of A){let A=d(r),l=h(r);if(-1==n)0==A?n=l:t.push(l);else if(o>0&&o>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),o=A;else{let r=J(n,l);r>=0?n=r:0==o&&0==A?(t.push(n),n=l):(e.push(l),o=A)}}return n>=0&&t.push(n,...e),t}(L(A))}function x(){return new Set(n(a))}function K(A){return f(e(A,a))}const P=new Map(r(a)),N=x(),H=new Map(l((()=>{let A=a();if(A)return[A,K(a())]}))),R=x(),T=x(),y=x(),b=o(a);function G(){return new Set([n(a).map((A=>b[A])),n(a)].flat(2))}const O=l((()=>{let A=a();if(A){let t=1==A;A=t?"Restricted":K(A-1);let e=G(),n=G(),o=[...e,...n].sort(((A,t)=>A-t)),r=a()-1;return r<0&&(r=new Map(l((()=>{let A=a();if(A)return[o[A-1],l((()=>{let A=l(a);if(A.length)return A.map((A=>A-1))}))]})))),{N:A,P:e,M:r,R:t,V:new Set(o)}}})),j=new Map(l((()=>{let A=n(a);if(A.length){let t=x();return A.map((A=>[A,t]))}})).flat()),Y=n(a),V=new Set(n(a).map((A=>Y[A]))),X=function A(t){let e=l((()=>{let t=n(a).map((A=>Y[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=a(),r=o%3;o=o/3|0;let s=1&o;return o>>=1,{B:e,V:r,F:s,S:1&o,C:2&o,Q:new Set(t)}}([]),Z=new Set,q=new Set;for(let A of O)for(let t of A.V)Z.has(t)?q.add(t):Z.add(t);for(let A of Z)for(let t of U([A]))Z.add(t);const z=new Map(O.flatMap((A=>[...A.V].filter((A=>!q.has(A))).map((t=>[t,A]))))),W=f([46]);class v extends Array{get is_emoji(){return!0}}function $(A,t=C){let e=[];AA(A[0])&&e.push("◌");let n=0,o=A.length;for(let r=0;r<o;r++){let o=A[r];tA(o)&&(e.push(f(A.slice(n,r))),e.push(t(o)),n=r+1)}return e.push(f(A.slice(n,o))),e.join("")}function _(A){return(tA(A)?"":`"${$([A])}" `)+C(A)}function AA(A){return R.has(A)}function tA(A){return T.has(A)}function eA(A,t=S){return A.split(W).map((A=>f(iA(c(A),t).flatMap((A=>A.is_emoji?gA(A):A))))).join(W)}function nA(A){return lA(rA(A))}function oA(A){let t=rA(A,!0);for(let{script:A,output:e,error:n}of t)if("Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return lA(t)}function rA(A,t){let e=0;return A.split(W).map((A=>{let n,o=c(A),r={input:o,offset:e};e+=o.length+1;try{let A,e=r.tokens=iA(o,S),l=e.length;if(l){let o=e[0],s=l>1||o.is_emoji;if(!s&&o.every((A=>A<128)))n=o,function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(s&&(r.emoji=!0,o=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?gA(A):A)),o.length){!function(A){if(R.has(A[0]))throw new Error("leading combining mark")}(n),function(A){let t=A[0],e=H.get(t);if(e)throw new Error(`leading ${e}`);let n=-1;for(let o=1;o<A.length;o++){t=A[o];let r=H.get(t);if(r){if(n==o)throw new Error(`adjacent ${e} + ${r}`);n=o+1,e=r}}if(n==A.length)throw new Error(`trailing ${e}`)}(n);for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&R.has(t[0]))throw new Error(`emoji + combining mark: "${f(e[A-1])} + ${$([t[0]])}"`)}A=function(A){let t,e,n=[],o=[];for(let e of A){let r=j.get(e);if(r)if(o.push(e),t){if(t=t.filter((A=>r.has(A))),!t.length)break}else t=[...r];else{let t=z.get(e);if(t)return sA(t,A),t;n.push(e)}}if(t)for(let A of t){let t=O[A];if(n.every((A=>t.V.has(A)))&&!o.every((A=>t.V.has(A))))throw new Error("whole-label confusable")}for(let t of O)if(A.some((A=>t.P.has(A))))try{return sA(t,A),t}catch(A){e||(e=A)}if(e)throw e;throw iA(A,(A=>A)),new Error("no match")}(o).N}else A="Emoji";!function(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}(n)}else n=[],A="None";r.type=A}catch(A){r.error=A}return r.output=n,r}))}function lA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${$(t)}": ${n}`)}return f(n)})).join(W)}function sA(A,t){let{V:e,M:n}=A,o=n instanceof Map;for(let r=0,l=t.length;r<l;){let s=t[r++],i=o&&n.get(s);if(i){let A=r;for(;A<l&&R.has(t[A]);)A++;let e=t.slice(r,A);if(!i.find((A=>!p(A,e))))throw new Error(`disallowed combining mark sequence: "${$([s,...e])}"`);r=A}else if(!e.has(s)){let e=_(s);for(let n of t){let t=z.get(n);if(t&&t!==A){t.R||(e=`${e} is ${t.N}`);break}}throw new Error(`disallowed ${A.N} character: ${e}`)}}if(!o)for(let A=1,e=U(t).length;A<e;A++)if(R.has(t[A])){let o=A+1;for(;o<e&&R.has(t[o]);)o++;if(o-A>n)throw new Error(`too many combining marks: "${f(t.slice(A-1,o))}" (${o-A}/${n})`);A=o}}function iA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let o=aA(A);if(o)n.length&&(e.push(t(n)),n=[]),e.push(o);else{let t=A.pop();if(Z.has(t))n.push(t);else{let A=P.get(t);if(A)n.push(...A);else if(!N.has(t))throw new Error(`disallowed character: ${_(t)}`)}}}return n.length&&e.push(t(n)),e}function gA(A){return A.filter((A=>65039!=A))}function aA(A,t){let e,n,o=X,r=[],l=A.length;for(t&&(t.length=0);l;){let s=A[--l];if(o=o.B.find((A=>A.Q.has(s))),!o)break;if(o.S)n=s;else if(o.C&&s===n)break;r.push(s),o.F&&(r.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(e=BA(r,o),t&&t.push(...A.slice(l).reverse()),A.length=l)}if(!e){let n=A[A.length-1];V.has(n)&&(t&&t.push(n),e=v.of(n),A.pop())}return e}function BA(A,t){let e=v.from(A);return 2==t.V&&e.splice(1,1),e}function CA(){let A=[...V].map((A=>[A]));return function t(e,n,o){if(e.S)o=n[n.length-1];else if(e.C&&o===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(BA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],o)}(X,[]),A.sort(p)}function cA(A,{nf:t=!0}={}){let e=c(A).reverse(),n=[],o=[];for(;e.length;){let A=aA(e,n);if(A)o.push({type:"emoji",emoji:A,input:n.slice(),cps:gA(A)});else{let A=e.pop();if(46==A)o.push({type:"stop",cp:A});else if(Z.has(A))o.push({type:"valid",cps:[A]});else if(N.has(A))o.push({type:"ignored",cp:A});else{let t=P.get(A);t?o.push({type:"mapped",cp:A,cps:t.slice()}):o.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<o.length;A++){let e=o[A];if(fA(e.type))if(pA(e.cps)){let e=A+1;for(let A=e;A<o.length;A++){let{type:t,cps:n}=o[A];if(fA(t)){if(!pA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=o.slice(t,e),r=n.flatMap((A=>fA(A.type)?A.cps:[])),l=S(r);p(l,r)?(o.splice(t,e-t,{type:"nfc",input:r,cps:l,tokens:wA(n)}),A=t):A=e-1,t=-1}else t=A;else"emoji"==e.type&&(t=-1)}return wA(o)}function fA(A){return"valid"==A||"mapped"==A}function pA(A){return A.some((A=>y.has(A)))}function wA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function QA(A){return A.map(B).join(" ")}function uA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function EA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&tA(A)?(e.classList.add("code"),e.innerText=B(A)):e.innerText=$([A]),e}function dA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function hA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:o="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,s)=>{let i;switch(l.type){case"emoji":{i=document.createElement(o?"a":"span"),o&&(i.href=o.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?i.append(...A.map((A=>EA(A,!0)))):i.innerText=String.fromCodePoint(...l.emoji),i.title=dA({Type:"Emoji",Hex:QA(A),Beautified:QA(l.emoji)},r(l.type,A));break}case"nfc":if(i=document.createElement("div"),t)i.innerText=$(l.input),i.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));else{let A=hA(l.tokens,{before:t,components:n,emoji_url:o,extra:r});A.classList.add("before"),A.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));let e=document.createElement("div");e.classList.add("valid"),e.innerText=$(l.cps),e.title=dA({Type:"NFC (Normalized)",Hex:QA(l.cps)},r(l.type,l.cps)),i.append(A,uA(),e)}break;case"valid":{i=document.createElement("span");let t=$(l.cps);e&&(1==A.length||s===A.length-1&&"stop"===A[s-1].type)&&i.classList.add(t),i.innerText=t,i.title=dA({Type:"Valid",Hex:QA(l.cps)},r(l.type,l.cps));break}case"mapped":{i=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=$([l.cp]),A.title=dA({Type:"Mapped (Match)",Hex:B(l.cp)},r(l.type,[l.cp])),i.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>$([A]))).join("​"),A.title=dA({Type:"Mapped (Replacement)",Hex:QA(l.cps)},r(l.type,l.cps)),i.append(uA(),A)}break}case"stop":case"ignored":case"disallowed":i=EA(l.cp),i.title=dA({Type:l.type,Hex:B(l.cp)},r(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return i.classList.add(l.type),i}))),l}function DA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tmargin: 0 2px;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .nfc > .valid {\n\t\tbackground: none;\n\t\tborder: none;\n\t}",document.body.append(A)}export{p as compare_arrays,hA as dom_from_tokens,oA as ens_beautify,CA as ens_emoji,nA as ens_normalize,eA as ens_normalize_fragment,rA as ens_split,cA as ens_tokenize,c as explode_cp,B as hex_cp,AA as is_combining_mark,S as nfc,U as nfd,C as quote_cp,w as random_choice,Q as random_sample,u as run_tests,$ as safe_str_from_cps,tA as should_escape,f as str_from_cps,DA as use_default_style};
