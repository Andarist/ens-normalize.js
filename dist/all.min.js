function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),r=1,o=[0,1];for(let A=1;A<n;A++)o.push(r+=e());let l=e(),s=t;t+=l;let i=0,f=0;function w(){return 0==i&&(f=f<<8|A[t++],i=8),f>>--i&1}const c=2**31,a=c>>>1,d=c-1;let g=0;for(let A=0;A<31;A++)g=g<<1|w();let Q=[],p=0,B=c;for(;;){let A=Math.floor(((g-p+1)*r-1)/B),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<o[n]?e=n:t=n}if(0==t)break;Q.push(t);let l=p+Math.floor(B*o[t]/r),s=p+Math.floor(B*o[t+1]/r)-1;for(;0==((l^s)&a);)g=g<<1&d|w(),l=l<<1&d,s=s<<1&d|1;for(;l&~s&536870912;)g=g&a|g<<1&d>>>1|w(),l=l<<1^a,s=(s^a)<<1|a|1;p=l,B=1+s-l}let C=n-4;return Q.map((t=>{switch(t-C){case 3:return C+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return C+256+(A[s++]<<8|A[s++]);case 1:return C+A[s++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let r=0,o=0,l=0,s=0;r<e;r++)s=s<<6|t[A.charCodeAt(r)],l+=6,l>=8&&(n[o++]=s>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,t){let e=Array(A);for(let n=0,r=-1;n<A;n++)e[n]=r+=1+t();return e}function n(A,e){let n=Array(A);for(let r=0,o=0;r<A;r++)n[r]=o+=t(e());return n}function r(A,t){let n=e(A(),A),r=A(),o=e(r,A),l=function(A,t){let e=Array(A);for(let n=0;n<A;n++)e[n]=1+t();return e}(r,A);for(let A=0;A<r;A++)for(let t=0;t<l[A];t++)n.push(o[A]+t);return t?n.map((A=>t[A])):n}function o(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(i(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(f(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A();if(!e)break;t.push(e)}return t}function s(A,t,e){let r=Array(A).fill().map((()=>[]));for(let o=0;o<t;o++)n(A,e).forEach(((A,t)=>r[t].push(A)));return r}function i(A,t){let e=1+t(),n=t(),r=l(t);return s(r.length,1+A,t).flatMap(((A,t)=>{let[o,...l]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,l.map((A=>A+r))]}))}))}function f(A,t){return s(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var w=A("");function c(A){return A.toString(16).toUpperCase().padStart(2,"0")}function a(A){return`{${c(A)}}`}function d(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function g(A){return String.fromCodePoint(...A)}function Q(A,t=a){return A.replace(/(?:([\x00-\x20\x7F\xA0\s\u200C\u200D\u2800\u{E0020}-\u{E007F}])|([\x26\x3C\x3E]))/gu,((A,e,n)=>e?t(e.codePointAt(0)):`&#${n.codePointAt(0)};`))}function p(A){return A.replace(/[^\x21\x23-\x7A\x7C\x7E]/gu,(A=>a(A.codePointAt(0))))}function B(A){return/^[\x21-\x7E]+$/gu.test(A)}function C(A,t){let{length:e}=A,n=e-t.length;for(let r=0;0==n&&r<e;r++)n=A[r]-t[r];return n}function u(A,t=Math.random){return A[t()*A.length|0]}function E(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],r=Math.floor(n+e()*(A.length-n));A[n]=A[r],A[r]=t}A=A.slice(0,t)}return A}function h(A,t){let e=[];for(let n of t){let{name:t,norm:r,error:o}=n;"string"!=typeof r&&(r=t);try{let l=A(t);o?e.push({type:"expected error",result:l,...n}):l!=r&&e.push({type:"wrong norm",result:l,...n})}catch(A){o||e.push({type:"unexpected error",result:A.message,...n})}}return e}var D=A("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");function k(A){return A>>24&255}function M(A){return 16777215&A}const m=new Map(l((()=>{let A=r(D);if(A.length)return A})).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),F=new Set(r(D)),O=new Map,U=new Map;for(let[A,t]of o(D)){if(!F.has(A)&&2==t.length){let[e,n]=t,r=U.get(e);r||(r=new Map,U.set(e,r)),r.set(n,A)}O.set(A,t.reverse())}const L=44032;function x(A){return A>=L&&A<55204}function J(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return L+588*(A-4352)+28*(t-4449);if(x(A)&&t>4519&&t<4547&&(A-L)%28==0)return A+(t-4519);{let e=U.get(A);return e&&(e=e.get(t),e)?e:-1}}function I(A){let t=[],e=[],n=!1;function r(A){let e=m.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(x(n)){let A=n-L,t=A%588/28|0,e=A%28;r(4352+(A/588|0)),r(4449+t),e>0&&r(4519+e)}else{let A=O.get(n);A?e.push(...A):r(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=k(t[0]);for(let e=1;e<t.length;e++){let n=k(t[e]);if(0==n||A<=n){A=n;continue}let r=e-1;for(;;){let e=t[r+1];if(t[r+1]=t[r],t[r]=e,!r)break;if(A=k(t[--r]),A<=n)break}A=k(t[e])}}return t}function y(A){return I(A).map(M)}function b(A){return function(A){let t=[],e=[],n=-1,r=0;for(let o of A){let A=k(o),l=M(o);if(-1==n)0==A?n=l:t.push(l);else if(r>0&&r>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),r=A;else{let o=J(n,l);o>=0?n=o:0==r&&0==A?(t.push(n),n=l):(e.push(l),r=A)}}return n>=0&&t.push(n,...e),t}(I(A))}const R=r(w).sort(((A,t)=>A-t)),K=new Set(R),P=new Set(r(w)),j=new Map(o(w));function G(){return new Set(r(w,R))}const H=G(),N=G(),v=["Latin","Greek","Cyrillic"].map(((A,t)=>[A,G(),t?G():0])),S=l((()=>{let A=G();if(A.size)return A})),T=new Set(r(w)),Y=function(A){let t=r(A).sort(((A,t)=>A-t));return function e(){let n=[];for(;;){let o=r(A,t);if(0==o.length)break;n.push({set:new Set(o),node:e()})}n.sort(((A,t)=>t.set.size-A.set.size));let o=A(),l=o%3;o=o/3|0;let s=!!(1&o);return o>>=1,{branches:n,valid:l,fe0f:s,save:1==o,check:2==o}}()}(w),z=G();function W(A){let t=A.lastIndexOf(95);for(;t>0;)if(95!==A[--t])throw new Error("underscore only allowed at start")}function X(A){if(A.length>=4&&45===A[2]&&45===A[3]&&A.every((A=>A<128)))throw new Error("invalid label extension")}function V(A,t,e,n,r){let o=-1;if(A[0]===t){if(n)throw new Error(`leading ${e}`);o=0}for(;;){let n=A.indexOf(t,o+1);if(-1==n)break;if(o==n-1)throw new Error(`adjacent ${e}`);o=n}if(r&&o==A.length-1)throw new Error(`trailing ${e}`)}function Z(A){let t=0;for(;t=A.indexOf(183,t),-1!=t;){if(108!==A[t-1]||108!==A[t+1])throw new Error("ContextO: middle dot");t+=2}}function q(A){for(let t=0;t<v.length;t++){let[e,n,r]=v[t];if(A.some((A=>n.has(A)))){for(let n=t+1;n<v.length;n++){let[t,r]=v[n];if(A.some((A=>r.has(A))))throw new Error(`mixed-script confusable: ${e} + ${t}`)}if(r&&A.every((A=>!n.has(A)||r.has(A))))throw new Error(`whole-script confusable: ${e}`);break}}}function $(A){for(let t of S)if(A.some((A=>t.has(A)))){if(!A.every((A=>t.has(A)||65039==A)))throw new Error("excluded script cannot mix");break}}function _(A){for(let t=0,e=-1;t<A.length;t++)if(H.has(A[t])){if(0==t)throw new Error("leading combining mark");if(t==e)throw new Error(`adjacent combining marks "${g(A.slice(t-2,t+1))}"`);{let e=A[t-1];if(65039==e||N.has(e))throw new Error("isolate combining mark")}e=t+1}}function AA(A){for(let t of A.split(".")){if(!t)throw new Error("Empty label");try{let A=d(t);W(A),X(A),V(A,8217,"apostrophe",!0,!0),Z(A),q(A);let e=y(oA(t,(()=>[65039])));_(e),$(e)}catch(A){throw new Error(`Invalid label "${t}": ${A.message}`)}}return A}function tA(A,t=b){return g(t(oA(A,rA)))}function eA(A){return AA(tA(A))}function nA(A){return g(b(oA(A,(A=>A))))}function rA(A){return A.filter((A=>65039!=A))}function oA(A,t){let e=d(A).reverse(),n=[];for(;e.length;){let A=lA(e);if(A)n.push(...t(A));else{let A=e.pop();if(K.has(A))n.push(A);else{let t=j.get(A);if(t)n.push(...t);else if(!P.has(A))throw new Error(`Disallowed codepoint: 0x${c(A)}`)}}}return n}function lA(A,t){let e,n,r=Y,o=[],l=A.length;for(t&&(t.length=0);l;){let s=A[--l],i=r.branches.find((A=>A.set.has(s)));if(!i)break;if(r=i.node,r.save)n=s;else if(r.check&&s===n)break;o.push(s),r.fe0f&&(o.push(65039),l>0&&65039==A[l-1]&&l--),r.valid&&(e=sA(o,r),t&&t.push(...A.slice(l).reverse()),A.length=l)}if(!e){let n=A[A.length-1];T.has(n)&&(t&&t.push(n),e=[n],A.pop())}return e}function sA(A,t){let e=A.slice();return 2==t.valid&&e.splice(1,1),e}function iA(){let A=[...T].map((A=>[A]));return function t(e,n,r){if(e.save)r=n[n.length-1];else if(e.check&&r===n[n.length-1])return;e.fe0f&&n.push(65039),e.valid&&A.push(sA(n,e));for(let A of e.branches)for(let e of A.set)t(A.node,[...n,e],r)}(Y,[]),A}function fA(A){let t=d(A).reverse(),e=[],n=[];for(;t.length;){let A=lA(t,e);if(A)n.push({type:"emoji",emoji:A,input:e.slice(),cps:rA(A)});else{let A=t.pop();if(46===A)n.push({type:"stop"});else if(K.has(A))N.has(A)?n.push({type:"isolated",cp:A}):n.push({type:"valid",cps:[A]});else if(P.has(A))n.push({type:"ignored",cp:A});else{let t=j.get(A);t?n.push({type:"mapped",cp:A,cps:t.slice()}):n.push({type:"disallowed",cp:A})}}}for(let A=0,t=-1;A<n.length;A++){let e=n[A];if(wA(e.type))if(cA(e.cps)){let e=A+1;for(let A=e;A<n.length;A++){let{type:t,cps:r}=n[A];if(wA(t)){if(!cA(r))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let r=n.slice(t,e),o=r.flatMap((A=>wA(A.type)?A.cps:[])),l=b(o);g(o)===g(l)?A=e-1:(n.splice(t,e-t,{type:"nfc",input:o,cps:l,tokens:aA(r)}),A=t),t=-1}else t=A;else"emoji"===e.type&&(t=-1)}return aA(n)}function wA(A){return"valid"===A||"mapped"===A}function cA(A){return A.some((A=>z.has(A)))}function aA(A){for(let t=0;t<A.length;t++)if("valid"===A[t].type){let e=t+1;for(;e<A.length&&"valid"===A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function dA(A){return A<26?97+A:22+A}function gA(A,t){let e=A-t;return e<=0?1:e>=26?26:e}function QA(A,t,e){A=Math.floor(A/(e?700:2)),A+=Math.floor(A/t);let n=0;for(;A>455;)A=Math.floor(A/35),n+=36;return n+Math.floor(36*A/(A+38))}const pA=new Set(d("-.0123456789abcdefghijklmnopqrstuvwxyz"));function BA(A){if((A=A.split(".").map((A=>{if(!A)return"";let t=A;try{let A=d(t),e=function(A,t){if(!Array.isArray(A)||!A.every((A=>Number.isSafeInteger(A)&&A>=0&&A<=1114111)))throw new TypeError("expected array of Unicode codepoints");return function(A,t){let e=A.filter((A=>A<128)),n=e.length;if(n==A.length)return A;t&&e.splice(0,0,120,110,45,45),n&&e.push(45);let r=128,o=72,l=0,s=n;for(;s<A.length;){let t=A.reduce(((A,t)=>t>=r&&t<A?t:A),1114111);l+=(t-r)*(s+1);for(let r of A)if(r<t)l++;else if(r==t){let A=l;for(let t=36;;t+=36){let n=gA(t,o),r=A-n;if(r<0)break;let l=36-n;e.push(dA(n+r%l)),A=Math.floor(r/l)}e.push(dA(A)),o=QA(l,s+1,s==n),l=0,s++}l++,r=t+1}return e}(A,t)}(A);for(let A of e)if(!pA.has(A))throw new Error(`invalid ASCII: "${p(String.fromCodePoint(A))}"`);if(e===A){if(t.startsWith("xn--"))throw new Error("punycode literal");if("--"===t.slice(2,4))throw new Error("invalid label extension");if(t.startsWith("-"))throw new Error("leading hyphen");if(t.endsWith("-"))throw new Error("trailing hyphen")}else t="xn--"+String.fromCodePoint(...e);if(t.length>63)throw new Error(`too long: ${t.length} > 63`)}catch(t){throw new Error(`Invalid label "${p(A)}": ${t.message}`)}return t})).join(".")).length>253)throw new Error(`Name too long: ${A.length} > 253`);return A}function CA(A){return A.map(c).join(" ")}function uA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function EA(A){let t=document.createElement("span");if(8205==A)t.classList.add("mod","zwj"),t.innerHTML="ZWJ";else if(8204==A)t.classList.add("mod","zwj"),t.innerHTML="ZWNJ";else if(65039==A)t.classList.add("mod","dropped","style"),t.innerHTML="FE0F";else if(8419==A)t.classList.add("mod","keycap"),t.innerHTML="Keycap";else if(A>=917536&&A<=917631){A-=917504;let e,n=String.fromCodePoint(A);t.classList.add("mod","tag"),127===A?e="End":(e=Q(n),e!==n&&t.classList.add("code")),t.innerHTML=`<span class="tag">${e}<sub>🏷️</sub></span>`}else{let e=String.fromCodePoint(A),n=Q(e,c);n!==e&&t.classList.add("code"),t.classList.add("raw"),t.innerHTML=n}return t}function hA(A,{before:t=!1,components:e=!0}={}){let n=document.createElement("div");return n.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"===A.type?A.tokens:A))),n.append(...A.flatMap((A=>{let n;if("emoji"===A.type){let r=t?A.input:A.cps;n=document.createElement("a"),n.href=`https://emojipedia.org/${String.fromCodePoint(...A.emoji)}`,n.title=`Emoji\n${CA(r)}`,n.classList.add("glyph"),e?n.append(...r.map((A=>EA(A)))):n.innerHTML=String.fromCodePoint(...A.emoji)}else if("nfc"===A.type){n=document.createElement("div"),n.classList.add("nfc");let t=hA(A.tokens,!1);t.classList.add("before");let e=document.createElement("div");e.classList.add("valid"),e.innerHTML=String.fromCodePoint(...A.cps),e.title=`NFC\n${CA(A.cps)}`,n.append(t,uA(),e)}else if(n=document.createElement("div"),"valid"===A.type)n.classList.add("valid"),n.innerHTML=String.fromCodePoint(...A.cps),n.title=`Valid\n${CA(A.cps)}`;else if("mapped"===A.type){n.classList.add("mapped");let e=document.createElement("span");e.classList.add("before"),e.innerHTML=String.fromCodePoint(A.cp),e.title=`Mapped\n${c(A.cp)}`,n.append(e),t||n.append(uA(),...A.cps.map((A=>{let t=document.createElement("span");return t.innerHTML=String.fromCodePoint(A),t.title=c(A),t})))}else if("ignored"===A.type)n.innerHTML=c(A.cp),n.title=`Ignored\n${c(A.cp)}`,n.classList.add("ignored");else if("disallowed"===A.type)n=EA(A.cp),n.classList.add("disallowed"),n.title=`Disallowed\n${c(A.cp)}`;else if("stop"===A.type)n.classList.add("stop"),n.innerHTML=".";else{if("isolated"!==A.type)throw new TypeError(`unknown token type: ${A.type}`);n.classList.add("isolated"),n.innerHTML=String.fromCodePoint(A.cp),n.title=`Valid (Isolated)\n${c(A.cp)}`}return n}))),n}function DA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tborder-radius: 5px;\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tmin-width: 5px;\n\t\tfont-size: 70%;\n\t\tfont-family: monospace;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 65%;\n\t\tbackground: #800;\n\t}\n\t.tokens .tag sub {\n\t\tfont-size: 50%;\n\t\tcolor: #ccc;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t}\n\t.tokens .isolated {\n\t\tborder: 2px solid #87e;\n\t\tborder-radius: 5px;\n\t\tbackground: #ecf;\n\t}\n\t.tokens .glyph {\n\t\tborder: 2px solid #0aa;\n\t\tborder-radius: 5px;\n\t\tbackground: #cff;\n\t}\n\t.tokens .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tcolor: #fff;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens .glyph .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .glyph .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .glyph .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .glyph .mod.tag sub {\n\t\tdisplay: none;\n\t}\n\t.tokens .glyph .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #fa0;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t}",document.body.append(A)}export{C as compare_arrays,BA as dns_from_normalized_ens,hA as dom_from_tokens,nA as ens_beautify,iA as ens_emoji,eA as ens_normalize,tA as ens_normalize_fragment,AA as ens_normalize_post_check,fA as ens_tokenize,Q as escape_for_html,p as escape_unicode,d as explode_cp,c as hex_cp,B as is_printable_ascii,b as nfc,y as nfd,a as quote_cp,u as random_choice,E as random_sample,h as run_tests,g as str_from_cps,DA as use_default_style};
