function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let l=e(),i=t;t+=l;let s=0,g=0;function c(){return 0==s&&(g=g<<8|A[t++],s=8),g>>--s&1}const B=2**31,a=B>>>1,C=B-1;let f=0;for(let A=0;A<31;A++)f=f<<1|c();let p=[],w=0,Q=B;for(;;){let A=Math.floor(((f-w+1)*o-1)/Q),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;p.push(t);let l=w+Math.floor(Q*r[t]/o),i=w+Math.floor(Q*r[t+1]/o)-1;for(;0==((l^i)&a);)f=f<<1&C|c(),l=l<<1&C,i=i<<1&C|1;for(;l&~i&536870912;)f=f&a|f<<1&C>>>1|c(),l=l<<1^a,i=(i^a)<<1|a|1;w=l,Q=1+i-l}let E=n-4;return p.map((t=>{switch(t-E){case 3:return E+65792+(A[i++]<<16|A[i++]<<8|A[i++]);case 2:return E+256+(A[i++]<<8|A[i++]);case 1:return E+A[i++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let o=0,r=0,l=0,i=0;o<e;o++)i=i<<6|t[A.charCodeAt(o)],l+=6,l>=8&&(n[r++]=i>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let o=0,r=0;o<A;o++)n[o]=r+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),o=A();if(!o)break;t+=n;for(let A=0;A<o;A++)e.push(t+A);t+=o+1}return e}function o(A){return l((()=>{let t=n(A);if(t.length)return t}))}function r(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(s(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(g(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function i(A,t,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)e(A,n).forEach(((A,t)=>o[t].push(A)));return o}function s(A,t){let e=1+t(),n=t(),o=l(t);return i(o.length,1+A,t).flatMap(((A,t)=>{let[r,...l]=A;return Array(o[t]).fill().map(((A,t)=>{let o=t*n;return[r+t*e,l.map((A=>A+o))]}))}))}function g(A,t){return i(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var c=A("AEARwAhqDbsBtgJ4APYBNADgAScAnADQAHAAoQBnANEAaQCKAEQAkgA7AHcAOQA6ACwANgAlAGIAHgAqACUAJwAWACwAGAAiACAALwAWACoAEgAeAAoAHgAPABoAFgA+ACUAKgAvADMAEgAqABAAGgAfABAAGQAdABoE5AXcARcT4TfMBdwAugCuSAFwAK4KA84Arog4ODg4MWQBDRAOEvQABgdIBu06BWAFYQA9NDkJ9r8aBw/RygAXA9EF6aViAs4KOAKOqgKG4T+Xb5ICxdQCg/sBKOgSAPK2AUoCNpYKSJgA7ADrCh4AIN3C0RUURqYEJIABBgJCGMYP9BIGMvIOBIpwDgPGB7AHNgC0AHKa766ciABkBpwELAbyACQARAycFwSqBMpEACDYCMQyA7oEFAQA9zZ0rACqhiEAIAQuBOAfASYAwhnWBQMSIFVACaAJkSckI1bCTOyDSwAcABUAHgAXdF0AKgAXAFD3HuE9/AQ5Ycqe5jcKGSZfVgRhPfUAHAAVAB4AF3QgZUCgAMP0ACQAQgzOFsSqBAHawQVkBesC0KgCxLkEClUlpG4UfBp2TP4A0DrcAu4AFBg0khfSmgKBhAETJADSOtwC7gAUGAFRUC6aTBMDLgQFNBLgWii2AeBMADIMNBKAAjoWKgMwAC5AdABC6gH+LgDQDqq+ASRsigC6DgAOBACK3FIFJN50IACoMNoBqggICAgIKzYDpABwAQoiPvY3fQQ5KADZAdACKgQAoAw0Enw6/FC5M6o05QcCBgMwBWIFYbjBBXI7ZkIbQ1hKoHucZmiiARQcA84QLvqAACwErFQCXFwCfiS0MAGYrK4+ZANOIASMahIA2gQGtEg4LAQHMgJCZgB0AWooegCMJiIAngFSwAAwciABuM4DQDYqTAZcAXhiBm4AAm4A+lIgAzIKDgBSSgC0AgBmAHwANL4GEPz4IpaICAASKgAyALwkUAAB2gHkEBQ6l4GB8QATABoAPQBGAEE8d4LcyRBoEGUKB00STHVDFRQCtQ+vC+4RHgzaKtTT4QA0sgf0A1wH9ANcA1wH9Af0A1wH9ANcA1wDXANcHBPwI9zJEGgPUQR2BZcFlATfCIwmUhGKBzEI21QWdCccUANOAQUjLkklO5wzFCVLTBVNDAgFNktssH1BA1AxtFT+kKsD1DJYOXUKBx56EqkAMw98JTW+Tod6UHGpClRPt7WISWtOcALHOrFAAQoqCZxvxHdXBkYQICeqEPwMOAG6AUAN8kvdBPYGQATOH4IZHg/SlaEIqi3iDPIm6C6mgF8j+iqIBfJL+TziC1JRbQ9eC2oJ6DpogVMDJgESIpAK4g0+CHIQ+ArOcA3qEUoHPgPaSZ8AqgcGCxYdOhW6JhVisQsOOXwHABr7C5QmtBMuewEF2BomBlIBLhsEANQu7IW1WjZcIU9kBggLKiPMFK1QJQ0qQLx4TRogBxolrgKWQ3VKjFE7Hpgh+zxCDWsuGFGBB/o8ChlUC4Y8o0awRRMR1z6SPU0iTkwxBDqELDQnkAnUD4oMvnx3AV4JJgm2DHYTNhEcN8oIPgceMpcpJxoIJkaaYJ8E/KQD+BPWAxAFRAlGBxgDuhwyEzMVLgUSgSncAvg22i64ApRWhQEcBdAPKh/kEFVH5Q7uCKACagOIJfAAMhUmABwioAhIaABkj91TCi7QCMxqcSN5A2wU7GYReAeWDlwHrBw4FcQc5nDNXhCGDSiotAlgAXoJngFkBOgIDjVgjKUgRmdYi10YoCBmQUReAQI2DGoVpETCh30CkA9wEiABOgF4Bz4NBgJ8EfIRcBCaCPCGCTW6M/06KgRUIYggFgosA1Rs0wssJv4M/W4BqBJnAxE0QnfzZ7BguykYAgceMspBZSH2C5dP0gyhGsYYR1QzGekHxAP4Gvgn70FcBgQDqAgYOlIz8wTCC24IkAlEAE4OqBwH3BhvCnaM1QE2kAG8ngNclogCdJQGPAcQAGwQjAV+6gAiAqwIqAAKANQDXAA+ArIHogAeAIpGAUIDLDQBJuoClAOYCDbQAZo0AfguBCDIDBoA/DxuTwLDtgKAb2anBeJdApMCTjoBUioEClNMVgO0duYA4ABQBhjkTAEasE/QH+hIAeR0MADMAQAACjoHCkYB0gH4cgC8AWQLNgmnuLoBUu4uAIgAGnAB3AKOAOIAOgCE9gFYAFIFXv4F2AJUTgEWNh0wXGYBwAMkATgBEgB+BtCSqs4MJARyB9gCECAV5gLvMwe6BgMi5BPSQsoCveNaADIbCj0KrAqrYGBlOAs2dz1VABMfrT7MP1MFVjtYO107WDtdO1g7XTtYO107WDtdA5zE58TnCnFfSmHwDKsN2UTNOk4T4GBWYDcTzS28FMYV0yVbGUIawScKJelVDg8JLdhmNQgxNHoXwQBEKW2DRmOLHjUKUBzsU5ZU/S0gALZLpzO0DbEbGkRFBUx18mIvFhMKJwJkhgJiR2BStAJgNyUCofwCaJ0CZg4Cn4k4IBACZkACZisEcwSEA38YA36XOQs5fBw5hzooKAJsIgIyOzgPAm3MAm2z9I8EOGxKMAFsAOMA5gBPCgedDJIBAxDHABK6Anc0AnanRAJ5UEgCeL8iYeBFs0b4AnxEAnrNAn0OAnz1SAVIgmgpADAaSV1KYBocStEC0QYC0NFLLAOIVAOH60TKkTcC8qZdCAMDs0vTTDIqCNRNUU20AotEAordxiAMIkhsCrwCjjwCjmFFnIYCjt4CjmF9UblTOgIPUtlUigKUAAKTEQDuACFVI1W0VdULLCApmosy5nhrRUA+ApekAu+3WCatAF4qApaUApaBoQCuWbFaDoZSAEAClroCllNcSVzWApnQAplpXM9dDB4CnKA5xzqiApwbAp+gAp69jwAiFDYvFAKd9gKelwC6QmE5YfQCntgCoHMBrgKepCQCnlOqY81kLCowAie0AiaDAqEAAqBR3AKmNAKl0wKoBACCAqf3aIFotgAITmohatYCrOgCrLMCrWwCrQcCVyICVeECsebcAx9TbJwCssISArLtHGzlbWhtTWQDJdICtmFARG6VAylKArhjArlMGgK5L3xwO3DmAr0eAy23AzIWAr6NcgcDM3YCvh9zJ3NUAsPQAsMJc4d0UDpKdOUDPKwCAzyfAz3EAsWBAsZMAsYVjgLIblYCyEkCyVQCyTMCZKIC3dd4fmZ4s3kqS9UDGKhnBwJh+Rn4lSl7EF6XXsAWAs9wAs9xNFBY1/gYpADLsgLPeAEu7wNOF35QCgLcLALbjwLSVANSYQNTZAEGA1WRgI5EBdAb8mVKegSC04OSAtrMAtnjhBWETqdBA4aqADQDZBOGdl7+AFoC32oC3r14fALiNO0ZAfM1LAH0oAHy14wC6/gC6XV+BALq/gLq6QD+TAG+Au6OAuuhlq+XCALuRAOF5Zh+cOVxpgLzCABuA44bmZgC9xgDkXMDkowC950C+d4C+GuaIZqwwDybIwOdiAL+/wEgAD6fIQKfuAMFkgOmbwOm3gDWygMGb6GNogoOAwxOASEJ0gZmvmwKAMAEcMQWkB64EgAcej4AKAM4tAPGDBIDjoQBaCwmAIz0ACYA5qgMpAmOBiSoygcAsAUaxAfyJkZHBhaBBXFAR0k0QipCvV96Gl/FAJbOBTsAkFUim8I7L2A7GrrYDjgYzxiSyf8FYAVhBWAFYQVsBWEFYAVhBWAFYQVgBWEFYAVhTx4I4I5wCwsLCm1e8jQJyAY4xMQAxASwxADwSTIWuwVPPnI+eUJIQr9ffkBf8QBYGjO0AI0HzHTMBabwRoNGLywNNB8wPz5+dt9zwfoZyyxyAXTXdzkgBWgFc8nKycEI2FJkCQkJAAqFXoaUxwA8P4oADBbaBu62LA4AjMwUAwoWAOVuJkYtKFNCukLFSkEsXzBgPzBBLAnKRgcKTT9MPoE+ij55PnoCkkLFUktEX9RXWHNWEwA1AXRdOARzAhR3KF/pPEMkCXCkCmssNEUmL0K0QsU0zArMBV/SFyg3EgAREgUIAwgrfqbfc0M2UyDJtMm1CW7K1NUKaUFoD+4QrBoAk5YmTkIuG7JtQs5BCjwAP0w+eUJIHBATJlVQdWQ1NlrqvBsKhvYmNEJIHGYRUxIXPF1MS0ANO0ycNQqKJDZCSBv+EVwrLCEAOToJDo9q8GcKemTSYBRgNix3CExgIkILJCdgvA8LdBluV2BWGgoHCGTwYB5gnmCGYLxgVGCacRYgBr4X3F6yvGMLQx+0AcQ01soLKB4JACUMJwGCAnUDODmeW4kEAZMKwVAjAO0sdJcT0xYGr03zAaQCkKVYBUloAQAARhMJPQAfYIMUrhUtKMO4UABYFT0FAB4TwDVdAtsUS24RJADhVwZ+BBMnYwA6AAC/AqMwCxZ4tCIBZAGPCgUD4vYYBrMGUwbCACbLXrJjErtqE5ILLUgOxAHEASwLUAVjAAcxADExKScoKjUbLw8BKhWWAF0Cd2CZUp4KdygGD3pQAdx1GNdaKSKyuU3zBxoFVWgBAABGEwmDCAEPLXUTkBSuQTk20LhfFhQAaMUUAGxKcFAqIiTIADoAAL8CozAtRBfXApkYhANQxFjRdHuO4KWkDv6iFUYb9RLiEg8PJAUB0AlDEJwOGTQVPxQARAC81wELAK0A6gCbkzgAHQBkG883AHV/MxbKBBkLREzc6iUnEhuGAoAu16olBMoTs/F1AEBCNg6vQQfEEgAQQw/EI1Ac1qp3JwFGKmglLtcaIgB9tOMlBFXz7R9uAvSgEQzFDQMIRS7XqjMKRwAFyQtGAlQNxA1FCMUKxQQkFkQAqQlFEMQNBxipe+UAO3QLxA+UGuoOxA6YCiQLRAnFDEUAAq8FJNn1DgDn5hnEpWQXv80A/RqECKoFE/95EsUBCgDzCgAAfajEEmQaAN/EqEQMp8QY5AMaxBfEo5R5dQcEqaSMABLEDwaEGxQAA5wAbcQPAAvEp0QKGkQEwwiqnNMFD3fTDwQHyRhEqUQHK/SjxNEA4YQvv23HA1EAA/QAFcQABwQACcQAaZQAGsQADsQLGMSOchYEAAFkAA50AqcnVAAuVCcABsQAF8QIKgANUwAAAuwAusQvAC7EAvQAA8QADqQq9ACyYwAcJAAbxAAB9AqqAAXPCx4V5AAHpABCxAELAGnEAAuEAAHEAB3EAAjECaoABdMAbqgZ3gCaCCoABdMBAAFEAAfkAB2kCCoABqMACYQAGzQAbSQA5sSJAAhkAAhEABTEBRbUHfx4AGkECSoABtMA45QACUQLqg7N+2gAB0QAbqVAUQBQFUUACsQNAANEAAm2A0AAByQAGYQAAhSnBAAKJAAKRAAHxAAKBKf0FWQPBsQACSQAAxQAEEQJABREABF0AA+UAA30AA3EABkUDxYkABVEAG6kFrwBxADDFcQAE0QAaTQTAOFUAAJEAARbABeEAAJkAB7EAl4pM4gFJAAG2QAYxAYnAYQxWwBBTgC4EQbWAgx7ADEzeQGtDghnAnUsFQgGEhB4VHVoM5IoB4kdB2s2PwOqCr0ICuEAHwMEDHcBf3tQWx0qA1gCHkcBNQYMfE/GhFuDSQAyADoKAAQCAgBcE+QAhJk1ATQAf+4WGjtPClMAYA4AAApZARCT1QCBRAQprgBjAN8eAJ5xQCiUANZ0ugDY3QMfEct+fCQhXyYBEtoBkZm0K1xcVlEbRcuSAAIAiCVASTI06RqgWAB1ATIsOSlLIhgDOV4FAM73AFRu5QBzAnoCSBGDOtB4NzXeAAALFRclCxtNchICCLKzAgEBAQMFAwMBGtQEADQBAQEDAgcHBwcHBwYGBgYGBgUGBwgJCgUGBgYGBQEBAwMBAQEjAJAAld8ApADYAKoBBAD/AIABBwDcAPAAjwCpAS0A8ADfDBMCCgCqEDva2travMbi09bUwzgBWgFPAVkBWQFZAVcBZgFlAVgBS1FJS24TfBoNEAw6PhQPACYVLC4wMz9BQUREREVGFUcAByVYWFhYWlpZWjBbXF5dXSRkaGhnaWgrbW93dnl5eXl5eXt7e3t7e3t7e3t7fX1+fXxjAEMAYwBjAEkAmQB3ADEAZQCBAI0AVgBWADYAaQCKAF74+ABjAJLzAJ4ATgBhAGP///2xAIQAhABoAl8B5gBXALIAJgC3AIQCPgJBAP0A6AD/AP8A6QEAAOoA6gDpAOcAMQJ6AVIBQQE/AVUBPwE/AT8BOgE5ATkBOQEdAVkaADQCEwILBABVIhUhDiAhGQCQAJcApwBTAGwjAjAAdgB1AHQAbwMEAJcDEQMjAvMDHUZPL0sAkAJMAMUCVAKfAL8CkQKRApECkQKRApEChgKRApECkQKRApECkQKQApACkwKbApICkQKRAo8CjwKPAo4CcAHQApICmAKRApECkAN+Ax4DPhEEAWkDewOWEAObAjYdAVAWAfMC25+VGBExGgFKIDwgUZcdAXeqW2IBZV2iVgECAztMAQMAlzIeIZhzADJpAHIANwCSA53MlPC3jWMOwzQXywMaCqbefTMLBCxjAbsA5oeJiIeJh4qLi4eMj42HjpGPiZCLkYuSh5OHlIeVk5aHl4eYi5mHmoebh5yHnYyekZ+LoIcAiy2pAIwBBEQEQQRDBEYERARKBEcEQgRIBEoESQRFBEcESgCsA5AA0loA2AIVAP9jAP8BIgD/AP0A/QD+AP3dBY0sbscA/wD9AP0A/gD9JQCSYwD/AJIBIgD/AJIC9QD/AJLdBY0sbsclAQBjASIA/wD/AP0A/QD+AP0BAAD9AP0A/gD93QWNLG7HJQCSYwEiAP8AkgD/AJIC9QD/AJLdBY0sbsclAkwBPwJTAUICVMoDpwL1A6fdBY0sbsclAJJjASIDpwCSA6cAkgL1A6cAkt0FjSxuxyUEOQCSBDoAkgAPljp2KQMBADUAkglHdwwBLAEGAM9jCwBdYwAHHDsLAJILRuEAUgsAkgsAn29ASuGceefd1uebtRF6IT4Hxp1WUwXjkcmOQdbZq0hyIgmi8Rf9APKLE2aN7h+p5T1fL8kY5ghYHuiQ7soodVqDMy4UKstGOZ2Puw729/G9vlvtTgFLQsnLvCCp5iqa4H6YU7H9wird7PDbO02fytv2tQVq8bmtE7mA51r7K7xIHVfG1LTaWZMWfe6YkSW4UWEjtmOpSteWJB+I+ikhtPw8b9G0UyQKQUOQYviQt8ZUQyCX1EuSY2lqduBzeUlJaZWw8Zhbm6A63kVMTIKNb8TSzVYlJ1aSYR3wsJ6V3GayVm59VnzNltpRJLdFswkMykcBy4fbQUrJfLmJFZMIOYE42qvS+EaUclXMrsrHsK1qKORuSJRh36/QFz0Pwy+0PpLojyNmMZP9zCE5gAPmjumcoAtJQMud0BnaEAK8s1LndoB+Wvm+rijOuCET2yS+39UBrvEEbptNzPez+KWv8fQ18BYaUpSyyB0co6oFuHcGxfJF8LTEq0Yky/oV6c6V7ilIBl3S3e3awkGRxHn9+EO7u5XUu77AZV8fXk881TRuh8lRBAQxHdLSVSosSWwiueXN/jJqnaOOVkiDxVpklt8KNRzxvX4jTmjLuozCHDUrlvwm8CS9lqe/wfkfx0lU1Re7THbde/R1o0QNk/63Y9qjdbPwQ6jjp2REY60gX3b4a/skh75/EOrUJvz9XE5Q9xHoNhPH3+6AXvB2g7BPgD9JM5rdfKPOrlvgtFHlnPsL54B4sT7bC1gW5DygYtlLD5KjTEDv09ezyxtZ9Zz9BqzD2J5k8l/5dq0cC2dKllhPMkNMmB/DnLKMamFrUJ2/wQlXDmwn3LPWtnLXxX/7Ns2RYigX6z++dWQOfjrUnMraF1q28145BohE3mcfVq5wYyqH3SJlpDIwcUtDSueqvfj3KQF1L1pxHiVjlPL1ZQUQ/13/QwKnGA9p1W6p8RmdfL+05QgD/xszDoRxAqgMTDb9k8epqjsxzpvT6eJDgkF+GU9CGOuDjqflMzWg0uyPCthxLniypKYVixowzw6+nTrgenJvw8Txh1FtvhiFojv97hJ4jppwl+KPekao+LoZ/Qd/Uc/2+mqtYKDbvBSM5mMuMXeOy+8ef6JG0xcI0dCbdEHW/rU1MWNg7J8OlryGeSKQsZxIiS0EglIzpqfuQaUE4Bym3xA2Q1xc3o52JJWf15HQNna8k1fM+X2QZYDNyiC3f4+faw+qYkHh6+LmGDkT79pVXVENyOdDcHLOya5SBpe3baFlGvvBV3J0cLWvos2Gs7gZDYVdyREuW/M5Z+c2RZTL5bRS4dlXWDYWUfxD+fUN+kiEh+omIphBWKb3sF3khSkAc8JRYlunAPtMJVmgRgkZlUV6iZ5rg4v1w8tSwLcWi56gHWkDnoY25CzsagrihAQtCWNczXWibVaIRtuXOZsPXOuZaOSKZqtco/9q5y3GZ4rFkAMAjNeua+igKkCFn5UPKn+Qfi+NLzreehN4Mpyb/aNctLaLzwHSWvLBk5rDiFLJQGNfvBvjM43Z5V46YsRYfJVoNfNzbk2Aw2YDazI+9BD2i/xgoxIN6M8iPDZLWTk/gR/WrftRul/nSvd65a1vNGZadfuEYnysjlycTHxuAqBWalwzm6KAoH381HACyO25cjXaUyWLajVT3M7kGjv0NXvtewZPxRCzQ66jMGHyl1t57rdyXGjCd/pdkXvkcGq29R73ROkBvieI+Z3DEsi00NQYcotLvjXPv0+rAi2f7RYEHdj9rjPTao2WQ2KmAp/sN+oAOKZanwpCznfeHWtPXrs4wcnwNRobNiDGWoPD1ka/SmY4IFRS96eX5uoHC2HsRIErLhWVRM3iYB33bc40not1V/O4Nc/TLMZwISRR11pqesjRX5iEPtiA8m1xaAvZ4mGrS+K4X/8E/VOtvOw5wyog6olyB44gXxesEk3FySf/W1FrgtN8feVrwaeyzq/XGx1KzTubQKm1xsZPRU6hPhKMpBxLn7HeS8c2mwtyQ5N6BCwTgiICgTt5pd31TqlnvJ6amY0A3vcpZAKuZHrzkdJ25PYMO2L36fbfFjwsfVCFo75RLOmQkeTzmsw1GqYG2fjN+VAnDwTODoUfDdxrTVHyYcdtjBlR6vx3jYIZ1gtIdKWgKFEJto+vsA7H2WXGcxtBhnjv+ojCquOi78zJFPlTVvp93qeVD5YM+ivUJxCS4u8KIgT4j9W0MhKalSqo0aW5VQmd0XA+1jQPKTY6kVH5b2uThvCP7Db+flFIMMjpbSXyxEfO81qShGvx5nIYIU0H89xyHygCdI3S9I+BZqFUJOCpr0dIqP3eOE48KrU8xZ8hkFxZd44jyxq9fDvTtODyiE/Dtifs5Aj447mSyj0V7TStLQmM+OXZzglbooROTfVrxykesVvhYiqR8Hnya7yv2XTiXEKiv/bSUxKYU7tdPWLbwLotu/FNVj3UawZtLCZsQbMuJhVVc/yMaIk08CIWRrDOw2y3I9SQHXFLFb3XqHn2MOHIgr48a5INPe98Ch7VgZ/xprayD5aUa8FB25tK6hUp/iqTk56DcNNapOUeiw5KGx4lNS5zZq9wI+nlpPe/9k4xpikQ9cF86RyGq6OVWtNa9qKx0Lj5vpwlSlxgNEReBEavfPCFiWdMIlKVYIlExjCEzOeXmwlmug74mNtlpJcNMDJARZt+dwY6IvnDP4I/ZcO3AOjviIuRpmSnLPjUgmAJDMPp5JRB0+iGy7Rtslwe2Wr5Rk3GkDsQj+ezxxBomJi4Ih9doQbu5Kr//8uSVQAF/vLhi5kbccdd20M/2aVj4BJOuybzdTweCgAS2X/wmH7bx824PJ/87oMA46TG4+AHw6YK7tWI5sExc5mB57bQNd5zVONZhnR4uT9JSqNuPR0SEuz0zD7uk7IJYNyjrIrp0JeaM7p4WSUNS6/7/MAO0iROE7n//5wQKQ16WW4XtGdZ6jRPkm7eCVXC/YCkbh5CkyTEoIMvHhSUDBNK4oeF9c4KG74Lhqq4d3enwo6WlKM4TONvp1Fsy6uP77L7JykuNJ3RtGyWRHEzJg35NBvFV5fHvIsknsXTxZuj49o8NM1w5lxkFFvcNRnK+Lgyyfb3AnimhVMRwSXlkbGLiJP656AVVGaZTvA1KVG5OmVicpj9ihzTB3+LKt2EArIuz9sMwIiRa2cKxaM8nFG6JVTwRZDsYmyInDNUn6iI6pbPTHOGWiOIyJmDE7QKdXkJ4O0T9Me4Tpiz3Ahw/LKI2+0J+fNGBAinwgWDxZqN2CKf8UHmk8kOcH+rD410JYazrOMtC5mKPyceo94so5FIZssoujFexvvgFNlobq4XKwxNSyNrWpi7J1f7j0/yYzmnp8P7SfOneX5uB1RclTDY2TCEwoLhAN5jwogfwmxjO9Fj+vvXR7GyTriG4e6OW8GYdy5dEQOpcmsLQ0MnZUvkchP6n2ZAodvDCbd5LXSQw3gi/m+OIXt5mJ+G5Er/SLm4BtVbe/vyqiPI09AyyOzf8ow5ubgVAkwEMkKn5ke0znBDgJPauBtYwlpYfzKpbqO7n3qk+aXxGAiCwvhUexGgLWm4tk1f3FXTdRtSJLAvDNh8eq2kZYpaQzY0Y9wQ6t9OjAyQQPf73UU8v7/6k5PVHny2nBtWhvABi5N0rVTlAWS9NblqIwiAvMeHBeVlBLMnBEDaYsRbXYMbIpMQEBIhwaMAmm+ExgxNkgvEpTZqwWUlZ6qTFAFN3rRhWqvRBaOjAeZL/bNqeR4hHHc6oXYnZhH/gbztbMqLXQ5IoqYIq9VoMlwbyd6HTefpiJyyqsjLS2SFp/UHbSE8FxWZeKbniJp74swgIPdDzjUTluqqYKE5JgjrmL84eWUpyfh6k9BzMZhYZJx9NlHFy7XH/AVfNlN4Nej93/BTCalk8htGNaDCu0lSFrtmOS08gTpIE3YGHaJsCL8a1lAY2i2TlbK0fyzRvA/D8acIh8MnBkg0k3hhATSjSWPbZEEOX/r5QOVe4KOckv0Agm4ILnozFNLn3lpe6denMdzjFSyJlj8srnKhO0XoBwqX5f5ykYavMOSeEaErQxCgPCEjrdo7yGkHFHzu3Y7iR8WbVijPaCU66LMTzWoAxA/+Ul7tKZr1HKQUNP+dJ8FWVHAmPAqJVFzj05+dMWQ77x0gwDpvBLK0S1uF/5KNmlcMamx8TJllqQ2aUrFjJolt90yXPwBDoupLjaj40hLeOI+6Dfx5n4BPSnjfJsVgSUKxKy8CYmQnWrffmYLWUbyrrj1V2j9F4umxzErlEOSAmnHWrlgDkmH/35GGHgBcfJFSrdHv+xuLYiq42arDwujrQjHpZLhvrEo2Eb7Shu6lW9XZ3WY3kju97EJpMo//GBkD++TMzGwbb4uiD/wka7ErY1PZZs/oQ1oQk03tbowtip8gyIyjsSjnY3gM2yHZ8XcMDwKbd2fpQFjwEJ0q0i56JBZ6otZB8HOaMmCVWJfrJNUym5ygE4KyyGTOtX8QN6wbKnnPctyCeOe8p+0l+b+iTIwkyrXtHluVUb35cIcdHKewFwFPMwMAXEb5r5jvX9u+5Rh5efLxtY0Y5juniqC6UxpkcNmr+TKvZ4mgUU4+DdCPKS0oAX7vF4VMTpjxM3YUKeUEBepASakkwdw6bHw4ZCIU81KDByN9ZtMIIEWb1Zsk2P5U9C7g1CaduY/l5FLi9R/CzUuOwrPH1q5G+F/4rI8eGlSNTSiKq12eYm/P7kqicAbrQdzM7T5FIUrwCjqlMELUcUSNCZmmIlZOXUPj8AZ7Svhz9K8aN1BZ7zqZ3n/R39/gQgwP8VphI5b6+Fk5t7WqX5Vy1JuXwXpVMqfF71cEDsMoC4xLrtCCG5K1cOLgLjbFkBLYDDfPO74B6vt2K4zU6cLNErspJpux4Yz2so+KHJdkkcJJXl6KyXWkwXNWt3CJrf1ovYRRFfGCIk6ZSiZivU18B/DsM7Yt4q94bZP0neqjSnO3L9ADkJ9pyJ18kNpl95rFw1LqWPsdEqriZmmK9rQkV7JjZBkpDY5kG2D38QnlBDxiHkBfBzqvUk54o6Zmup+BbolycNghZBLXOlO6tgVw+5tBmQVxyUnCuDqCIC+Rplb2kQJpxcYse7buQ0dyQH6vezRnAZf8ISZ62AmPyPtWyB4TUtc1pYx9SBPFANa8cPomzKiy6JkW6NMn28oFyjhJRgO+GFk/P2MI6N7bK3YLDDIlJP4kU4peTumwV5kSgiu1PSnzySKIRXM0+yOELcpt3cE2ZwuJPNCXupU/rTM3s9CfVl+oJmNEdo8/DbswRMw4/0m9zECC+y7PicEWv4YTKfes7FpybIG0W/N4RbgTUEMn2Zdud3BUcpaol4plJOBxGlKQFWZGc6wy5tALz+1Svm7n0jG1dzjJrhqTFhRS4jBDSn12NbfwJ22IoYUj/yoAAoazPLjYIWNkH5ryARSPrONTQPc98aYamGyLRpSz0dv0jpNLXK6Bpl0gysM+cwHPxmxrZPFz1QsGBBqQlLRfKJbbELZrzYHcFi+wfBgKbGXRbSs6mwMw+1/PAebfOQxfrimQSzKULOtEKNMEN0lvJjgRfxkUGUkjRVfRQ5KbVdnhsE3/0RdidNKdjjT0Hzl3j1b40NQTTQckLKGGFCMo/zFy6fu4M3dRp6jmJEC/BpwcFiMMSib8sRoVr0vyOCIraHV+Q1GW930YUNlSrHNsPA4Oyh110tFN17hq2VXgOn4DTto14Ab7mRySDm4zrpJUGhKT5Bvd20vV0f25BRwq6tpLmE3Ru/fvLDJQVl0QkKLyE7gX5Bwtpo/2mpCUHIAV82YDVCIf/rDHeDJE5sPteJTXFV7nS7ZtpTTBnPpK7aLG+aTI7YAViJs9HyY77w1hjb09DW9bnWuiZnSnSlF6ZsTdDVuGOnnLi+D81HiC+AYCwMe7tacWEDeOiyZ3MWC45oZscyQgptghjkM7bLs3ZOBr1PtJh13xD4xtzmsGST4Syq/RAufnfvC8eDuOLIPiK03VJ1JWepxHBlPoiBqkPQ2ZeFtTFJ+Dirj1tAaLh8VJaPY/6V/fZ28qLLAx6TmX50dvNoHstZU0hPTnxXwshu1hflMSisNdnwE389oKQ4X6LcJjnlls+UwtGvReLYtZFl9VymigIbexo8DlII7ug62JRvgFBQYUv4DdRCkqQ80hZ6nswyWTDCFff/FwCCKQm48P//OirgZWTj8NVzgZ5WhHVSzKdJ5Ng8rhfpX06NO8HQJDEEmq7hVpZIPfbl/T6CIsNgkSv4ulrUQKsScCGCveDbYhXmjSE2MbKdw+uuuQM6i3Cie/VD9y5XkxGnLFEkFUTqhAsztYV0aJafkJ86yuvVDCjYOZaho73fKKPXtMRfPKm+7nMTFMHz1kndb6sdTPgnQV4GAz2AFwfiX181W7W+WcGWnToUWY1rQl/WDYdBG3CCmfADHaTBlDAKU5o4jXhCJ0eZ+kFYteC7emRfgSSEJvd1DGRFSH6tzhSGn5ZuS81pLoM3cDDVMiSqGBQ4Z987x9VJlhN1GsPiLRDS/HW4Na42MIUKho6S90gZawsKSAwfP4gj13KkNwxSUEI26hs0LG17RGZrRXVvTu2HN0LjoQHYLrQ0rzXwLblgfmWFfI7y63eXrAf9tseDnaPgf03FPEcPvdBeQfLYrefTtiwyuPk1b1P/A5lbW0uFt8c/3ONngAvz0eET9MgxsYpDmGgeHh/saKQhNmtwelb9dSusWY+CcFakE4bue6cCk7bRNRR5PaobaL2fSkI16xD6ljkct2KGh2T+kawJ5CzGzXDJIwuJn4lrjyGN3YOpZeRKBeiUAtVz+ND2uV1prFR0+WY3XZz2wH6Cv1tg4azI8MKu96ZcWphUB0oOGh86WmkCDKq9hPp9BxIW7nHUxVyXV/eWLl/Gu0/Z86G1WwKSNcd16ZGSv8n9clL0EK0t6VIQeJHv63bLT2wYZaztZ9y9eOm5l3i0qHNceqySMU16cyqHz4gXEOj+UuPpQtpsKRemmqp5kg2XpuMVeIrr/d/dpCAfwYRvWKzeLWokeV6mpCMZZS2jmQUUPYckrL6piPM2hm9an0tu9PKVJgI9dcBus+StZrtbFiWBpWFF3rw2Gb5qDh5+/pfAiRnMJDTU3ghc7pOdIWi6n+uo3OE/2On0IPqEwictLR1HPcfmKG2lQH3Lvh8BdfsNcFsRN8QTfdpqrk+pU9IACJjK76TbfzKAu/168G+WNz2YpQyjO0KVM8HH308ezW+PfdB7ccoyATfIIaMOpauRqUbWgjK7ENMQ+PiNPJU+PIDHioCMgc7XffacGGHKKKbF0hEGtQgZf5VA7JWsp9jb/iVzsZYgUMWe6L5rEmYDL5bk7v3Xi/7O2An3YOsE3brt6MI/BGJfvlr0f67Ujpl9kFjAOpC9g4T91x3xEOlvH5yhnrqUPwuLzB4GvwSkxkQfBmcAXrwUATYFv4rIo43IZOPPCwvsLB96NfXNKsPd+MZeuF4oLqQuWYkO0cAVagQaBC9mX6Vpg5uUSPPVywMT680mZpZ775blBLYW0x9MeUU5nbJGDengUnB7UDRa2/lQUz7ALyUNQavTmpd03ZGWRXrWN/5fAqO7W+AuERYiNgvDhDo/IxKSEacHQjZzoxzd1WsBSm36oWGIiKUk7HQEpAzSNR6GqsVIaDhF1egUaxpKwdKVV+8y9bQb0nVXArwEzFOGtPm4TPRuSXMDQLQX4oexD72I5giMieMQ4amb5PWQmzAUcEZs57MVH0GWs/qaMAQa7W13PlIDoHcVlosSZk0Og86JgNc7QcL4zfxmuEQrlRsu1U70rOIvJVoBpP8yIFJy2u5fUr8HLnARVV5PuYz6n/I6VfGTpsfHomjpkjJrk6MLWVZUng2D0HxOUHwv7CfAtgWZY0xb3Io1zSWhhpUkpy8XeFWzja6N3AL7zn+clmEiEhL2L/ib8iYBU1gj8pdjNSchvP8CUjlHq6UCZ8P7dBwMsvRvmv0AYhWVOn6FmWpHCi5tRIZVOC7N4JppsIJkBqfvz/gyJeoCR4Iudz4MexkBOnrjjubCBgBdjTwYeSPY9YuD+R9xNMeFyT853xGnEI/7jHI747EvaOwrI1dHsL7USfNmqaD96QO5uFY312WPuz7tG0quHcPvusJ/zWCtIw0jne8WbzsiGEVoCiGlMLn4F2F2cqi+HqRtT3ipre3f4v2KsB3OWExpsot+/spmLaNnIcZayRNdXX3+UAP63DjkaJbmXjq9JpAQVYRe+/U3fEVFfdtQVgn/FieFzybi7hhY4EeNhsLsfKEJkriDSelGlf0IVwZCYQpiU/e8/IzpdkVmI5g09bOjmBw1w6sTh9OtP2euOalN3jPD6DoxzlTlE2X9go3teiE/+MagxwEfcU0GHVHXCsNzrf/ZUd6d9lZbmPabvqB6lyUsv3oZo+DWEL/d+AfoFymBuWV6IwfYXUtv9cwwlWislh81LJqNUCd0UR7wCj4kBlzs1bSjPxwcHSlBrmU/tytovyg0215Svuc3gF2S0MpeDoaudsNHaXgaoND4q0C0IXSOWRbBLS23tFpiKaral6zcH+HXhvgwC/BRow2rV4p9z5wJs4vW9uFQQ1aS8EJh2kxDD9skbUCsb3EpE8ggKs2NxcXqmtlA1Sg7N189IpxGZhZIdZthMStTxJpeKmuTJKiFOM9aw9tu9JNR2n012WwsqBs1R3uWc/75p/Lu6an/6BJnJStwxKUP4of0jzHzGwwknN6WGzzpmEoRCrcyE0l2nuyzsZl0dif72CAoS9NREAIoc8Q496OdiGybzREa/8fuEFUHjn+qFSR1N9tTN7TzdpIwAAQdacAtnp3+DI+Jze/MEBDI46TnTyfR/BTxB1U6iELy0mP2sy1VnJHcJN9aCd1dm4XpRqzEpX/3IUfZ3svkwb7wX5nEL+nCc+l78v7c5RdoJNrmbkuZ5sj906SYjPg/OhT/r6C/Ky/btgji3ia9InFGbAcZgqnCvUqC4x3Hpl6tzxdQK2YXe4bCUz57CfaofN1TZsgIHXZacEvS3DjFxg/mWWuBsDJJx2VZwg6hf/0HkTwIxFzM9iFAiX+slVzPth1ulGThfEBMU9hhaYusaLo9gEx4lNdsWhkG7/4Bfs+bIyMsf6sOib6ZC4imruoH+OXKT6TU9BRug79lA0uwxKJLxPqhtRlDlylFo+HUFoj3SzhuSJZN8YDOLr99gvBMbd5bBWhacFl7aJdBA85ilCwL3g0n/I4bhjcIZhm0B1bRsmkyh3XkiXYXKEyZHoBkx3dXMVmsxMzYPrUm0myBxA1eiXLr+8mkXLyd+3P2a6KZl8lj45LZcArwtMkJ+ekm7rEsW75TsD8xqW7jpiKebbbQ0x5hMRqcmgJTQ6pfT0pJwfxd+8+V27pIGM088vVsEMWwGJYmsJX4I4PHHXfDdXERiHica+iSKMqDtfwfnD/I57n/MttkIJ0Rc0QzXbyWqKdnxCp2i70//wvsUv7bcbRkFTF0OG1kZcWylPBvtLspbI4PNft2Get3nlRnvl11Ax2CTA19T/JSWl6UYwF4VS8axWqUZ3xxD6MZsBF26ZJMSM4n+qGi1uNz4YjJFisy5m8PwOH9pDTiZfdCvLPrMyE+fJKC+LR3vy9u5OWDfyAmOzJM2xXvRGbiki4gMYbEEGGBWxUJAFqoRgoMpIi2VDDvpP57n/4oPV1zUOX8qdbWbGnJHd51yZE0oxa4H4stcZVKlonrgEpyouskMZLsjEReycvjd8ldkuow7c3hYIV/6ewsVWqWtGw+V+JNuYqkD6CX2mxkFS1cONXRQVeN1OqUgx6eZtD/zY1nxy8lwIj3uVGJD9TpBnm7L4y7fCGLc3dzkjPWqDueGsIG7P0w0D4MpxeA7rrO+JIgJloz1uB8jRjlc1r+9GTi73kcO6N1UA1J74DUOQFXKRjtqIn7HFBCf/UZw5cgbg1xdihCJe1RS6Y4akZowbLDPqBKV0A8bb49vdt+ygixXkef89/N8A8WxO0ji6fHi4qA7ywdlbrl8N4LJCFYf1AQAbEdwEZ6tB72xAaazHv9zKrLlol0Dmw9SmdKwirLFuV8C9pH8Mgtav9IDQFK4mH5Nt4Qm3m5eXVBiyooFjvYxhvcL24imhJZqJa5v4Yzechq9r93UMTGXGIBQouA/1aAXARvjLHf6Z/VSkb8j0TRL7JiPDLmWeDO4tFUBGLIP3qYbnjhg30VG42ztyAUWo204pUbrVu28lzdW3vN9xDzkfxBSgNLQ4WrfVHTDismljmzrVD4ezH6xT5Rl/H4AJlUo5bosiEQwaciMPWsJFUVaB85VD5YvbPlIaUOkSAMYgQ3A2hYh8eNfk95KYyyCv+73J92PPpohQmxTwNGi9Re/8SVWCw4WaNh9Ovpu1IYcxmYSR8RVMNmTGHWwT9YRLjhCJ6UDawClWBsLwfiPnh1IN/0wJ1gpxaHMGkmdTOP47KyBN/vp207HyYVN95dzQgx4rEfgU9dWGpBI7JIdybMtIBW6blASeqt49ulwm2cNcYsMlEN1cht8PNfGGE2lYmJOB1J9ag6EXPQIq4H+umcTV7NMG7+QG1NI5gQGcAXdIUk998le3g6Vbp+kW0ebzQt0e5oQga+Bb9rIRZ/YL8ze2mvombDEiysIlPWAfBSc+ZSZL49lVMNcqa1vRkoiimH16ewC2q7NwWQrQMH/HF6AXnHbFLg4Mfq3W0qYzO1dha7L2A57N4LPdFURXEaW3XA4MKGfv0HsOnhbdAkl2lQ8ma8AuTmAjKGE/tmtxmdYfH895DfbfP088DjKc9VnhTLTv5ikyRnMuccB+Kq9PXHdJgsd/zqMs+JsbGIG7dhiCW4P+P/WltzTBmkQ08Y/xYdx2Ob+gsbEQjnftFOtuDmRWdDhVLMbpP43Fcb68F5x7544gwZbyjL96xMS6+LoJzLtyx7fv39S8AtbGDgAXbZF+JlJ9E5vY9Z2xm2s7UXqE/55D547jb36wG97dGBAqivOJCMROyuLA4ie1UMkzCbwBSOCGNyxjRtnLLmBxjCyEZVaRZ/UEi9uKvojIN2/pbAEDsWznJPF02hD+Iftqks67LLTK3T7x5jed10I0a1LkrA9yaoZebikVTbZpZ/YPVF8cQ40fR2zD4Y4Z2ChZLHc+B7QbFOJId7qSiivrTA6LSep5cp/6X485Hp+vS/00HVo3q2zmjdaruCjXAyT2RFETeviwMBGAgCMuT3tRAmyXtNWIECBMqP01foLvJHJ+oHBrL5hurlWIPMIZ18qLySAw+sR/XfP6doGTZeOl2YnqYdXiT9wTck/2UaXQTjbwLKM7qbHc139ry4zwQSq/UY0MW2JSu010coMFMmoyc5dX7Wba8t/0W2xLrl7LGKodAftk79xGg615VEX5CrutHi509CQZzhdagE4c2/DJGa6LZHfW/jIiB1hPRbHrZtJIcWcbXb1z1UNs+cxAkq6mrsj7IH651ARZkbgHbQnr05iAW9ANcv6W9jaSf8e3PN25Ovs9CUFgMzE1qkEtd+LnsqtX6650vqZr8tM1Iaba2JOJY/mzpG3Ik8WCE0Oc+CU/7fFvZ06FzUyTnbGlZi9uPXpaZeUw/He/QGZIGACtSwU9XRNGl6hpWV/VONNjQ1p8TOTrsFreptIR3rxjp3eZjIsWm8ugOVunBl7qqCvnfbuk0tFdAuJWwfe1EC0wamxKXsZqPDAdHfuTCwd6xOvn2J4+CM7kFTaoWJ8sKpqwTDh6eDYHSKD9GeUCMaHBjyQE5hArhkYxx3MKfSaVTafxYxnfJzNPR8vAYIo99NBicsdxEFSFmIW9mYXUR6pc/IYvhJ4m4ikoWQLhCoMgwzzss/6N3SCgDZJUby58TBFcef/oCh2eA9JW453fAv6/4zMk6CrO43g9RUxCriB7JMaJXL+o");const B=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function a(A){return A.toString(16).toUpperCase().padStart(2,"0")}function C(A){return`{${a(A)}}`}function f(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function p(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function w(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function Q(A,t=Math.random){return A[t()*A.length|0]}function E(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],o=Math.floor(n+e()*(A.length-n));A[n]=A[o],A[o]=t}A=A.slice(0,t)}return A}function u(A,t){let e=[];for(let n of t){let{name:t,norm:o,error:r}=n;"string"!=typeof o&&(o=t);try{let l=A(t);r?e.push({type:"expected error",result:l,...n}):l!=o&&e.push({type:"wrong norm",result:l,...n})}catch(A){r||e.push({type:"unexpected error",result:A.message,...n})}}return e}var d=A("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");function M(A){return A>>24&255}function h(A){return 16777215&A}const k=new Map(o(d).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),D=new Set(n(d)),I=new Map,m=new Map;for(let[A,t]of r(d)){if(!D.has(A)&&2==t.length){let[e,n]=t,o=m.get(e);o||(o=new Map,m.set(e,o)),o.set(n,A)}I.set(A,t.reverse())}const L=44032;function U(A){return A>=L&&A<55204}function x(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return L+588*(A-4352)+28*(t-4449);if(U(A)&&t>4519&&t<4547&&(A-L)%28==0)return A+(t-4519);{let e=m.get(A);return e&&(e=e.get(t),e)?e:-1}}function J(A){let t=[],e=[],n=!1;function o(A){let e=k.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(U(n)){let A=n-L,t=A%588/28|0,e=A%28;o(4352+(A/588|0)),o(4449+t),e>0&&o(4519+e)}else{let A=I.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=M(t[0]);for(let e=1;e<t.length;e++){let n=M(t[e]);if(0==n||A<=n){A=n;continue}let o=e-1;for(;;){let e=t[o+1];if(t[o+1]=t[o],t[o]=e,!o)break;if(A=M(t[--o]),A<=n)break}A=M(t[e])}}return t}function N(A){return J(A).map(h)}function b(A){return function(A){let t=[],e=[],n=-1,o=0;for(let r of A){let A=M(r),l=h(r);if(-1==n)0==A?n=l:t.push(l);else if(o>0&&o>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),o=A;else{let r=x(n,l);r>=0?n=r:0==o&&0==A?(t.push(n),n=l):(e.push(l),o=A)}}return n>=0&&t.push(n,...e),t}(J(A))}function F(){return new Set(n(c))}const S=new Map(r(c)),V=F(),K=F(),T=F(),y=F(),R=o(c);function j(){return new Set([n(c).map((A=>R[A])),n(c)].flat(2))}const P=c(),G=l((A=>{let t=l(c).map((A=>A+96));if(t.length){let e=A>=P;t[0]-=32,t=p(t),e&&(t=`Restricted[${t}]`);let n=j(),o=j(),r=[...n,...o].sort(((A,t)=>A-t));return{I:A,N:t,P:n,M:c()-1,R:e,V:new Set(r)}}})),Y=F(),H=new Map;[...Y,...F()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let n=c(),o=e[t]=n?e[t-n]:{V:[],M:new Map};o.V.push(A),Y.has(A)||H.set(A,o)}));for(let{V:A,M:t}of new Set(H.values())){let e=[];for(let t of A){let A=G.filter((A=>A.V.has(t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),A.forEach((A=>n.G.add(A)))}let n=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:o}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of o)t.set(A,e)}}let W=[...new Set(G.flatMap((A=>[...A.V])))];for(let A of W)H.has(A)||1!=G.filter((t=>t.V.has(A))).length||H.set(A,1);const O=new Set([...W,...N(W)]),Z=n(c),z=function A(t){let e=l((()=>{let t=n(c).map((A=>Z[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=c(),r=o%3;o=o/3|0;let i=1&o;return o>>=1,{B:e,V:r,F:i,S:1&o,C:2&o,Q:new Set(t)}}([]);class v extends Array{get is_emoji(){return!0}}function q(A,t=C){let e=[];_(A[0])&&e.push("◌");let n=0,o=A.length;for(let r=0;r<o;r++){let o=A[r];AA(o)&&(e.push(p(A.slice(n,r))),e.push(t(o)),n=r+1)}return e.push(p(A.slice(n,o))),e.join("")}function X(A){return(AA(A)?"":`"${q([A])}" `)+C(A)}function $(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function _(A){return K.has(A)}function AA(A){return T.has(A)}function tA(A,t=b){return A.split(".").map((A=>p(sA(f(A),t).flatMap((A=>A.is_emoji?gA(A):A))))).join(".")}function eA(A){return rA(oA(A))}function nA(A){let t=oA(A,!0);for(let{type:A,output:e,error:n}of t)if(!n&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return rA(t)}function oA(A,t){let e=0;return A.split(".").map((A=>{let n,o=f(A),r={input:o,offset:e};e+=o.length+1;try{let A,e=r.tokens=sA(o,b),l=e.length;if(l){let o=e[0],i=l>1||o.is_emoji;if(!i&&o.every((A=>A<128)))n=o,$(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(i&&(r.emoji=!0,o=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?gA(A):A)),$(n),o.length){!function(A){if(K.has(A[0]))throw new Error("leading combining mark")}(n),function(A){let t=A[0],e=B.get(t);if(e)throw new Error(`leading ${e}`);let n=-1;for(let o=1;o<A.length;o++){t=A[o];let r=B.get(t);if(r){if(n==o)throw new Error(`adjacent ${e} + ${r}`);n=o+1,e=r}}if(n==A.length)throw new Error(`trailing ${e}`)}(n);for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&K.has(t[0]))throw new Error(`emoji + combining mark: "${p(e[A-1])} + ${q([t[0]])}"`)}let t=[...new Set(o)],[r]=function(A){let t=G;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===G?iA(e):lA(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:n}=A;for(let n of t)if(!e.has(n))throw lA(A,n);if(n>=0)for(let e=1,o=N(t).length;e<o;e++)if(K.has(t[e])){let r=e+1;for(;r<o&&K.has(t[r]);)r++;if(r-e>n)throw new Error(`too many combining marks: ${A.N} "${p(t.slice(e-1,r))}" (${r-e}/${n})`);e=r}}(r,o),function(A,t){let e,n=[];for(let A of t){let t=H.get(A);if(1===t)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):[...n],!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(r,t),A=r.N}else A="Emoji"}else n=[],A="None";r.type=A}catch(A){r.error=A}return r.output=n,r}))}function rA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${q(t)}": ${n}`)}return p(n)})).join(".")}function lA(A,t){let e=X(t),n=G.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function iA(A){return new Error(`disallowed character: ${X(A)}`)}function sA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let o=cA(A);if(o)n.length&&(e.push(t(n)),n=[]),e.push(o);else{let t=A.pop();if(O.has(t))n.push(t);else{let A=S.get(t);if(A)n.push(...A);else if(!V.has(t))throw iA(t)}}}return n.length&&e.push(t(n)),e}function gA(A){return A.filter((A=>65039!=A))}function cA(A,t){let e,n,o=z,r=[],l=A.length;for(t&&(t.length=0);l;){let i=A[--l];if(o=o.B.find((A=>A.Q.has(i))),!o)break;if(o.S)n=i;else if(o.C&&i===n)break;r.push(i),o.F&&(r.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(e=BA(r,o),t&&t.push(...A.slice(l).reverse()),A.length=l)}return e}function BA(A,t){let e=v.from(A);return 2==t.V&&e.splice(1,1),e}function aA(){let A=[];return function t(e,n,o){if(e.S)o=n[n.length-1];else if(e.C&&o===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(BA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],o)}(z,[]),A.sort(w)}function CA(A,{nf:t=!0}={}){let e=f(A).reverse(),n=[],o=[];for(;e.length;){let A=cA(e,n);if(A)o.push({type:"emoji",emoji:A,input:n.slice(),cps:gA(A)});else{let A=e.pop();if(46==A)o.push({type:"stop",cp:A});else if(O.has(A))o.push({type:"valid",cps:[A]});else if(V.has(A))o.push({type:"ignored",cp:A});else{let t=S.get(A);t?o.push({type:"mapped",cp:A,cps:t.slice()}):o.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<o.length;A++){let e=o[A];if(fA(e.type))if(pA(e.cps)){let e=A+1;for(let A=e;A<o.length;A++){let{type:t,cps:n}=o[A];if(fA(t)){if(!pA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=o.slice(t,e),r=n.flatMap((A=>fA(A.type)?A.cps:[])),l=b(r);w(l,r)?(o.splice(t,e-t,{type:"nfc",input:r,cps:l,tokens0:wA(n),tokens:CA(p(l),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return wA(o)}function fA(A){return"valid"==A||"mapped"==A}function pA(A){return A.some((A=>y.has(A)))}function wA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function QA(A){return A.map(a).join(" ")}function EA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function uA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&AA(A)?(e.classList.add("code"),e.innerText=a(A)):e.innerText=q([A]),e}function dA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function MA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:o="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,i)=>{let s;switch(l.type){case"emoji":{s=document.createElement(o?"a":"span"),o&&(s.href=o.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?s.append(...A.map((A=>uA(A,!0)))):s.innerText=String.fromCodePoint(...l.emoji),s.title=dA({Type:"Emoji",Hex:QA(A),Beautified:QA(l.emoji)},r(l.type,A));break}case"nfc":if(s=document.createElement("div"),t)s.innerText=q(l.input),s.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));else{let A=MA(l.tokens0,{components:n,emoji_url:o,extra:r});l.tokens0.every((A=>"valid"===A.type))&&(A.querySelector(".valid").innerHTML=l.input.map((A=>q([A]))).join("<span>+</span>")),A.classList.add("before"),A.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));let t=MA(l.tokens,{components:n,emoji_url:o,extra:r});t.title=dA({Type:"NFC (Normalized)",Hex:QA(l.cps)},r(l.type,l.cps)),s.append(A,EA(),t)}break;case"valid":{s=document.createElement("span");let t=q(l.cps);e&&(1==A.length||i===A.length-1&&"stop"===A[i-1].type)&&/[a-z]/.test(t)&&s.classList.add(t),s.innerText=t,s.title=dA({Type:"Valid",Hex:QA(l.cps)},r(l.type,l.cps));break}case"mapped":{s=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=q([l.cp]),A.title=dA({Type:"Mapped (Match)",Hex:a(l.cp)},r(l.type,[l.cp])),s.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>q([A]))).join("​"),A.title=dA({Type:"Mapped (Replacement)",Hex:QA(l.cps)},r(l.type,l.cps)),s.append(EA(),A)}break}case"stop":case"ignored":case"disallowed":s=uA(l.cp),s.title=dA({Type:l.type,Hex:a(l.cp)},r(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return s.classList.add(l.type),s}))),l}function hA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tmargin: 0 2px;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}\n\t.tokens .nfc .before .valid span {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}",document.body.append(A)}export{w as compare_arrays,MA as dom_from_tokens,nA as ens_beautify,aA as ens_emoji,eA as ens_normalize,tA as ens_normalize_fragment,oA as ens_split,CA as ens_tokenize,f as explode_cp,a as hex_cp,_ as is_combining_mark,b as nfc,N as nfd,C as quote_cp,Q as random_choice,E as random_sample,u as run_tests,q as safe_str_from_cps,AA as should_escape,p as str_from_cps,hA as use_default_style};
