function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),r=1,o=[0,1];for(let A=1;A<n;A++)o.push(r+=e());let l=e(),s=t;t+=l;let c=0,i=0;function w(){return 0==c&&(i=i<<8|A[t++],c=8),i>>--c&1}const a=2**31,C=a>>>1,Q=a-1;let f=0;for(let A=0;A<31;A++)f=f<<1|w();let p=[],B=0,g=a;for(;;){let A=Math.floor(((f-B+1)*r-1)/g),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<o[n]?e=n:t=n}if(0==t)break;p.push(t);let l=B+Math.floor(g*o[t]/r),s=B+Math.floor(g*o[t+1]/r)-1;for(;0==((l^s)&C);)f=f<<1&Q|w(),l=l<<1&Q,s=s<<1&Q|1;for(;l&~s&536870912;)f=f&C|f<<1&Q>>>1|w(),l=l<<1^C,s=(s^C)<<1|C|1;B=l,g=1+s-l}let u=n-4;return p.map((t=>{switch(t-u){case 3:return u+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return u+256+(A[s++]<<8|A[s++]);case 1:return u+A[s++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let r=0,o=0,l=0,s=0;r<e;r++)s=s<<6|t[A.charCodeAt(r)],l+=6,l>=8&&(n[o++]=s>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let r=0,o=0;r<A;r++)n[r]=o+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),r=A();if(!r)break;t+=n;for(let A=0;A<r;A++)e.push(t+A);t+=r+1}return e}function r(A){return l((()=>{let t=n(A);if(t.length)return t}))}function o(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(c(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(i(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function s(A,t,n){let r=Array(A).fill().map((()=>[]));for(let o=0;o<t;o++)e(A,n).forEach(((A,t)=>r[t].push(A)));return r}function c(A,t){let e=1+t(),n=t(),r=l(t);return s(r.length,1+A,t).flatMap(((A,t)=>{let[o,...l]=A;return Array(r[t]).fill().map(((A,t)=>{let r=t*n;return[o+t*e,l.map((A=>A+r))]}))}))}function i(A,t){return s(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var w=A("");const a=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function C(A){return A.toString(16).toUpperCase().padStart(2,"0")}function Q(A){return`{${C(A)}}`}function f(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function p(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function B(A,t){let{length:e}=A,n=e-t.length;for(let r=0;0==n&&r<e;r++)n=A[r]-t[r];return n}function g(A,t=Math.random){return A[t()*A.length|0]}function u(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],r=Math.floor(n+e()*(A.length-n));A[n]=A[r],A[r]=t}A=A.slice(0,t)}return A}function d(A,t){let e=[];for(let n of t){let{name:t,norm:r,error:o}=n;"string"!=typeof r&&(r=t);try{let l=A(t);o?e.push({type:"expected error",result:l,...n}):l!=r&&e.push({type:"wrong norm",result:l,...n})}catch(A){o||e.push({type:"unexpected error",result:A.message,...n})}}return e}var M=A("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");function E(A){return A>>24&255}function D(A){return 16777215&A}const k=new Map(r(M).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),h=new Set(n(M)),m=new Map,I=new Map;for(let[A,t]of o(M)){if(!h.has(A)&&2==t.length){let[e,n]=t,r=I.get(e);r||(r=new Map,I.set(e,r)),r.set(n,A)}m.set(A,t.reverse())}const F=44032;function x(A){return A>=F&&A<55204}function U(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return F+588*(A-4352)+28*(t-4449);if(x(A)&&t>4519&&t<4547&&(A-F)%28==0)return A+(t-4519);{let e=I.get(A);return e&&(e=e.get(t),e)?e:-1}}function N(A){let t=[],e=[],n=!1;function r(A){let e=k.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(x(n)){let A=n-F,t=A%588/28|0,e=A%28;r(4352+(A/588|0)),r(4449+t),e>0&&r(4519+e)}else{let A=m.get(n);A?e.push(...A):r(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=E(t[0]);for(let e=1;e<t.length;e++){let n=E(t[e]);if(0==n||A<=n){A=n;continue}let r=e-1;for(;;){let e=t[r+1];if(t[r+1]=t[r],t[r]=e,!r)break;if(A=E(t[--r]),A<=n)break}A=E(t[e])}}return t}function T(A){return N(A).map(D)}function L(A){return function(A){let t=[],e=[],n=-1,r=0;for(let o of A){let A=E(o),l=D(o);if(-1==n)0==A?n=l:t.push(l);else if(r>0&&r>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),r=A;else{let o=U(n,l);o>=0?n=o:0==r&&0==A?(t.push(n),n=l):(e.push(l),r=A)}}return n>=0&&t.push(n,...e),t}(N(A))}function J(){return new Set(n(w))}const S=new Map(o(w)),G=J(),V=J(),R=J(),H=J(),j=r(w);function z(){return new Set([n(w).map((A=>j[A])),n(w)].flat(2))}const b=w(),P=l((A=>{let t=l(w).map((A=>A+96));if(t.length){let e=A>=b;t[0]-=32,t=p(t),e&&(t=`Restricted[${t}]`);let n=z(),r=z(),o=[...n,...r].sort(((A,t)=>A-t));return{N:t,P:n,M:w()-1,R:e,V:new Set(o)}}})),y=J(),v=new Map;[...y,...J()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let n=w(),r=e[t]=n?e[t-n]:{V:[],M:new Map};r.V.push(A),y.has(A)||v.set(A,r)}));for(let{V:A,M:t}of new Set(v.values())){let e=[];for(let t of A){let A=P.filter((A=>A.V.has(t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),A.forEach((A=>n.G.add(A)))}let n=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:r}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of r)t.set(A,e)}}let K=new Set,O=new Set;for(let A of P)for(let t of A.V)(K.has(t)?O:K).add(t);for(let A of K)v.has(A)||O.has(A)||v.set(A,1);const W=new Set([...K,...T(K)]),Y=n(w),X=function A(t){let e=l((()=>{let t=n(w).map((A=>Y[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),r=w(),o=r%3;r=r/3|0;let s=1&r;return r>>=1,{B:e,V:o,F:s,S:1&r,C:2&r,Q:new Set(t)}}([]);class Z extends Array{get is_emoji(){return!0}}function q(A,t=Q){let e=[];AA(A[0])&&e.push("◌");let n=0,r=A.length;for(let o=0;o<r;o++){let r=A[o];tA(r)&&(e.push(p(A.slice(n,o))),e.push(t(r)),n=o+1)}return e.push(p(A.slice(n,r))),e.join("")}function $(A){return(tA(A)?"":`"${q([A])}" `)+Q(A)}function _(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function AA(A){return V.has(A)}function tA(A){return R.has(A)}function eA(A,t=L){return A.split(".").map((A=>p(wA(f(A),t).flatMap((A=>A.is_emoji?aA(A):A))))).join(".")}function nA(A){return lA(oA(A))}function rA(A){let t=oA(A,!0);for(let{type:A,output:e,error:n}of t)if(!n&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return lA(t)}function oA(A,t){let e=0;return A.split(".").map((A=>{let n,r=f(A),o={input:r,offset:e};e+=r.length+1;try{let A,e=o.tokens=wA(r,L),l=e.length;if(l){let r=e[0],s=l>1||r.is_emoji;if(!s&&r.every((A=>A<128)))n=r,_(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(s&&(o.emoji=!0,r=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?aA(A):A)),_(n),r.length){if(V.has(n[0]))throw iA("leading combining mark");for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&V.has(t[0]))throw iA(`emoji + combining mark: "${p(e[A-1])} + ${q([t[0]])}"`)}!function(A){let t=A[0],e=a.get(t);if(e)throw iA(`leading ${e}`);let n=A.length,r=-1;for(let o=1;o<n;o++){t=A[o];let n=a.get(t);if(n){if(r==o)throw iA(`${e} + ${n}`);r=o+1,e=n}}if(r==n)throw iA(`trailing ${e}`)}(n);let t=[...new Set(r)],[o]=function(A){let t=P;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===P?sA(e):cA(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:n}=A;for(let n of t)if(!e.has(n))throw cA(A,n);if(n>=0)for(let e=1,r=T(t).length;e<r;e++)if(V.has(t[e])){let o=e+1;for(;o<r&&V.has(t[o]);)o++;if(o-e>n)throw new Error(`too many combining marks: ${A.N} "${p(t.slice(e-1,o))}" (${o-e}/${n})`);e=o}}(o,r),function(A,t){let e,n=[];for(let A of t){let t=v.get(A);if(1===t)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):[...n],!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(o,t),A=o.N}else A="Emoji"}else n=[],A="None";o.type=A}catch(A){o.error=A}return o.output=n,o}))}function lA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${q(t)}": ${n}`)}return p(n)})).join(".")}function sA(A){return new Error(`disallowed character: ${$(A)}`)}function cA(A,t){let e=$(t),n=P.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function iA(A){return new Error(`illegal placement: ${A}`)}function wA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let r=CA(A);if(r)n.length&&(e.push(t(n)),n=[]),e.push(r);else{let t=A.pop();if(W.has(t))n.push(t);else{let A=S.get(t);if(A)n.push(...A);else if(!G.has(t))throw sA(t)}}}return n.length&&e.push(t(n)),e}function aA(A){return A.filter((A=>65039!=A))}function CA(A,t){let e,n,r=X,o=[],l=A.length;for(t&&(t.length=0);l;){let s=A[--l];if(r=r.B.find((A=>A.Q.has(s))),!r)break;if(r.S)n=s;else if(r.C&&s===n)break;o.push(s),r.F&&(o.push(65039),l>0&&65039==A[l-1]&&l--),r.V&&(e=QA(o,r),t&&t.push(...A.slice(l).reverse()),A.length=l)}return e}function QA(A,t){let e=Z.from(A);return 2==t.V&&e.splice(1,1),e}function fA(){let A=[];return function t(e,n,r){if(e.S)r=n[n.length-1];else if(e.C&&r===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(QA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],r)}(X,[]),A.sort(B)}function pA(A,{nf:t=!0}={}){let e=f(A).reverse(),n=[],r=[];for(;e.length;){let A=CA(e,n);if(A)r.push({type:"emoji",emoji:A,input:n.slice(),cps:aA(A)});else{let A=e.pop();if(46==A)r.push({type:"stop",cp:A});else if(W.has(A))r.push({type:"valid",cps:[A]});else if(G.has(A))r.push({type:"ignored",cp:A});else{let t=S.get(A);t?r.push({type:"mapped",cp:A,cps:t.slice()}):r.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<r.length;A++){let e=r[A];if(BA(e.type))if(gA(e.cps)){let e=A+1;for(let A=e;A<r.length;A++){let{type:t,cps:n}=r[A];if(BA(t)){if(!gA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=r.slice(t,e),o=n.flatMap((A=>BA(A.type)?A.cps:[])),l=L(o);B(l,o)?(r.splice(t,e-t,{type:"nfc",input:o,cps:l,tokens0:uA(n),tokens:pA(p(l),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return uA(r)}function BA(A){return"valid"==A||"mapped"==A}function gA(A){return A.some((A=>H.has(A)))}function uA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function dA(A){return A.map(C).join(" ")}function MA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function EA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&tA(A)?(e.classList.add("code"),e.innerText=C(A)):e.innerText=q([A]),e}function DA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function kA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:r="https://emojipedia.org/%s",extra:o=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,s)=>{let c;switch(l.type){case"emoji":{c=document.createElement(r?"a":"span"),r&&(c.href=r.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?c.append(...A.map((A=>EA(A,!0)))):c.innerText=String.fromCodePoint(...l.emoji),c.title=DA({Type:"Emoji",Hex:dA(A),Beautified:dA(l.emoji)},o(l.type,A));break}case"nfc":if(c=document.createElement("div"),t)c.innerText=q(l.input),c.title=DA({Type:"NFC (Unnormalized)",Hex:dA(l.input)},o(l.type,l.input));else{let A=kA(l.tokens0,{components:n,emoji_url:r,extra:o});l.tokens0.every((A=>"valid"===A.type))&&(A.querySelector(".valid").innerHTML=l.input.map((A=>q([A]))).join("<span>+</span>")),A.classList.add("before"),A.title=DA({Type:"NFC (Unnormalized)",Hex:dA(l.input)},o(l.type,l.input));let t=kA(l.tokens,{components:n,emoji_url:r,extra:o});t.title=DA({Type:"NFC (Normalized)",Hex:dA(l.cps)},o(l.type,l.cps)),c.append(A,MA(),t)}break;case"valid":{c=document.createElement("span");let t=q(l.cps);e&&(1==A.length||s===A.length-1&&"stop"===A[s-1].type)&&/[a-z]/.test(t)&&c.classList.add(t),c.innerText=t,c.title=DA({Type:"Valid",Hex:dA(l.cps)},o(l.type,l.cps));break}case"mapped":{c=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=q([l.cp]),A.title=DA({Type:"Mapped (Match)",Hex:C(l.cp)},o(l.type,[l.cp])),c.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>q([A]))).join("​"),A.title=DA({Type:"Mapped (Replacement)",Hex:dA(l.cps)},o(l.type,l.cps)),c.append(MA(),A)}break}case"stop":case"ignored":case"disallowed":c=EA(l.cp),c.title=DA({Type:l.type,Hex:C(l.cp)},o(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return c.classList.add(l.type),c}))),l}function hA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t\toverflow: hidden;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\tborder-color: #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}\n\t.tokens .nfc .before .valid span {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}",document.body.append(A)}export{B as compare_arrays,kA as dom_from_tokens,rA as ens_beautify,fA as ens_emoji,nA as ens_normalize,eA as ens_normalize_fragment,oA as ens_split,pA as ens_tokenize,f as explode_cp,C as hex_cp,AA as is_combining_mark,L as nfc,T as nfd,Q as quote_cp,g as random_choice,u as random_sample,d as run_tests,q as safe_str_from_cps,tA as should_escape,p as str_from_cps,hA as use_default_style};
