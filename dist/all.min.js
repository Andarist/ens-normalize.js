function A(A){return function(A){let t=0;return()=>A[t++]}(function(A){let t=0;function e(){return A[t++]<<8|A[t++]}let n=e(),o=1,r=[0,1];for(let A=1;A<n;A++)r.push(o+=e());let l=e(),s=t;t+=l;let g=0,B=0;function i(){return 0==g&&(B=B<<8|A[t++],g=8),B>>--g&1}const a=2**31,c=a>>>1,f=a-1;let p=0;for(let A=0;A<31;A++)p=p<<1|i();let C=[],w=0,Q=a;for(;;){let A=Math.floor(((p-w+1)*o-1)/Q),t=0,e=n;for(;e-t>1;){let n=t+e>>>1;A<r[n]?e=n:t=n}if(0==t)break;C.push(t);let l=w+Math.floor(Q*r[t]/o),s=w+Math.floor(Q*r[t+1]/o)-1;for(;0==((l^s)&c);)p=p<<1&f|i(),l=l<<1&f,s=s<<1&f|1;for(;l&~s&536870912;)p=p&c|p<<1&f>>>1|i(),l=l<<1^c,s=(s^c)<<1|c|1;w=l,Q=1+s-l}let u=n-4;return C.map((t=>{switch(t-u){case 3:return u+65792+(A[s++]<<16|A[s++]<<8|A[s++]);case 2:return u+256+(A[s++]<<8|A[s++]);case 1:return u+A[s++];default:return t-1}}))}(function(A){let t=[];[..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach(((A,e)=>t[A.charCodeAt(0)]=e));let e=A.length,n=new Uint8Array(6*e>>3);for(let o=0,r=0,l=0,s=0;o<e;o++)s=s<<6|t[A.charCodeAt(o)],l+=6,l>=8&&(n[r++]=s>>(l-=8));return n}(A)))}function t(A){return 1&A?~A>>1:A>>1}function e(A,e){let n=Array(A);for(let o=0,r=0;o<A;o++)n[o]=r+=t(e());return n}function n(A,t=0){let e=[];for(;;){let n=A(),o=A();if(!o)break;t+=n;for(let A=0;A<o;A++)e.push(t+A);t+=o+1}return e}function o(A){return l((()=>{let t=n(A);if(t.length)return t}))}function r(A){let t=[];for(;;){let e=A();if(0==e)break;t.push(g(e,A))}for(;;){let e=A()-1;if(e<0)break;t.push(B(e,A))}return t.flat()}function l(A){let t=[];for(;;){let e=A(t.length);if(!e)break;t.push(e)}return t}function s(A,t,n){let o=Array(A).fill().map((()=>[]));for(let r=0;r<t;r++)e(A,n).forEach(((A,t)=>o[t].push(A)));return o}function g(A,t){let e=1+t(),n=t(),o=l(t);return s(o.length,1+A,t).flatMap(((A,t)=>{let[r,...l]=A;return Array(o[t]).fill().map(((A,t)=>{let o=t*n;return[r+t*e,l.map((A=>A+o))]}))}))}function B(A,t){return s(1+t(),1+A,t).map((A=>[A[0],A.slice(1)]))}var i=A("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");const a=new Map([[8217,"apostrophe"],[8260,"fraction slash"],[12539,"middle dot"]]);function c(A){return A.toString(16).toUpperCase().padStart(2,"0")}function f(A){return`{${c(A)}}`}function p(A){let t=[];for(let e=0,n=A.length;e<n;){let n=A.codePointAt(e);e+=n<65536?1:2,t.push(n)}return t}function C(A){let t=A.length;if(t<4096)return String.fromCodePoint(...A);let e=[];for(let n=0;n<t;)e.push(String.fromCodePoint(...A.slice(n,n+=4096)));return e.join("")}function w(A,t){let{length:e}=A,n=e-t.length;for(let o=0;0==n&&o<e;o++)n=A[o]-t[o];return n}function Q(A,t=Math.random){return A[t()*A.length|0]}function u(A,t,e=Math.random){if((A=A.slice()).length>t){for(let n=0;n<t;n++){let t=A[n],o=Math.floor(n+e()*(A.length-n));A[n]=A[o],A[o]=t}A=A.slice(0,t)}return A}function E(A,t){let e=[];for(let n of t){let{name:t,norm:o,error:r}=n;"string"!=typeof o&&(o=t);try{let l=A(t);r?e.push({type:"expected error",result:l,...n}):l!=o&&e.push({type:"wrong norm",result:l,...n})}catch(A){r||e.push({type:"unexpected error",result:A.message,...n})}}return e}var d=A("AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g");function h(A){return A>>24&255}function k(A){return 16777215&A}const M=new Map(o(d).flatMap(((A,t)=>A.map((A=>[A,t+1<<24]))))),D=new Set(n(d)),m=new Map,x=new Map;for(let[A,t]of r(d)){if(!D.has(A)&&2==t.length){let[e,n]=t,o=x.get(e);o||(o=new Map,x.set(e,o)),o.set(n,A)}m.set(A,t.reverse())}const F=44032;function I(A){return A>=F&&A<55204}function U(A,t){if(A>=4352&&A<4371&&t>=4449&&t<4470)return F+588*(A-4352)+28*(t-4449);if(I(A)&&t>4519&&t<4547&&(A-F)%28==0)return A+(t-4519);{let e=x.get(A);return e&&(e=e.get(t),e)?e:-1}}function N(A){let t=[],e=[],n=!1;function o(A){let e=M.get(A);e&&(n=!0,A|=e),t.push(A)}for(let n of A)for(;;){if(n<128)t.push(n);else if(I(n)){let A=n-F,t=A%588/28|0,e=A%28;o(4352+(A/588|0)),o(4449+t),e>0&&o(4519+e)}else{let A=m.get(n);A?e.push(...A):o(n)}if(!e.length)break;n=e.pop()}if(n&&t.length>1){let A=h(t[0]);for(let e=1;e<t.length;e++){let n=h(t[e]);if(0==n||A<=n){A=n;continue}let o=e-1;for(;;){let e=t[o+1];if(t[o+1]=t[o],t[o]=e,!o)break;if(A=h(t[--o]),A<=n)break}A=h(t[e])}}return t}function S(A){return N(A).map(k)}function L(A){return function(A){let t=[],e=[],n=-1,o=0;for(let r of A){let A=h(r),l=k(r);if(-1==n)0==A?n=l:t.push(l);else if(o>0&&o>=A)0==A?(t.push(n,...e),e.length=0,n=l):e.push(l),o=A;else{let r=U(n,l);r>=0?n=r:0==o&&0==A?(t.push(n),n=l):(e.push(l),o=A)}}return n>=0&&t.push(n,...e),t}(N(A))}function K(){return new Set(n(i))}const T=new Map(r(i)),b=K(),H=K(),R=K(),G=K(),J=o(i);function O(){return new Set([n(i).map((A=>J[A])),n(i)].flat(2))}const W=i(),j=l((A=>{let t=l(i).map((A=>A+96));if(t.length){let e=A>=W;t[0]-=32,t=C(t),e&&(t=`Restricted[${t}]`);let n=O(),o=O(),r=[...n,...o].sort(((A,t)=>A-t));return{N:t,P:n,M:i()-1,R:e,V:new Set(r)}}})),P=K(),z=new Map;[...P,...K()].sort(((A,t)=>A-t)).map(((A,t,e)=>{let n=i(),o=e[t]=n?e[t-n]:{V:[],M:new Map};o.V.push(A),P.has(A)||z.set(A,o)}));for(let{V:A,M:t}of new Set(z.values())){let e=[];for(let t of A){let A=j.filter((A=>A.V.has(t))),n=e.find((({G:t})=>A.some((A=>t.has(A)))));n||(n={G:new Set,V:[]},e.push(n)),n.V.push(t),A.forEach((A=>n.G.add(A)))}let n=e.flatMap((({G:A})=>[...A]));for(let{G:A,V:o}of e){let e=new Set(n.filter((t=>!A.has(t))));for(let A of o)t.set(A,e)}}let V=[...new Set(j.flatMap((A=>[...A.V])))];for(let A of V)z.has(A)||1!=j.filter((t=>t.V.has(A))).length||z.set(A,1);const y=new Set([...V,...S(V)]),Y=n(i),q=function A(t){let e=l((()=>{let t=n(i).map((A=>Y[A]));if(t.length)return A(t)})).sort(((A,t)=>t.Q.size-A.Q.size)),o=i(),r=o%3;o=o/3|0;let s=1&o;return o>>=1,{B:e,V:r,F:s,S:1&o,C:2&o,Q:new Set(t)}}([]);class v extends Array{get is_emoji(){return!0}}function Z(A,t=f){let e=[];_(A[0])&&e.push("◌");let n=0,o=A.length;for(let r=0;r<o;r++){let o=A[r];AA(o)&&(e.push(C(A.slice(n,r))),e.push(t(o)),n=r+1)}return e.push(C(A.slice(n,o))),e.join("")}function X(A){return(AA(A)?"":`"${Z([A])}" `)+f(A)}function $(A){for(let t=A.lastIndexOf(95);t>0;)if(95!==A[--t])throw new Error("underscore allowed only at start")}function _(A){return H.has(A)}function AA(A){return R.has(A)}function tA(A,t=L){return A.split(".").map((A=>C(gA(p(A),t).flatMap((A=>A.is_emoji?BA(A):A))))).join(".")}function eA(A){return rA(oA(A))}function nA(A){let t=oA(A,!0);for(let{type:A,output:e,error:n}of t)if(!n&&"Greek"!==A){let A=0;for(;;){let t=e.indexOf(958,A);if(t<0)break;e[t]=926,A=t+1}}return rA(t)}function oA(A,t){let e=0;return A.split(".").map((A=>{let n,o=p(A),r={input:o,offset:e};e+=o.length+1;try{let A,e=r.tokens=gA(o,L),l=e.length;if(l){let o=e[0],s=l>1||o.is_emoji;if(!s&&o.every((A=>A<128)))n=o,$(n),function(A){if(A.length>=4&&45==A[2]&&45==A[3])throw new Error("invalid label extension")}(n),A="ASCII";else if(s&&(r.emoji=!0,o=e.flatMap((A=>A.is_emoji?[]:A))),n=e.flatMap((A=>!t&&A.is_emoji?BA(A):A)),$(n),o.length){!function(A){if(H.has(A[0]))throw new Error("leading combining mark")}(n),function(A){let t=A[0],e=a.get(t);if(e)throw new Error(`leading ${e}`);let n=-1;for(let o=1;o<A.length;o++){t=A[o];let r=a.get(t);if(r){if(n==o)throw new Error(`adjacent ${e} + ${r}`);n=o+1,e=r}}if(n==A.length)throw new Error(`trailing ${e}`)}(n);for(let A=1;A<l;A++){let t=e[A];if(!t.is_emoji&&H.has(t[0]))throw new Error(`emoji + combining mark: "${C(e[A-1])} + ${Z([t[0]])}"`)}let t=[...new Set(o)],[r]=function(A){let t=j;for(let e of A){let A=t.filter((A=>A.V.has(e)));if(!A.length)throw t===j?sA(e):lA(t[0],e);if(t=A,1==A.length)break}return t}(t);!function(A,t){let{V:e,M:n}=A;for(let n of t)if(!e.has(n))throw lA(A,n);if(n>=0)for(let e=1,o=S(t).length;e<o;e++)if(H.has(t[e])){let r=e+1;for(;r<o&&H.has(t[r]);)r++;if(r-e>n)throw new Error(`too many combining marks: ${A.N} "${C(t.slice(e-1,r))}" (${r-e}/${n})`);e=r}}(r,o),function(A,t){let e,n=[];for(let A of t){let t=z.get(A);if(1===t)return;if(t){let n=t.M.get(A);if(e=e?e.filter((A=>n.has(A))):[...n],!e.length)return}else n.push(A)}if(e)for(let t of e)if(n.every((A=>t.V.has(A))))throw new Error(`whole-script confusable: ${A.N}/${t.N}`)}(r,t),A=r.N}else A="Emoji"}else n=[],A="None";r.type=A}catch(A){r.error=A}return r.output=n,r}))}function rA(A){return A.map((({input:t,error:e,output:n})=>{if(e){let n=e.message;throw new Error(1==A.length?n:`Invalid label "${Z(t)}": ${n}`)}return C(n)})).join(".")}function lA(A,t){let e=X(t),n=j.find((A=>A.P.has(t)));return n&&(e=`${n.N} ${e}`),new Error(`illegal mixture: ${A.N} + ${e}`)}function sA(A){return new Error(`disallowed character: ${X(A)}`)}function gA(A,t){let e=[],n=[];for(A=A.slice().reverse();A.length;){let o=iA(A);if(o)n.length&&(e.push(t(n)),n=[]),e.push(o);else{let t=A.pop();if(y.has(t))n.push(t);else{let A=T.get(t);if(A)n.push(...A);else if(!b.has(t))throw sA(t)}}}return n.length&&e.push(t(n)),e}function BA(A){return A.filter((A=>65039!=A))}function iA(A,t){let e,n,o=q,r=[],l=A.length;for(t&&(t.length=0);l;){let s=A[--l];if(o=o.B.find((A=>A.Q.has(s))),!o)break;if(o.S)n=s;else if(o.C&&s===n)break;r.push(s),o.F&&(r.push(65039),l>0&&65039==A[l-1]&&l--),o.V&&(e=aA(r,o),t&&t.push(...A.slice(l).reverse()),A.length=l)}return e}function aA(A,t){let e=v.from(A);return 2==t.V&&e.splice(1,1),e}function cA(){let A=[];return function t(e,n,o){if(e.S)o=n[n.length-1];else if(e.C&&o===n[n.length-1])return;e.F&&n.push(65039),e.V&&A.push(aA(n,e));for(let A of e.B)for(let e of A.Q)t(A,[...n,e],o)}(q,[]),A.sort(w)}function fA(A,{nf:t=!0}={}){let e=p(A).reverse(),n=[],o=[];for(;e.length;){let A=iA(e,n);if(A)o.push({type:"emoji",emoji:A,input:n.slice(),cps:BA(A)});else{let A=e.pop();if(46==A)o.push({type:"stop",cp:A});else if(y.has(A))o.push({type:"valid",cps:[A]});else if(b.has(A))o.push({type:"ignored",cp:A});else{let t=T.get(A);t?o.push({type:"mapped",cp:A,cps:t.slice()}):o.push({type:"disallowed",cp:A})}}}if(t)for(let A=0,t=-1;A<o.length;A++){let e=o[A];if(pA(e.type))if(CA(e.cps)){let e=A+1;for(let A=e;A<o.length;A++){let{type:t,cps:n}=o[A];if(pA(t)){if(!CA(n))break;e=A+1}else if("ignored"!==t)break}t<0&&(t=A);let n=o.slice(t,e),r=n.flatMap((A=>pA(A.type)?A.cps:[])),l=L(r);w(l,r)?(o.splice(t,e-t,{type:"nfc",input:r,cps:l,tokens0:wA(n),tokens:fA(C(l),{nf:!1})}),A=t):A=e-1,t=-1}else t=A;else"ignored"!==e.type&&(t=-1)}return wA(o)}function pA(A){return"valid"==A||"mapped"==A}function CA(A){return A.some((A=>G.has(A)))}function wA(A){for(let t=0;t<A.length;t++)if("valid"==A[t].type){let e=t+1;for(;e<A.length&&"valid"==A[e].type;)e++;A.splice(t,e-t,{type:"valid",cps:A.slice(t,e).flatMap((A=>A.cps))})}return A}function QA(A){return A.map(c).join(" ")}function uA(){let A=document.createElement("span");return A.classList.add("arrow"),A.innerHTML="➔",A}function EA(A,t){let e=document.createElement("span");return 8205==A?(e.classList.add("mod","zwj"),e.innerText="ZWJ"):8204==A?(e.classList.add("mod","zwj"),e.innerText="ZWNJ"):65039==A?(e.classList.add("mod","dropped","style"),e.innerText="FE0F"):8419==A?(e.classList.add("mod","keycap"),e.innerText="Keycap"):A>=917537&&A<=917630?(e.classList.add("mod","tag"),e.innerText=String.fromCodePoint(A-917504)):917631==A?(e.classList.add("mod","tag","end"),e.innerText="⌫"):!t&&AA(A)?(e.classList.add("code"),e.innerText=c(A)):e.innerText=Z([A]),e}function dA(A,t){let e=Object.entries(A).map((([A,t])=>`${A}: ${t}`));return Array.isArray(t)&&e.push(...t),e.join("\n")}function hA(A,{before:t=!1,tld_class:e=!0,components:n=!1,emoji_url:o="https://emojipedia.org/%s",extra:r=(()=>{})}={}){let l=document.createElement("div");return l.classList.add("tokens"),t&&(A=A.flatMap((A=>"nfc"!==A.type||A.tokens.every((A=>"valid"==A.type))?A:A.tokens))),l.append(...A.map(((l,s)=>{let g;switch(l.type){case"emoji":{g=document.createElement(o?"a":"span"),o&&(g.href=o.replace("%s",String.fromCodePoint(...l.emoji)));let A=t?l.input:l.cps;n?g.append(...A.map((A=>EA(A,!0)))):g.innerText=String.fromCodePoint(...l.emoji),g.title=dA({Type:"Emoji",Hex:QA(A),Beautified:QA(l.emoji)},r(l.type,A));break}case"nfc":if(g=document.createElement("div"),t)g.innerText=Z(l.input),g.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));else{let A=hA(l.tokens0,{components:n,emoji_url:o,extra:r});l.tokens0.every((A=>"valid"===A.type))&&(A.querySelector(".valid").innerHTML=l.input.map((A=>Z([A]))).join("<span>+</span>")),A.classList.add("before"),A.title=dA({Type:"NFC (Unnormalized)",Hex:QA(l.input)},r(l.type,l.input));let t=hA(l.tokens,{components:n,emoji_url:o,extra:r});t.title=dA({Type:"NFC (Normalized)",Hex:QA(l.cps)},r(l.type,l.cps)),g.append(A,uA(),t)}break;case"valid":{g=document.createElement("span");let t=Z(l.cps);e&&(1==A.length||s===A.length-1&&"stop"===A[s-1].type)&&/[a-z]/.test(t)&&g.classList.add(t),g.innerText=t,g.title=dA({Type:"Valid",Hex:QA(l.cps)},r(l.type,l.cps));break}case"mapped":{g=document.createElement("div");let A=document.createElement("span");if(A.classList.add("before"),A.innerText=Z([l.cp]),A.title=dA({Type:"Mapped (Match)",Hex:c(l.cp)},r(l.type,[l.cp])),g.append(A),!t){let A=document.createElement("span");A.innerText=l.cps.map((A=>Z([A]))).join("​"),A.title=dA({Type:"Mapped (Replacement)",Hex:QA(l.cps)},r(l.type,l.cps)),g.append(uA(),A)}break}case"stop":case"ignored":case"disallowed":g=EA(l.cp),g.title=dA({Type:l.type,Hex:c(l.cp)},r(l.type,[l.cp]));break;default:throw new TypeError(`unknown token type: ${l.type}`)}return g.classList.add(l.type),g}))),l}function kA(){let A=document.createElement("style");A.innerText="\n\t.tokens {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tgap: 2px;\n\t}\n\t.tokens > * {\n\t\tpadding: 2px 4px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 4px;\n\t\tborder-radius: 5px;\n\t}\n\t.tokens a {\n\t\ttext-decoration: none;\n\t}\n\t.tokens a:hover {\n\t\toutline: 2px solid #00f;\n\t}\n\t.tokens .valid {\n\t\tbackground: #cfc;\n\t\tborder: 2px solid #0a0;\n\t\tline-break: anywhere;\n\t}\n\t.tokens .valid.eth {\n\t\tcolor: #fff;\n\t\tbackground: #58f;\n\t\tborder: none;\n\t}\n\t.tokens .valid.com {\n\t\tcolor: #fff;\n\t\tbackground: #0a0;\n\t\tborder: none;\n\t}\n\t.tokens .ignored {\n\t\tcolor: #fff;\n\t\tbackground: #aaa;\n\t\tfont-size: 75%;\n\t\tfont-family: monospace;\n\t}\n\t.tokens .disallowed {\n\t\tbackground: #c00;\t\n\t\tmin-width: 5px;\n\t\tmin-height: 1em;\n\t\tborder-radius: 5px;\n\t\tcolor: #fff;\n\t}\n\t.tokens .disallowed.code {\n\t\tfont-size: 75%;\n\t\tbackground: #800;\n\t}\n\t.tokens .disallowed.mod {\n\t\tborder: 2px solid #800;\n\t\tfont-size: 80%;\n\t}\n\t.tokens .disallowed.mod.tag {\n\t\tbackground: #f00;\n\t\tcolor: #000;\n\t}\n\t.tokens .mapped {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #66f;\n\t\tbackground: #ccf;\n\t}\n\t.tokens .mapped span:first-child {\n\t\tmargin-bottom: -4px;\n\t\tborder-bottom: 4px solid #000;\n\t\ttext-align: center;\n\t\tmin-width: 0.5rem;\n\t}\n\t.tokens .stop {\n\t\tfont-weight: bold;\n\t\tbackground: linear-gradient(#fff, #ff0);\n\t\tpadding-bottom: 0;\n\t\tborder: 1px solid #ccc;\n\t}\n\t.tokens .emoji {\n\t\tborder: 2px solid #0aa;\n\t\tbackground: #cff;\n\t\tmargin: 0 2px;\n\t\tcolor: #000;\n\t}\n\t.tokens .mod {\n\t\tcolor: #fff;\n\t}\n\t.tokens * .mod {\n\t\tfont-size: 70%;\n\t\tpadding: 2px;\n\t\tborder-radius: 3px;\n\t}\n\t.tokens .emoji .mod {\n\t\tbackground: #333;\n\t}\n\t.tokens .emoji .mod.zwj {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag {\n\t\tbackground: #0aa;\n\t}\n\t.tokens .emoji .mod.tag.end {\n\t\tbackground: #066;\n\t}\n\t.tokens .emoji .mod.dropped {\n\t\tbackground: #aaa;\t\t\n\t}\n\t.tokens .arrow {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}\n\t.tokens .code {\n\t\tfont-family: monospace;\n\t}\n\t.tokens .nfc {\n\t\tdisplay: flex;\n\t\tborder: 2px solid #c80;\n\t\tbackground: #fd8;\n\t\tborder-radius: 5px;\n\t\tpadding: 2px;\n\t}\n\t.tokens .nfc .before .valid span {\n\t\tcolor: rgba(0, 0, 0, 0.35);\n\t}",document.body.append(A)}export{w as compare_arrays,hA as dom_from_tokens,nA as ens_beautify,cA as ens_emoji,eA as ens_normalize,tA as ens_normalize_fragment,oA as ens_split,fA as ens_tokenize,p as explode_cp,c as hex_cp,_ as is_combining_mark,L as nfc,S as nfd,f as quote_cp,Q as random_choice,u as random_sample,E as run_tests,Z as safe_str_from_cps,AA as should_escape,C as str_from_cps,kA as use_default_style};
